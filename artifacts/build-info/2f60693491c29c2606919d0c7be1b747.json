{
	"id": "2f60693491c29c2606919d0c7be1b747",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"smartContract_flat.sol": {
				"content": "\r\n// File: contracts/Token/IERC20.sol\r\n//SPDX-License-Identifier: MIT\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.13;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\n// File: contracts/Token/extensions/IERC20Metadata.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// File: contracts/Token/utils/Context.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\n\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: contracts/Token/ERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint256 private _decimal;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(\r\n        string memory name_,\r\n        string memory symbol_,\r\n        uint256 decimal_\r\n    ) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _decimal = decimal_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 9;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(\r\n            currentAllowance >= subtractedValue,\r\n            \"ERC20: decreased allowance below zero\"\r\n        );\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(\r\n            fromBalance >= amount,\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(\r\n                currentAllowance >= amount,\r\n                \"ERC20: insufficient allowance\"\r\n            );\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n// File: contracts/Token/utils/Ownable.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\n\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// File: contracts/Token/Token.sol\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract Token is Ownable, ERC20 {\r\n    uint256 public _totalSupply;\r\n\r\n    constructor() ERC20(\"COIN\", \"CN\", 9) {\r\n        _totalSupply = 100000000 * (10**9);\r\n        _mint(owner(), _totalSupply);\r\n    }\r\n\r\n    function balance(address account) public view returns (uint256) {\r\n        return balanceOf(account);\r\n    }\r\n\r\n    function transferPrice(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public {\r\n        _transfer(from, to, amount);\r\n    }\r\n\r\n    function mint(address account, uint256 amount) public {\r\n        _mint(account, amount);\r\n    }\r\n\r\n    function burn(address account, uint256 amount) public {\r\n        _burn(account, amount);\r\n    }\r\n}\r\n\r\n// File: contracts/Token/utils/SafeMath.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\r\n\r\n\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n// File: contracts/smartContract.sol\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract smartContract is Ownable {\r\n    using SafeMath for uint256;\r\n    address public AdminAddress;\r\n    Token public Coin;\r\n    uint256 investerID;\r\n    bool public initialized;\r\n\r\n    mapping(address => mapping(uint256 => purchaseInfo)) public buyInfo;\r\n    mapping(address => uint256[]) getIDByAddress;\r\n    mapping(uint256 => uint256) public burningAmount;\r\n    mapping(uint256 => uint256) public amountAfterBurning;\r\n    mapping(uint256 => uint256) public ownerSurplusToAdmin;\r\n\r\n    struct purchaseInfo {\r\n        uint256 ID;\r\n        uint256 buyTime;\r\n        uint256 purchaseToken;\r\n        uint256 burnToken;\r\n        uint256 userGets;\r\n        uint256 ownerSurplus;\r\n        uint256 BNBchargedByAdmin;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(AdminAddress == _msgSender(), \"Error: caller is not the Admin\");\r\n        _;\r\n    }\r\n\r\n    event buyTokenDetailsAddresses(\r\n        address user,\r\n        address AdminAddress,\r\n        address owner\r\n    );\r\n\r\n    event buyTokenDetails(\r\n        uint256 amount,\r\n        uint256 burningAmount,\r\n        uint256 amountAfterBurning,\r\n        uint256 ownerSurplus,\r\n        uint256 BNBchargedByAdmin\r\n    );\r\n\r\n    function initialize(\r\n        Token _Coin,\r\n        address _adminAddress,\r\n        uint256 amount\r\n    ) public onlyOwner {\r\n        require(initialized != true, \"Already Initialized\");\r\n        Coin = Token(_Coin);\r\n        AdminAddress = address(_adminAddress);\r\n        Coin.transferPrice(owner(), _adminAddress, amount);\r\n        initialized = true;\r\n    }\r\n\r\n    function setAdminAddress(address _admin) public onlyOwner {\r\n        AdminAddress = _admin;\r\n    }\r\n\r\n    function totalInvesters() public view returns (uint256) {\r\n        return investerID;\r\n    }\r\n\r\n    function getIdsOfUser(address user) public view returns (uint256[] memory) {\r\n        return getIDByAddress[user];\r\n    }\r\n\r\n    function buyToken(uint256 amount, address user) public payable {\r\n        require(msg.sender == AdminAddress, \"Only Admin can make transaction\");\r\n        require(\r\n            Coin.balance(AdminAddress) > amount,\r\n            \"Error: Admin does not have enough balance\"\r\n        );\r\n        unchecked {\r\n            investerID++;\r\n        }\r\n        uint256 id = investerID;\r\n                getIDByAddress[user].push(id);\r\n        burningAmount[id] = (1 * amount) / 100;\r\n        amountAfterBurning[id] = amount.sub(burningAmount[id]);\r\n        Coin.transferPrice(AdminAddress, user, amountAfterBurning[id]);\r\n\r\n        buyInfo[user][id].ID = investerID;\r\n        buyInfo[user][id].buyTime = block.timestamp;\r\n        buyInfo[user][id].purchaseToken = amount;\r\n        buyInfo[user][id].burnToken = burningAmount[id];\r\n        buyInfo[user][id].userGets = amountAfterBurning[id];\r\n        ownerSurplusToAdmin[id] = amountAfterBurning[id].div(2);\r\n        require(\r\n            Coin.balance(owner()) > ownerSurplusToAdmin[id],\r\n            \"Error: Owner does not have enough balance\"\r\n        );\r\n        buyInfo[user][id].ownerSurplus = ownerSurplusToAdmin[id];\r\n        Coin.transferPrice(owner(), AdminAddress, ownerSurplusToAdmin[id]);\r\n        msg.value == (1 * ownerSurplusToAdmin[id]).div(1000000000);\r\n        payable(owner()).transfer(msg.value);\r\n        buyInfo[user][id].BNBchargedByAdmin = msg.value;\r\n        emit buyTokenDetailsAddresses(user, AdminAddress, owner());\r\n        emit buyTokenDetails(\r\n            amount,\r\n            burningAmount[id],\r\n            amountAfterBurning[id],\r\n            ownerSurplusToAdmin[id],\r\n            msg.value\r\n        );\r\n    }\r\n\r\n    event swapTokenBNB(address user, uint256 ownerInitiative, uint256 BNB);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"smartContract_flat.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x8719c32dcc545738040a58763b52918cfe883c74383c50fabcadd45e0eb76258\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6d5e84c45a6856591d0ea3a4bc03be6e70869deac19d8512b06a213f1dcd20\",\"dweb:/ipfs/QmQU5Mz6H1z7WcMXnV78SHj1C1UF27fK73nfZLAtKSxj4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "decimal_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smartContract_flat.sol\":5832:17884  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"smartContract_flat.sol\":6457:6655  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"smartContract_flat.sol\":6576:6589  _name = name_ */\n  dup3\n  mload\n  tag_6\n  swap1\n    /* \"smartContract_flat.sol\":6576:6581  _name */\n  0x03\n  swap1\n    /* \"smartContract_flat.sol\":6576:6589  _name = name_ */\n  0x20\n  dup7\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"smartContract_flat.sol\":6600:6617  _symbol = symbol_ */\n  dup2\n  mload\n  tag_8\n  swap1\n    /* \"smartContract_flat.sol\":6600:6607  _symbol */\n  0x04\n  swap1\n    /* \"smartContract_flat.sol\":6600:6617  _symbol = symbol_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"smartContract_flat.sol\":6628:6636  _decimal */\n  0x05\n    /* \"smartContract_flat.sol\":6628:6647  _decimal = decimal_ */\n  sstore\n  pop\n    /* \"smartContract_flat.sol\":5832:17884  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  tag_23\n  swap1\n  pop\n  jump\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1659   */\ntag_3:\n    /* \"#utility.yul\":1144:1150   */\n  0x00\n    /* \"#utility.yul\":1152:1158   */\n  dup1\n    /* \"#utility.yul\":1160:1166   */\n  0x00\n    /* \"#utility.yul\":1213:1215   */\n  0x60\n    /* \"#utility.yul\":1201:1210   */\n  dup5\n    /* \"#utility.yul\":1192:1199   */\n  dup7\n    /* \"#utility.yul\":1188:1211   */\n  sub\n    /* \"#utility.yul\":1184:1216   */\n  slt\n    /* \"#utility.yul\":1181:1233   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1229:1230   */\n  0x00\n    /* \"#utility.yul\":1226:1227   */\n  dup1\n    /* \"#utility.yul\":1219:1231   */\n  revert\n    /* \"#utility.yul\":1181:1233   */\ntag_37:\n    /* \"#utility.yul\":1256:1272   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1321:1335   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1318:1352   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1348:1349   */\n  0x00\n    /* \"#utility.yul\":1345:1346   */\n  dup1\n    /* \"#utility.yul\":1338:1350   */\n  revert\n    /* \"#utility.yul\":1318:1352   */\ntag_38:\n    /* \"#utility.yul\":1371:1432   */\n  tag_39\n    /* \"#utility.yul\":1424:1431   */\n  dup8\n    /* \"#utility.yul\":1415:1421   */\n  dup4\n    /* \"#utility.yul\":1404:1413   */\n  dup9\n    /* \"#utility.yul\":1400:1422   */\n  add\n    /* \"#utility.yul\":1371:1432   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1361:1432   */\n  swap5\n  pop\n    /* \"#utility.yul\":1478:1480   */\n  0x20\n    /* \"#utility.yul\":1467:1476   */\n  dup7\n    /* \"#utility.yul\":1463:1481   */\n  add\n    /* \"#utility.yul\":1457:1482   */\n  mload\n    /* \"#utility.yul\":1441:1482   */\n  swap2\n  pop\n    /* \"#utility.yul\":1507:1509   */\n  dup1\n    /* \"#utility.yul\":1497:1505   */\n  dup3\n    /* \"#utility.yul\":1494:1510   */\n  gt\n    /* \"#utility.yul\":1491:1527   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1523:1524   */\n  0x00\n    /* \"#utility.yul\":1520:1521   */\n  dup1\n    /* \"#utility.yul\":1513:1525   */\n  revert\n    /* \"#utility.yul\":1491:1527   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1546:1609   */\n  tag_41\n    /* \"#utility.yul\":1601:1608   */\n  dup7\n    /* \"#utility.yul\":1590:1598   */\n  dup3\n    /* \"#utility.yul\":1579:1588   */\n  dup8\n    /* \"#utility.yul\":1575:1599   */\n  add\n    /* \"#utility.yul\":1546:1609   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1536:1609   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1649:1651   */\n  0x40\n    /* \"#utility.yul\":1638:1647   */\n  dup5\n    /* \"#utility.yul\":1634:1652   */\n  add\n    /* \"#utility.yul\":1628:1653   */\n  mload\n    /* \"#utility.yul\":1618:1653   */\n  swap1\n  pop\n    /* \"#utility.yul\":1036:1659   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1664:2044   */\ntag_11:\n    /* \"#utility.yul\":1743:1744   */\n  0x01\n    /* \"#utility.yul\":1739:1751   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1786:1798   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1807:1868   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1861:1865   */\n  0x7f\n    /* \"#utility.yul\":1853:1859   */\n  dup3\n    /* \"#utility.yul\":1849:1866   */\n  and\n    /* \"#utility.yul\":1839:1866   */\n  swap2\n  pop\n    /* \"#utility.yul\":1807:1868   */\ntag_43:\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1906:1912   */\n  dup3\n    /* \"#utility.yul\":1903:1917   */\n  lt\n    /* \"#utility.yul\":1883:1901   */\n  dup2\n    /* \"#utility.yul\":1880:1918   */\n  sub\n    /* \"#utility.yul\":1877:2038   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1960:1970   */\n  0x4e487b71\n    /* \"#utility.yul\":1955:1958   */\n  0xe0\n    /* \"#utility.yul\":1951:1971   */\n  shl\n    /* \"#utility.yul\":1948:1949   */\n  0x00\n    /* \"#utility.yul\":1941:1972   */\n  mstore\n    /* \"#utility.yul\":1995:1999   */\n  0x22\n    /* \"#utility.yul\":1992:1993   */\n  0x04\n    /* \"#utility.yul\":1985:2000   */\n  mstore\n    /* \"#utility.yul\":2023:2027   */\n  0x24\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2013:2028   */\n  revert\n    /* \"#utility.yul\":1877:2038   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1664:2044   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"smartContract_flat.sol\":5832:17884  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"smartContract_flat.sol\":5832:17884  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"smartContract_flat.sol\":6725:6825  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smartContract_flat.sol\":9216:9458  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"smartContract_flat.sol\":9216:9458  function approve(address spender, uint256 amount)... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"smartContract_flat.sol\":7844:7952  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"smartContract_flat.sol\":7932:7944  _totalSupply */\n      sload(0x02)\n        /* \"smartContract_flat.sol\":7844:7952  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":7844:7952  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"smartContract_flat.sol\":10038:10333  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"smartContract_flat.sol\":7687:7779  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"smartContract_flat.sol\":7770:7771  9 */\n      0x09\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"smartContract_flat.sol\":7687:7779  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"smartContract_flat.sol\":10742:11012  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"smartContract_flat.sol\":8015:8192  function balanceOf(address account)... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":8166:8184  _balances[account] */\n      and\n        /* \"smartContract_flat.sol\":8134:8141  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":8166:8184  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"smartContract_flat.sol\":8015:8192  function balanceOf(address account)... */\n      jump\n        /* \"smartContract_flat.sol\":6944:7048  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"smartContract_flat.sol\":11515:12020  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"smartContract_flat.sol\":8398:8632  function transfer(address to, uint256 amount)... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"smartContract_flat.sol\":8695:8896  function allowance(address owner, address spender)... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"smartContract_flat.sol\":6725:6825  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"smartContract_flat.sol\":6779:6792  string memory */\n      0x60\n        /* \"smartContract_flat.sol\":6812:6817  _name */\n      0x03\n        /* \"smartContract_flat.sol\":6805:6817  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":6725:6825  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"smartContract_flat.sol\":9216:9458  function approve(address spender, uint256 amount)... */\n    tag_22:\n        /* \"smartContract_flat.sol\":9335:9339  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":9396:9428  _approve(owner, spender, amount) */\n      tag_73\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":9412:9419  spender */\n      dup6\n        /* \"smartContract_flat.sol\":9421:9427  amount */\n      dup6\n        /* \"smartContract_flat.sol\":9396:9404  _approve */\n      tag_74\n        /* \"smartContract_flat.sol\":9396:9428  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"smartContract_flat.sol\":9446:9450  true */\n      0x01\n      swap4\n        /* \"smartContract_flat.sol\":9216:9458  function approve(address spender, uint256 amount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":10038:10333  function transferFrom(... */\n    tag_32:\n        /* \"smartContract_flat.sol\":10169:10173  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":10227:10265  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"smartContract_flat.sol\":10243:10247  from */\n      dup6\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup3\n        /* \"smartContract_flat.sol\":10258:10264  amount */\n      dup6\n        /* \"smartContract_flat.sol\":10227:10242  _spendAllowance */\n      tag_79\n        /* \"smartContract_flat.sol\":10227:10265  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"smartContract_flat.sol\":10276:10303  _transfer(from, to, amount) */\n      tag_80\n        /* \"smartContract_flat.sol\":10286:10290  from */\n      dup6\n        /* \"smartContract_flat.sol\":10292:10294  to */\n      dup6\n        /* \"smartContract_flat.sol\":10296:10302  amount */\n      dup6\n        /* \"smartContract_flat.sol\":10276:10285  _transfer */\n      tag_81\n        /* \"smartContract_flat.sol\":10276:10303  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"smartContract_flat.sol\":10321:10325  true */\n      0x01\n      swap5\n        /* \"smartContract_flat.sol\":10038:10333  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":10742:11012  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_40:\n        /* \"smartContract_flat.sol\":10857:10861  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":10918:10982  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":10934:10941  spender */\n      dup6\n        /* \"smartContract_flat.sol\":10971:10981  addedValue */\n      dup6\n        /* \"smartContract_flat.sol\":10943:10968  allowance(owner, spender) */\n      tag_86\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup4\n        /* \"smartContract_flat.sol\":10934:10941  spender */\n      dup4\n        /* \"smartContract_flat.sol\":10943:10952  allowance */\n      tag_61\n        /* \"smartContract_flat.sol\":10943:10968  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"smartContract_flat.sol\":10943:10981  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"smartContract_flat.sol\":10918:10926  _approve */\n      tag_74\n        /* \"smartContract_flat.sol\":10918:10982  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":6944:7048  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"smartContract_flat.sol\":7000:7013  string memory */\n      0x60\n        /* \"smartContract_flat.sol\":7033:7040  _symbol */\n      0x04\n        /* \"smartContract_flat.sol\":7026:7040  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"smartContract_flat.sol\":11515:12020  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_52:\n        /* \"smartContract_flat.sol\":11635:11639  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":11635:11639  bool */\n      dup2\n        /* \"smartContract_flat.sol\":11723:11748  allowance(owner, spender) */\n      tag_98\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup3\n        /* \"smartContract_flat.sol\":11740:11747  spender */\n      dup7\n        /* \"smartContract_flat.sol\":11723:11732  allowance */\n      tag_61\n        /* \"smartContract_flat.sol\":11723:11748  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"smartContract_flat.sol\":11696:11748  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":11801:11816  subtractedValue */\n      dup4\n        /* \"smartContract_flat.sol\":11781:11797  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":11781:11816  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":11759:11881  require(... */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"smartContract_flat.sol\":11759:11881  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":11759:11881  require(... */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"smartContract_flat.sol\":11917:11977  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"smartContract_flat.sol\":11926:11931  owner */\n      dup3\n        /* \"smartContract_flat.sol\":11933:11940  spender */\n      dup7\n        /* \"smartContract_flat.sol\":11961:11976  subtractedValue */\n      dup7\n        /* \"smartContract_flat.sol\":11942:11958  currentAllowance */\n      dup5\n        /* \"smartContract_flat.sol\":11942:11976  currentAllowance - subtractedValue */\n      sub\n        /* \"smartContract_flat.sol\":11917:11925  _approve */\n      tag_74\n        /* \"smartContract_flat.sol\":11917:11977  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":8398:8632  function transfer(address to, uint256 amount)... */\n    tag_56:\n        /* \"smartContract_flat.sol\":8513:8517  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":8574:8602  _transfer(owner, to, amount) */\n      tag_73\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":8591:8593  to */\n      dup6\n        /* \"smartContract_flat.sol\":8595:8601  amount */\n      dup6\n        /* \"smartContract_flat.sol\":8574:8583  _transfer */\n      tag_81\n        /* \"smartContract_flat.sol\":8574:8602  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":8695:8896  function allowance(address owner, address spender)... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":8861:8879  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"smartContract_flat.sol\":8829:8836  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":8861:8879  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":8861:8872  _allowances */\n      0x01\n        /* \"smartContract_flat.sol\":8861:8879  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":8861:8888  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"smartContract_flat.sol\":8695:8896  function allowance(address owner, address spender)... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":15255:15635  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15391:15410  owner != address(0) */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":15383:15451  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"smartContract_flat.sol\":15383:15451  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":15383:15451  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"smartContract_flat.sol\":15383:15451  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15470:15491  spender != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":15462:15530  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"smartContract_flat.sol\":15462:15530  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":15462:15530  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"smartContract_flat.sol\":15462:15530  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15543:15561  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":15543:15554  _allowances */\n      0x01\n        /* \"smartContract_flat.sol\":15543:15561  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":15543:15570  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":15543:15579  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":15595:15627  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":15595:15627  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":15595:15627  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":15255:15635  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":15926:16428  function _spendAllowance(... */\n    tag_79:\n        /* \"smartContract_flat.sol\":16061:16085  uint256 currentAllowance */\n      0x00\n        /* \"smartContract_flat.sol\":16088:16113  allowance(owner, spender) */\n      tag_117\n        /* \"smartContract_flat.sol\":16098:16103  owner */\n      dup5\n        /* \"smartContract_flat.sol\":16105:16112  spender */\n      dup5\n        /* \"smartContract_flat.sol\":16088:16097  allowance */\n      tag_61\n        /* \"smartContract_flat.sol\":16088:16113  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"smartContract_flat.sol\":16061:16113  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"smartContract_flat.sol\":16128:16144  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":16128:16165  currentAllowance != type(uint256).max */\n      eq\n        /* \"smartContract_flat.sol\":16124:16421  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"smartContract_flat.sol\":16228:16234  amount */\n      dup2\n        /* \"smartContract_flat.sol\":16208:16224  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":16208:16234  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":16182:16299  require(... */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"smartContract_flat.sol\":16182:16299  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":16182:16299  require(... */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"smartContract_flat.sol\":16182:16299  require(... */\n    tag_119:\n        /* \"smartContract_flat.sol\":16343:16394  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"smartContract_flat.sol\":16352:16357  owner */\n      dup5\n        /* \"smartContract_flat.sol\":16359:16366  spender */\n      dup5\n        /* \"smartContract_flat.sol\":16387:16393  amount */\n      dup5\n        /* \"smartContract_flat.sol\":16368:16384  currentAllowance */\n      dup5\n        /* \"smartContract_flat.sol\":16368:16393  currentAllowance - amount */\n      sub\n        /* \"smartContract_flat.sol\":16343:16351  _approve */\n      tag_74\n        /* \"smartContract_flat.sol\":16343:16394  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"smartContract_flat.sol\":16050:16428  {... */\n      pop\n        /* \"smartContract_flat.sol\":15926:16428  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":12499:13207  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12630:12648  from != address(0) */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":12622:12690  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"smartContract_flat.sol\":12622:12690  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12622:12690  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"smartContract_flat.sol\":12622:12690  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12709:12725  to != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":12701:12765  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"smartContract_flat.sol\":12701:12765  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12701:12765  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"smartContract_flat.sol\":12701:12765  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12851:12866  _balances[from] */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":12829:12848  uint256 fromBalance */\n      0x00\n        /* \"smartContract_flat.sol\":12851:12866  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":12899:12920  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":12877:12986  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"smartContract_flat.sol\":12877:12986  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12877:12986  require(... */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"smartContract_flat.sol\":12877:12986  require(... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13022:13037  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"smartContract_flat.sol\":13022:13031  _balances */\n      0x00\n        /* \"smartContract_flat.sol\":13022:13037  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"smartContract_flat.sol\":13040:13060  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"smartContract_flat.sol\":13022:13060  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":13082:13095  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"smartContract_flat.sol\":13082:13105  _balances[to] += amount */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":13054:13060  amount */\n      dup5\n      swap3\n        /* \"smartContract_flat.sol\":13022:13031  _balances */\n      swap1\n        /* \"smartContract_flat.sol\":13082:13105  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"smartContract_flat.sol\":13054:13060  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":13082:13105  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smartContract_flat.sol\":13138:13140  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13123:13149  Transfer(from, to, amount) */\n      and\n        /* \"smartContract_flat.sol\":13132:13136  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13123:13149  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"smartContract_flat.sol\":13142:13148  amount */\n      dup5\n        /* \"smartContract_flat.sol\":13123:13149  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"smartContract_flat.sol\":13123:13149  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":13162:13199  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"smartContract_flat.sol\":17028:17153  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f627dd42849c6a858593257ad1c5c1ae711ba0cd927fdb086366bb7e2febd75d64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_167": {
									"entryPoint": null,
									"id": 167,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"extract_byte_array_length": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2046:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:1"
															},
															"nodeType": "YulIf",
															"src": "921:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1171:488:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1217:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1229:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1219:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1219:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1219:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1192:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1201:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1188:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1184:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:32:1"
															},
															"nodeType": "YulIf",
															"src": "1181:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1242:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1262:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1256:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1246:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1281:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1299:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1303:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1307:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1285:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1336:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1345:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1348:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1338:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1338:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1332:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1321:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:14:1"
															},
															"nodeType": "YulIf",
															"src": "1318:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1361:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1404:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1415:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1424:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1371:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1371:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1361:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1441:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1445:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1511:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1520:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1523:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1513:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1513:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1513:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1497:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1507:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1494:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:16:1"
															},
															"nodeType": "YulIf",
															"src": "1491:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1536:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1579:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1590:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1575:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1601:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1546:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1618:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1649:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1634:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1618:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1121:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1132:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1144:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1152:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1160:6:1",
														"type": ""
													}
												],
												"src": "1036:623:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1743:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1746:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1739:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1760:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1796:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1764:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1837:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1839:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1853:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1849:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1817:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1810:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:26:1"
															},
															"nodeType": "YulIf",
															"src": "1807:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1927:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1948:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1955:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1960:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1951:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1951:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1941:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1941:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1941:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1992:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1995:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1985:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1985:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1985:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2020:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2023:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2013:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2013:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1883:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1906:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1903:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1903:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1880:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:38:1"
															},
															"nodeType": "YulIf",
															"src": "1877:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1699:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1708:6:1",
														"type": ""
													}
												],
												"src": "1664:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b2438038062000b248339810160408190526200003491620001df565b8251620000499060039060208601906200006c565b5081516200005f9060049060208501906200006c565b50600555506200028e9050565b8280546200007a9062000252565b90600052602060002090601f0160209004810192826200009e5760008555620000e9565b82601f10620000b957805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e9578251825591602001919060010190620000cc565b50620000f7929150620000fb565b5090565b5b80821115620000f75760008155600101620000fc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013a57600080fd5b81516001600160401b038082111562000157576200015762000112565b604051601f8301601f19908116603f0116810190828211818310171562000182576200018262000112565b816040528381526020925086838588010111156200019f57600080fd5b600091505b83821015620001c35785820183015181830184015290820190620001a4565b83821115620001d55760008385830101525b9695505050505050565b600080600060608486031215620001f557600080fd5b83516001600160401b03808211156200020d57600080fd5b6200021b8783880162000128565b945060208601519150808211156200023257600080fd5b50620002418682870162000128565b925050604084015190509250925092565b600181811c908216806200026757607f821691505b6020821081036200028857634e487b7160e01b600052602260045260246000fd5b50919050565b610886806200029e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051600981526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220f627dd42849c6a858593257ad1c5c1ae711ba0cd927fdb086366bb7e2febd75d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB24 CODESIZE SUB DUP1 PUSH3 0xB24 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DF JUMP JUMPDEST DUP3 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP PUSH1 0x5 SSTORE POP PUSH3 0x28E SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7A SWAP1 PUSH3 0x252 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCC JUMP JUMPDEST POP PUSH3 0xF7 SWAP3 SWAP2 POP PUSH3 0xFB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xFC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x157 PUSH3 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x182 JUMPI PUSH3 0x182 PUSH3 0x112 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1C3 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A4 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x21B DUP8 DUP4 DUP9 ADD PUSH3 0x128 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x241 DUP7 DUP3 DUP8 ADD PUSH3 0x128 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x267 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x288 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x886 DUP1 PUSH3 0x29E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0x27 0xDD TIMESTAMP DUP5 SWAP13 PUSH11 0x858593257AD1C5C1AE711B LOG0 0xCD SWAP3 PUSH32 0xDB086366BB7E2FEBD75D64736F6C634300080D00330000000000000000000000 ",
							"sourceMap": "5832:12052:0:-:0;;;6457:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6576:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6600:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;6628:8:0;:19;-1:-1:-1;5832:12052:0;;-1:-1:-1;5832:12052:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5832:12052:0;;;-1:-1:-1;5832:12052:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:1:o;1036:623::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:1;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1536:73;;;1649:2;1638:9;1634:18;1628:25;1618:35;;1036:623;;;;;:::o;1664:380::-;1743:1;1739:12;;;;1786;;;1807:61;;1861:4;1853:6;1849:17;1839:27;;1807:61;1914:2;1906:6;1903:14;1883:18;1880:38;1877:161;;1960:10;1955:3;1951:20;1948:1;1941:31;1995:4;1992:1;1985:15;2023:4;2020:1;2013:15;1877:161;;1664:380;;;:::o;:::-;5832:12052:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_707": {
									"entryPoint": null,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_642": {
									"entryPoint": 856,
									"id": 642,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_696": {
									"entryPoint": null,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_109": {
									"entryPoint": null,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_685": {
									"entryPoint": 1148,
									"id": 685,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_469": {
									"entryPoint": 1270,
									"id": 469,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_264": {
									"entryPoint": 813,
									"id": 264,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_289": {
									"entryPoint": 562,
									"id": 289,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_392": {
									"entryPoint": 671,
									"id": 392,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_351": {
									"entryPoint": 622,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_177": {
									"entryPoint": 416,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_187": {
									"entryPoint": 656,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_322": {
									"entryPoint": 586,
									"id": 322,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_246": {
									"entryPoint": 799,
									"id": 246,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:1"
															},
															"nodeType": "YulIf",
															"src": "2237:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:1",
														"type": ""
													}
												],
												"src": "2140:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:1"
															},
															"nodeType": "YulIf",
															"src": "2548:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:1"
															},
															"nodeType": "YulIf",
															"src": "2618:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													}
												],
												"src": "2405:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:1"
															},
															"nodeType": "YulIf",
															"src": "2848:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:1",
														"type": ""
													}
												],
												"src": "2790:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:1",
														"type": ""
													}
												],
												"src": "3020:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:1",
														"type": ""
													}
												],
												"src": "3426:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:1",
														"type": ""
													}
												],
												"src": "3831:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:1",
														"type": ""
													}
												],
												"src": "4234:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:1",
														"type": ""
													}
												],
												"src": "4592:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:1",
														"type": ""
													}
												],
												"src": "4998:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:1",
														"type": ""
													}
												],
												"src": "5402:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051600981526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220f627dd42849c6a858593257ad1c5c1ae711ba0cd927fdb086366bb7e2febd75d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0x27 0xDD TIMESTAMP DUP5 SWAP13 PUSH11 0x858593257AD1C5C1AE711B LOG0 0xCD SWAP3 PUSH32 0xDB086366BB7E2FEBD75D64736F6C634300080D00330000000000000000000000 ",
							"sourceMap": "5832:12052:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6725:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9216:242;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;9216:242:0;1053:187:1;7844:108:0;7932:12;;7844:108;;;1391:25:1;;;1379:2;1364:18;7844:108:0;1245:177:1;10038:295:0;;;;;;:::i;:::-;;:::i;7687:92::-;;;7770:1;1902:36:1;;1890:2;1875:18;7687:92:0;1760:184:1;10742:270:0;;;;;;:::i;:::-;;:::i;8015:177::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8166:18:0;8134:7;8166:18;;;;;;;;;;;;8015:177;6944:104;;;:::i;11515:505::-;;;;;;:::i;:::-;;:::i;8398:234::-;;;;;;:::i;:::-;;:::i;8695:201::-;;;;;;:::i;:::-;;:::i;6725:100::-;6779:13;6812:5;6805:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6725:100;:::o;9216:242::-;9335:4;4375:10;9396:32;4375:10;9412:7;9421:6;9396:8;:32::i;:::-;-1:-1:-1;9446:4:0;;9216:242;-1:-1:-1;;;9216:242:0:o;10038:295::-;10169:4;4375:10;10227:38;10243:4;4375:10;10258:6;10227:15;:38::i;:::-;10276:27;10286:4;10292:2;10296:6;10276:9;:27::i;:::-;-1:-1:-1;10321:4:0;;10038:295;-1:-1:-1;;;;10038:295:0:o;10742:270::-;10857:4;4375:10;10918:64;4375:10;10934:7;10971:10;10943:25;4375:10;10934:7;10943:9;:25::i;:::-;:38;;;;:::i;:::-;10918:8;:64::i;6944:104::-;7000:13;7033:7;7026:14;;;;;:::i;11515:505::-;11635:4;4375:10;11635:4;11723:25;4375:10;11740:7;11723:9;:25::i;:::-;11696:52;;11801:15;11781:16;:35;;11759:122;;;;-1:-1:-1;;;11759:122:0;;3222:2:1;11759:122:0;;;3204:21:1;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:1;;;3344:35;3396:19;;11759:122:0;;;;;;;;;11917:60;11926:5;11933:7;11961:15;11942:16;:34;11917:8;:60::i;8398:234::-;8513:4;4375:10;8574:28;4375:10;8591:2;8595:6;8574:9;:28::i;8695:201::-;-1:-1:-1;;;;;8861:18:0;;;8829:7;8861:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8695:201::o;15255:380::-;-1:-1:-1;;;;;15391:19:0;;15383:68;;;;-1:-1:-1;;;15383:68:0;;3628:2:1;15383:68:0;;;3610:21:1;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:1;;;3750:34;3801:19;;15383:68:0;3426:400:1;15383:68:0;-1:-1:-1;;;;;15470:21:0;;15462:68;;;;-1:-1:-1;;;15462:68:0;;4033:2:1;15462:68:0;;;4015:21:1;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:1;;;4155:32;4204:19;;15462:68:0;3831:398:1;15462:68:0;-1:-1:-1;;;;;15543:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15595:32;;1391:25:1;;;15595:32:0;;1364:18:1;15595:32:0;;;;;;;15255:380;;;:::o;15926:502::-;16061:24;16088:25;16098:5;16105:7;16088:9;:25::i;:::-;16061:52;;-1:-1:-1;;16128:16:0;:37;16124:297;;16228:6;16208:16;:26;;16182:117;;;;-1:-1:-1;;;16182:117:0;;4436:2:1;16182:117:0;;;4418:21:1;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;16182:117:0;4234:353:1;16182:117:0;16343:51;16352:5;16359:7;16387:6;16368:16;:25;16343:8;:51::i;:::-;16050:378;15926:502;;;:::o;12499:708::-;-1:-1:-1;;;;;12630:18:0;;12622:68;;;;-1:-1:-1;;;12622:68:0;;4794:2:1;12622:68:0;;;4776:21:1;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:1;;;4916:35;4968:19;;12622:68:0;4592:401:1;12622:68:0;-1:-1:-1;;;;;12709:16:0;;12701:64;;;;-1:-1:-1;;;12701:64:0;;5200:2:1;12701:64:0;;;5182:21:1;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:1;;;5322:33;5372:19;;12701:64:0;4998:399:1;12701:64:0;-1:-1:-1;;;;;12851:15:0;;12829:19;12851:15;;;;;;;;;;;12899:21;;;;12877:109;;;;-1:-1:-1;;;12877:109:0;;5604:2:1;12877:109:0;;;5586:21:1;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:1;;;5726:36;5779:19;;12877:109:0;5402:402:1;12877:109:0;-1:-1:-1;;;;;13022:15:0;;;:9;:15;;;;;;;;;;;13040:20;;;13022:38;;13082:13;;;;;;;;:23;;13054:6;;13022:9;13082:23;;13054:6;;13082:23;:::i;:::-;;;;;;;;13138:2;-1:-1:-1;;;;;13123:26:0;13132:4;-1:-1:-1;;;;;13123:26:0;;13142:6;13123:26;;;;1391:25:1;;1379:2;1364:18;;1245:177;13123:26:0;;;;;;;;13162:37;17028:125;14:597:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:1;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6607,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6600,
									"end": 6607,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6636,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6628,
									"end": 6647,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1152,
									"end": 1158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1166,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1215,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1201,
									"end": 1210,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1199,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1211,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1184,
									"end": 1216,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1229,
									"end": 1230,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1226,
									"end": 1227,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1272,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 1335,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1335,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1335,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1349,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1350,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1424,
									"end": 1431,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1404,
									"end": 1413,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1400,
									"end": 1422,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1432,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1432,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1478,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1467,
									"end": 1476,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1457,
									"end": 1482,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1482,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1482,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1509,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1505,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1510,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1523,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1525,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1601,
									"end": 1608,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1590,
									"end": 1598,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1588,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1575,
									"end": 1599,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1609,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1649,
									"end": 1651,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1647,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1634,
									"end": 1652,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1628,
									"end": 1653,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1618,
									"end": 1653,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1618,
									"end": 1653,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1744,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1739,
									"end": 1751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1751,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1751,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1786,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1786,
									"end": 1798,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1786,
									"end": 1798,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1807,
									"end": 1868,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1861,
									"end": 1865,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1853,
									"end": 1859,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1849,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1839,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1839,
									"end": 1866,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1868,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1807,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1906,
									"end": 1912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1903,
									"end": 1917,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1901,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1880,
									"end": 1918,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1955,
									"end": 1958,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1951,
									"end": 1971,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1949,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1972,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 1999,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1992,
									"end": 1993,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2000,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2027,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2028,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 17884,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f627dd42849c6a858593257ad1c5c1ae711ba0cd927fdb086366bb7e2febd75d64736f6c634300080d0033",
									".code": [
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 17884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 7944,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7932,
											"end": 7944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7770,
											"end": 7771,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6812,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 9339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9419,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9446,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9446,
											"end": 9450,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10169,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10227,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10243,
											"end": 10247,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10227,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10227,
											"end": 10265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10227,
											"end": 10265,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10227,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10276,
											"end": 10303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10276,
											"end": 10303,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10276,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10321,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10321,
											"end": 10325,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10941,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10981,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10918,
											"end": 10982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7000,
											"end": 7013,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7033,
											"end": 7040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11635,
											"end": 11639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11635,
											"end": 11639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11723,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11723,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11723,
											"end": 11748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11723,
											"end": 11748,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11723,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 11816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11781,
											"end": 11797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11781,
											"end": 11816,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11781,
											"end": 11816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11917,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11926,
											"end": 11931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 11940,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11961,
											"end": 11976,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 11958,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 11976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11917,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11917,
											"end": 11977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8591,
											"end": 8593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8574,
											"end": 8602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8829,
											"end": 8836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8872,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15391,
											"end": 15410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15391,
											"end": 15410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15470,
											"end": 15491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15554,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15579,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15579,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16061,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16088,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16098,
											"end": 16103,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16105,
											"end": 16112,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16088,
											"end": 16097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16088,
											"end": 16113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16088,
											"end": 16113,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16088,
											"end": 16113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16061,
											"end": 16113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16061,
											"end": 16113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16128,
											"end": 16144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16165,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16124,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16124,
											"end": 16421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16228,
											"end": 16234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16208,
											"end": 16224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16208,
											"end": 16234,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16208,
											"end": 16234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16352,
											"end": 16357,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16387,
											"end": 16393,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16384,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16343,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16050,
											"end": 16428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12499,
											"end": 13207,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12499,
											"end": 13207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12709,
											"end": 12725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12829,
											"end": 12848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 12920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 12920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 12920,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 12920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13060,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13060,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13060,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13138,
											"end": 13140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13132,
											"end": 13136,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13142,
											"end": 13148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17028,
											"end": 17153,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimal_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x8719c32dcc545738040a58763b52918cfe883c74383c50fabcadd45e0eb76258\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6d5e84c45a6856591d0ea3a4bc03be6e70869deac19d8512b06a213f1dcd20\",\"dweb:/ipfs/QmQU5Mz6H1z7WcMXnV78SHj1C1UF27fK73nfZLAtKSxj4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 136,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 138,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 140,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 142,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 144,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_decimal",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x8719c32dcc545738040a58763b52918cfe883c74383c50fabcadd45e0eb76258\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6d5e84c45a6856591d0ea3a4bc03be6e70869deac19d8512b06a213f1dcd20\",\"dweb:/ipfs/QmQU5Mz6H1z7WcMXnV78SHj1C1UF27fK73nfZLAtKSxj4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x8719c32dcc545738040a58763b52918cfe883c74383c50fabcadd45e0eb76258\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6d5e84c45a6856591d0ea3a4bc03be6e70869deac19d8512b06a213f1dcd20\",\"dweb:/ipfs/QmQU5Mz6H1z7WcMXnV78SHj1C1UF27fK73nfZLAtKSxj4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x8719c32dcc545738040a58763b52918cfe883c74383c50fabcadd45e0eb76258\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6d5e84c45a6856591d0ea3a4bc03be6e70869deac19d8512b06a213f1dcd20\",\"dweb:/ipfs/QmQU5Mz6H1z7WcMXnV78SHj1C1UF27fK73nfZLAtKSxj4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 713,
								"contract": "smartContract_flat.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smartContract_flat.sol\":21663:28334  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"smartContract_flat.sol\":21663:28334  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f474f46feddb3a1353dd1ad6c82fe2ffad3485ca5e47fab6e70c08f9b29b94b64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f474f46feddb3a1353dd1ad6c82fe2ffad3485ca5e47fab6e70c08f9b29b94b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SELFBALANCE 0x4F CHAINID INVALID 0xDD 0xB3 LOG1 CALLDATALOAD RETURNDATASIZE 0xD1 0xAD PUSH13 0x82FE2FFAD3485CA5E47FAB6E70 0xC0 DUP16 SWAP12 0x29 0xB9 0x4B PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "21663:6671:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;21663:6671:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f474f46feddb3a1353dd1ad6c82fe2ffad3485ca5e47fab6e70c08f9b29b94b64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SELFBALANCE 0x4F CHAINID INVALID 0xDD 0xB3 LOG1 CALLDATALOAD RETURNDATASIZE 0xD1 0xAD PUSH13 0x82FE2FFAD3485CA5E47FAB6E70 0xC0 DUP16 SWAP12 0x29 0xB9 0x4B PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "21663:6671:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21663,
									"end": 28334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f474f46feddb3a1353dd1ad6c82fe2ffad3485ca5e47fab6e70c08f9b29b94b64736f6c634300080d0033",
									".code": [
										{
											"begin": 21663,
											"end": 28334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 28334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 28334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 28334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21663,
											"end": 28334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21663,
											"end": 28334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 28334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21663,
											"end": 28334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 28334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x8719c32dcc545738040a58763b52918cfe883c74383c50fabcadd45e0eb76258\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6d5e84c45a6856591d0ea3a4bc03be6e70869deac19d8512b06a213f1dcd20\",\"dweb:/ipfs/QmQU5Mz6H1z7WcMXnV78SHj1C1UF27fK73nfZLAtKSxj4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smartContract_flat.sol\":20494:21184  contract Token is Ownable, ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"smartContract_flat.sol\":20570:20699  constructor() ERC20(\"COIN\", \"CN\", 9) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"smartContract_flat.sol\":6457:6655  constructor(... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe1, 0x21a7a4a7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf1, 0x21a7)\n  dup2\n  mstore\n  pop\n    /* \"smartContract_flat.sol\":20604:20605  9 */\n  0x09\n    /* \"smartContract_flat.sol\":18820:18852  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"smartContract_flat.sol\":18839:18851  _msgSender() */\n  tag_7\n    /* \"smartContract_flat.sol\":18839:18849  _msgSender */\n  shl(0x20, tag_8)\n    /* \"smartContract_flat.sol\":18839:18851  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"smartContract_flat.sol\":18820:18838  _transferOwnership */\n  tag_9\n    /* \"smartContract_flat.sol\":18820:18852  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"smartContract_flat.sol\":6576:6589  _name = name_ */\n  dup3\n  mload\n  tag_11\n  swap1\n    /* \"smartContract_flat.sol\":6576:6581  _name */\n  0x04\n  swap1\n    /* \"smartContract_flat.sol\":6576:6589  _name = name_ */\n  0x20\n  dup7\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"smartContract_flat.sol\":6600:6617  _symbol = symbol_ */\n  dup2\n  mload\n  tag_13\n  swap1\n    /* \"smartContract_flat.sol\":6600:6607  _symbol */\n  0x05\n  swap1\n    /* \"smartContract_flat.sol\":6600:6617  _symbol = symbol_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"smartContract_flat.sol\":6628:6636  _decimal */\n  0x06\n    /* \"smartContract_flat.sol\":6628:6647  _decimal = decimal_ */\n  sstore\n  pop\n  pop\n    /* \"smartContract_flat.sol\":20633:20652  100000000 * (10**9) */\n  0x016345785d8a0000\n    /* \"smartContract_flat.sol\":20618:20630  _totalSupply */\n  0x07\n    /* \"smartContract_flat.sol\":20618:20652  _totalSupply = 100000000 * (10**9) */\n  sstore\n    /* \"smartContract_flat.sol\":20663:20691  _mint(owner(), _totalSupply) */\n  tag_15\n    /* \"smartContract_flat.sol\":20669:20676  owner() */\n  tag_16\n    /* \"smartContract_flat.sol\":18987:18994  address */\n  0x00\n    /* \"smartContract_flat.sol\":19014:19020  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n  jump\n    /* \"smartContract_flat.sol\":20669:20676  owner() */\ntag_16:\n    /* \"smartContract_flat.sol\":20678:20690  _totalSupply */\n  sload(0x07)\n    /* \"smartContract_flat.sol\":20663:20668  _mint */\n  tag_18\n    /* \"smartContract_flat.sol\":20663:20691  _mint(owner(), _totalSupply) */\n  jump\t// in\ntag_15:\n    /* \"smartContract_flat.sol\":20494:21184  contract Token is Ownable, ERC20 {... */\n  jump(tag_49)\n    /* \"smartContract_flat.sol\":4295:4393  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n  caller\n  swap1\n    /* \"smartContract_flat.sol\":4295:4393  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"smartContract_flat.sol\":20248:20439  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"smartContract_flat.sol\":20322:20338  address oldOwner */\n  0x00\n    /* \"smartContract_flat.sol\":20341:20347  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":20358:20375  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"smartContract_flat.sol\":20341:20347  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"smartContract_flat.sol\":20322:20338  address oldOwner */\n  swap1\n    /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"smartContract_flat.sol\":20311:20439  {... */\n  pop\n    /* \"smartContract_flat.sol\":20248:20439  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"smartContract_flat.sol\":13494:13893  function _mint(address account, uint256 amount) internal virtual {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":13578:13599  account != address(0) */\n  dup3\n  and\n    /* \"smartContract_flat.sol\":13570:13635  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"smartContract_flat.sol\":13570:13635  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":345:363   */\n  0x64\n  add\n    /* \"smartContract_flat.sol\":13570:13635  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"smartContract_flat.sol\":13726:13732  amount */\n  dup1\n    /* \"smartContract_flat.sol\":13710:13722  _totalSupply */\n  0x03\n  0x00\n    /* \"smartContract_flat.sol\":13710:13732  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":13743:13761  _balances[account] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"smartContract_flat.sol\":13743:13752  _balances */\n  0x01\n    /* \"smartContract_flat.sol\":13743:13761  _balances[account] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"smartContract_flat.sol\":13743:13771  _balances[account] += amount */\n  dup1\n  sload\n    /* \"smartContract_flat.sol\":13765:13771  amount */\n  dup4\n  swap3\n    /* \"smartContract_flat.sol\":13743:13761  _balances[account] */\n  swap1\n    /* \"smartContract_flat.sol\":13743:13771  _balances[account] += amount */\n  tag_31\n  swap1\n    /* \"smartContract_flat.sol\":13765:13771  amount */\n  dup5\n  swap1\n    /* \"smartContract_flat.sol\":13743:13771  _balances[account] += amount */\n  tag_30\n  jump\t// in\ntag_31:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"smartContract_flat.sol\":13787:13824  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":750:775   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":13787:13824  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"smartContract_flat.sol\":13804:13805  0 */\n  0x00\n  swap1\n    /* \"smartContract_flat.sol\":13787:13824  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":738:740   */\n  0x20\n    /* \"#utility.yul\":723:741   */\n  add\n    /* \"smartContract_flat.sol\":13787:13824  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"smartContract_flat.sol\":13494:13893  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"smartContract_flat.sol\":20494:21184  contract Token is Ownable, ERC20 {... */\ntag_12:\n  dup3\n  dup1\n  sload\n  tag_38\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_41\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_44)\ntag_41:\n  dup3\n  0x1f\n  lt\n  tag_42\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_44)\ntag_42:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_44\n  jumpi\n  swap2\n  dup3\n  add\ntag_43:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_44\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_43)\ntag_44:\n  pop\n  tag_45\n  swap3\n  swap2\n  pop\n  tag_46\n  jump\t// in\ntag_45:\n  pop\n  swap1\n  jump\t// out\ntag_46:\ntag_47:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_45\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_47)\n    /* \"#utility.yul\":374:599   */\ntag_30:\n    /* \"#utility.yul\":414:417   */\n  0x00\n    /* \"#utility.yul\":445:446   */\n  dup3\n    /* \"#utility.yul\":441:447   */\n  not\n    /* \"#utility.yul\":438:439   */\n  dup3\n    /* \"#utility.yul\":435:448   */\n  gt\n    /* \"#utility.yul\":432:568   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":490:500   */\n  0x4e487b71\n    /* \"#utility.yul\":485:488   */\n  0xe0\n    /* \"#utility.yul\":481:501   */\n  shl\n    /* \"#utility.yul\":478:479   */\n  0x00\n    /* \"#utility.yul\":471:502   */\n  mstore\n    /* \"#utility.yul\":525:529   */\n  0x11\n    /* \"#utility.yul\":522:523   */\n  0x04\n    /* \"#utility.yul\":515:530   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x24\n    /* \"#utility.yul\":550:551   */\n  0x00\n    /* \"#utility.yul\":543:558   */\n  revert\n    /* \"#utility.yul\":432:568   */\ntag_52:\n  pop\n    /* \"#utility.yul\":584:593   */\n  add\n  swap1\n    /* \"#utility.yul\":374:599   */\n  jump\t// out\n    /* \"#utility.yul\":786:1166   */\ntag_39:\n    /* \"#utility.yul\":865:866   */\n  0x01\n    /* \"#utility.yul\":861:873   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":908:920   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":929:990   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":983:987   */\n  0x7f\n    /* \"#utility.yul\":975:981   */\n  dup3\n    /* \"#utility.yul\":971:988   */\n  and\n    /* \"#utility.yul\":961:988   */\n  swap2\n  pop\n    /* \"#utility.yul\":929:990   */\ntag_55:\n    /* \"#utility.yul\":1036:1038   */\n  0x20\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1025:1039   */\n  lt\n    /* \"#utility.yul\":1005:1023   */\n  dup2\n    /* \"#utility.yul\":1002:1040   */\n  sub\n    /* \"#utility.yul\":999:1160   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1082:1092   */\n  0x4e487b71\n    /* \"#utility.yul\":1077:1080   */\n  0xe0\n    /* \"#utility.yul\":1073:1093   */\n  shl\n    /* \"#utility.yul\":1070:1071   */\n  0x00\n    /* \"#utility.yul\":1063:1094   */\n  mstore\n    /* \"#utility.yul\":1117:1121   */\n  0x22\n    /* \"#utility.yul\":1114:1115   */\n  0x04\n    /* \"#utility.yul\":1107:1122   */\n  mstore\n    /* \"#utility.yul\":1145:1149   */\n  0x24\n    /* \"#utility.yul\":1142:1143   */\n  0x00\n    /* \"#utility.yul\":1135:1150   */\n  revert\n    /* \"#utility.yul\":999:1160   */\ntag_56:\n  pop\n    /* \"#utility.yul\":786:1166   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_49:\n    /* \"smartContract_flat.sol\":20494:21184  contract Token is Ownable, ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"smartContract_flat.sol\":20494:21184  contract Token is Ownable, ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb45ee9ef\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe3d670d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"smartContract_flat.sol\":6725:6825  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smartContract_flat.sol\":9216:9458  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"smartContract_flat.sol\":9216:9458  function approve(address spender, uint256 amount)... */\n      tag_27\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"smartContract_flat.sol\":7844:7952  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"smartContract_flat.sol\":7932:7944  _totalSupply */\n      sload(0x03)\n        /* \"smartContract_flat.sol\":7844:7952  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":7844:7952  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_27\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"smartContract_flat.sol\":10038:10333  function transferFrom(... */\n    tag_6:\n      tag_29\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"smartContract_flat.sol\":7687:7779  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"smartContract_flat.sol\":7770:7771  9 */\n      0x09\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"smartContract_flat.sol\":7687:7779  function decimals() public view virtual override returns (uint8) {... */\n      tag_27\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"smartContract_flat.sol\":10742:11012  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_29\n      tag_49\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"smartContract_flat.sol\":20534:20561  uint256 public _totalSupply */\n    tag_9:\n      tag_35\n      sload(0x07)\n      dup2\n      jump\n        /* \"smartContract_flat.sol\":20983:21078  function mint(address account, uint256 amount) public {... */\n    tag_10:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"smartContract_flat.sol\":8015:8192  function balanceOf(address account)... */\n    tag_11:\n      tag_35\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":8166:8184  _balances[account] */\n      and\n        /* \"smartContract_flat.sol\":8134:8141  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":8166:8184  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":8166:8175  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":8166:8184  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"smartContract_flat.sol\":8015:8192  function balanceOf(address account)... */\n      jump\n        /* \"smartContract_flat.sol\":19592:19695  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_55\n      tag_64\n      jump\t// in\n        /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n        /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2286:2337   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2274:2276   */\n      0x20\n        /* \"#utility.yul\":2259:2277   */\n      add\n        /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":2140:2343   */\n      jump\n        /* \"smartContract_flat.sol\":6944:7048  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_25\n      tag_70\n      jump\t// in\n        /* \"smartContract_flat.sol\":21086:21181  function burn(address account, uint256 amount) public {... */\n    tag_15:\n      tag_55\n      tag_73\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"smartContract_flat.sol\":11515:12020  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_16:\n      tag_29\n      tag_76\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"smartContract_flat.sol\":8398:8632  function transfer(address to, uint256 amount)... */\n    tag_17:\n      tag_29\n      tag_80\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"smartContract_flat.sol\":20823:20975  function transferPrice(... */\n    tag_18:\n      tag_55\n      tag_84\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"smartContract_flat.sol\":8695:8896  function allowance(address owner, address spender)... */\n    tag_19:\n      tag_35\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"smartContract_flat.sol\":19850:20088  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_55\n      tag_96\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"smartContract_flat.sol\":6725:6825  function name() public view virtual override returns (string memory) {... */\n    tag_26:\n        /* \"smartContract_flat.sol\":6779:6792  string memory */\n      0x60\n        /* \"smartContract_flat.sol\":6812:6817  _name */\n      0x04\n        /* \"smartContract_flat.sol\":6805:6817  return _name */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_103\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_102)\n    tag_103:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_104:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_104\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":6725:6825  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"smartContract_flat.sol\":9216:9458  function approve(address spender, uint256 amount)... */\n    tag_32:\n        /* \"smartContract_flat.sol\":9335:9339  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":9396:9428  _approve(owner, spender, amount) */\n      tag_108\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":9412:9419  spender */\n      dup6\n        /* \"smartContract_flat.sol\":9421:9427  amount */\n      dup6\n        /* \"smartContract_flat.sol\":9396:9404  _approve */\n      tag_109\n        /* \"smartContract_flat.sol\":9396:9428  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_108:\n      pop\n        /* \"smartContract_flat.sol\":9446:9450  true */\n      0x01\n      swap4\n        /* \"smartContract_flat.sol\":9216:9458  function approve(address spender, uint256 amount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":10038:10333  function transferFrom(... */\n    tag_42:\n        /* \"smartContract_flat.sol\":10169:10173  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":10227:10265  _spendAllowance(from, spender, amount) */\n      tag_113\n        /* \"smartContract_flat.sol\":10243:10247  from */\n      dup6\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup3\n        /* \"smartContract_flat.sol\":10258:10264  amount */\n      dup6\n        /* \"smartContract_flat.sol\":10227:10242  _spendAllowance */\n      tag_114\n        /* \"smartContract_flat.sol\":10227:10265  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_113:\n        /* \"smartContract_flat.sol\":10276:10303  _transfer(from, to, amount) */\n      tag_115\n        /* \"smartContract_flat.sol\":10286:10290  from */\n      dup6\n        /* \"smartContract_flat.sol\":10292:10294  to */\n      dup6\n        /* \"smartContract_flat.sol\":10296:10302  amount */\n      dup6\n        /* \"smartContract_flat.sol\":10276:10285  _transfer */\n      tag_116\n        /* \"smartContract_flat.sol\":10276:10303  _transfer(from, to, amount) */\n      jump\t// in\n    tag_115:\n      pop\n        /* \"smartContract_flat.sol\":10321:10325  true */\n      0x01\n      swap5\n        /* \"smartContract_flat.sol\":10038:10333  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":10742:11012  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_50:\n        /* \"smartContract_flat.sol\":10857:10861  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":10918:10982  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_108\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":10934:10941  spender */\n      dup6\n        /* \"smartContract_flat.sol\":10971:10981  addedValue */\n      dup6\n        /* \"smartContract_flat.sol\":10943:10968  allowance(owner, spender) */\n      tag_121\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup4\n        /* \"smartContract_flat.sol\":10934:10941  spender */\n      dup4\n        /* \"smartContract_flat.sol\":10943:10952  allowance */\n      tag_89\n        /* \"smartContract_flat.sol\":10943:10968  allowance(owner, spender) */\n      jump\t// in\n    tag_121:\n        /* \"smartContract_flat.sol\":10943:10981  allowance(owner, spender) + addedValue */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"smartContract_flat.sol\":10918:10926  _approve */\n      tag_109\n        /* \"smartContract_flat.sol\":10918:10982  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":20983:21078  function mint(address account, uint256 amount) public {... */\n    tag_57:\n        /* \"smartContract_flat.sol\":21048:21070  _mint(account, amount) */\n      tag_125\n        /* \"smartContract_flat.sol\":21054:21061  account */\n      dup3\n        /* \"smartContract_flat.sol\":21063:21069  amount */\n      dup3\n        /* \"smartContract_flat.sol\":21048:21053  _mint */\n      tag_126\n        /* \"smartContract_flat.sol\":21048:21070  _mint(account, amount) */\n      jump\t// in\n    tag_125:\n        /* \"smartContract_flat.sol\":20983:21078  function mint(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":19592:19695  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19161:19184  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3465:3467   */\n      0x20\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3447:3468   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3484:3502   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3477:3507   */\n      mstore\n        /* \"#utility.yul\":3543:3577   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3523:3541   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3516:3578   */\n      mstore\n        /* \"#utility.yul\":3595:3613   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"smartContract_flat.sol\":19657:19687  _transferOwnership(address(0)) */\n      tag_135\n        /* \"smartContract_flat.sol\":19684:19685  0 */\n      0x00\n        /* \"smartContract_flat.sol\":19657:19675  _transferOwnership */\n      tag_136\n        /* \"smartContract_flat.sol\":19657:19687  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_135:\n        /* \"smartContract_flat.sol\":19592:19695  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":6944:7048  function symbol() public view virtual override returns (string memory) {... */\n    tag_70:\n        /* \"smartContract_flat.sol\":7000:7013  string memory */\n      0x60\n        /* \"smartContract_flat.sol\":7033:7040  _symbol */\n      0x05\n        /* \"smartContract_flat.sol\":7026:7040  return _symbol */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n        /* \"smartContract_flat.sol\":21086:21181  function burn(address account, uint256 amount) public {... */\n    tag_74:\n        /* \"smartContract_flat.sol\":21151:21173  _burn(account, amount) */\n      tag_125\n        /* \"smartContract_flat.sol\":21157:21164  account */\n      dup3\n        /* \"smartContract_flat.sol\":21166:21172  amount */\n      dup3\n        /* \"smartContract_flat.sol\":21151:21156  _burn */\n      tag_146\n        /* \"smartContract_flat.sol\":21151:21173  _burn(account, amount) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":11515:12020  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_77:\n        /* \"smartContract_flat.sol\":11635:11639  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":11635:11639  bool */\n      dup2\n        /* \"smartContract_flat.sol\":11723:11748  allowance(owner, spender) */\n      tag_149\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup3\n        /* \"smartContract_flat.sol\":11740:11747  spender */\n      dup7\n        /* \"smartContract_flat.sol\":11723:11732  allowance */\n      tag_89\n        /* \"smartContract_flat.sol\":11723:11748  allowance(owner, spender) */\n      jump\t// in\n    tag_149:\n        /* \"smartContract_flat.sol\":11696:11748  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":11801:11816  subtractedValue */\n      dup4\n        /* \"smartContract_flat.sol\":11781:11797  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":11781:11816  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":11759:11881  require(... */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3826:3828   */\n      0x20\n        /* \"smartContract_flat.sol\":11759:11881  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3808:3829   */\n      mstore\n        /* \"#utility.yul\":3865:3867   */\n      0x25\n        /* \"#utility.yul\":3845:3863   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3838:3868   */\n      mstore\n        /* \"#utility.yul\":3904:3938   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3884:3902   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3877:3939   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3955:3973   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3948:3983   */\n      mstore\n        /* \"#utility.yul\":4000:4019   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":11759:11881  require(... */\n      tag_132\n        /* \"#utility.yul\":3624:4025   */\n      jump\n        /* \"smartContract_flat.sol\":11759:11881  require(... */\n    tag_150:\n        /* \"smartContract_flat.sol\":11917:11977  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_115\n        /* \"smartContract_flat.sol\":11926:11931  owner */\n      dup3\n        /* \"smartContract_flat.sol\":11933:11940  spender */\n      dup7\n        /* \"smartContract_flat.sol\":11961:11976  subtractedValue */\n      dup7\n        /* \"smartContract_flat.sol\":11942:11958  currentAllowance */\n      dup5\n        /* \"smartContract_flat.sol\":11942:11976  currentAllowance - subtractedValue */\n      sub\n        /* \"smartContract_flat.sol\":11917:11925  _approve */\n      tag_109\n        /* \"smartContract_flat.sol\":11917:11977  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":8398:8632  function transfer(address to, uint256 amount)... */\n    tag_81:\n        /* \"smartContract_flat.sol\":8513:8517  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":8574:8602  _transfer(owner, to, amount) */\n      tag_108\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":8591:8593  to */\n      dup6\n        /* \"smartContract_flat.sol\":8595:8601  amount */\n      dup6\n        /* \"smartContract_flat.sol\":8574:8583  _transfer */\n      tag_116\n        /* \"smartContract_flat.sol\":8574:8602  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":20823:20975  function transferPrice(... */\n    tag_85:\n        /* \"smartContract_flat.sol\":20940:20967  _transfer(from, to, amount) */\n      tag_158\n        /* \"smartContract_flat.sol\":20950:20954  from */\n      dup4\n        /* \"smartContract_flat.sol\":20956:20958  to */\n      dup4\n        /* \"smartContract_flat.sol\":20960:20966  amount */\n      dup4\n        /* \"smartContract_flat.sol\":20940:20949  _transfer */\n      tag_116\n        /* \"smartContract_flat.sol\":20940:20967  _transfer(from, to, amount) */\n      jump\t// in\n    tag_158:\n        /* \"smartContract_flat.sol\":20823:20975  function transferPrice(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":8695:8896  function allowance(address owner, address spender)... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":8861:8879  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"smartContract_flat.sol\":8829:8836  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":8861:8879  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":8861:8872  _allowances */\n      0x02\n        /* \"smartContract_flat.sol\":8861:8879  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":8861:8888  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"smartContract_flat.sol\":8695:8896  function allowance(address owner, address spender)... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":19850:20088  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_97:\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19161:19184  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3465:3467   */\n      0x20\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3447:3468   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3484:3502   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3477:3507   */\n      mstore\n        /* \"#utility.yul\":3543:3577   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3523:3541   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3516:3578   */\n      mstore\n        /* \"#utility.yul\":3595:3613   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_132\n        /* \"#utility.yul\":3263:3619   */\n      jump\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":19953:19975  newOwner != address(0) */\n      dup2\n      and\n        /* \"smartContract_flat.sol\":19931:20041  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4232:4234   */\n      0x20\n        /* \"smartContract_flat.sol\":19931:20041  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4214:4235   */\n      mstore\n        /* \"#utility.yul\":4271:4273   */\n      0x26\n        /* \"#utility.yul\":4251:4269   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4244:4274   */\n      mstore\n        /* \"#utility.yul\":4310:4344   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4290:4308   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4283:4345   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4361:4379   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4354:4390   */\n      mstore\n        /* \"#utility.yul\":4407:4426   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":19931:20041  require(... */\n      tag_132\n        /* \"#utility.yul\":4030:4432   */\n      jump\n        /* \"smartContract_flat.sol\":19931:20041  require(... */\n    tag_168:\n        /* \"smartContract_flat.sol\":20052:20080  _transferOwnership(newOwner) */\n      tag_171\n        /* \"smartContract_flat.sol\":20071:20079  newOwner */\n      dup2\n        /* \"smartContract_flat.sol\":20052:20070  _transferOwnership */\n      tag_136\n        /* \"smartContract_flat.sol\":20052:20080  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_171:\n        /* \"smartContract_flat.sol\":19850:20088  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":15255:15635  function _approve(... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15391:15410  owner != address(0) */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":15383:15451  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4639:4641   */\n      0x20\n        /* \"smartContract_flat.sol\":15383:15451  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4621:4642   */\n      mstore\n        /* \"#utility.yul\":4678:4680   */\n      0x24\n        /* \"#utility.yul\":4658:4676   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4651:4681   */\n      mstore\n        /* \"#utility.yul\":4717:4751   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4697:4715   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4690:4752   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4768:4786   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4761:4795   */\n      mstore\n        /* \"#utility.yul\":4812:4831   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":15383:15451  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_132\n        /* \"#utility.yul\":4437:4837   */\n      jump\n        /* \"smartContract_flat.sol\":15383:15451  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15470:15491  spender != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":15462:15530  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5044:5046   */\n      0x20\n        /* \"smartContract_flat.sol\":15462:15530  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5026:5047   */\n      mstore\n        /* \"#utility.yul\":5083:5085   */\n      0x22\n        /* \"#utility.yul\":5063:5081   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5056:5086   */\n      mstore\n        /* \"#utility.yul\":5122:5156   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5102:5120   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5095:5157   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5173:5191   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5166:5198   */\n      mstore\n        /* \"#utility.yul\":5215:5234   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":15462:15530  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_132\n        /* \"#utility.yul\":4842:5240   */\n      jump\n        /* \"smartContract_flat.sol\":15462:15530  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15543:15561  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":15543:15554  _allowances */\n      0x02\n        /* \"smartContract_flat.sol\":15543:15561  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":15543:15570  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":15543:15579  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":15595:15627  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":15595:15627  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":15595:15627  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":15255:15635  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":15926:16428  function _spendAllowance(... */\n    tag_114:\n        /* \"smartContract_flat.sol\":16061:16085  uint256 currentAllowance */\n      0x00\n        /* \"smartContract_flat.sol\":16088:16113  allowance(owner, spender) */\n      tag_182\n        /* \"smartContract_flat.sol\":16098:16103  owner */\n      dup5\n        /* \"smartContract_flat.sol\":16105:16112  spender */\n      dup5\n        /* \"smartContract_flat.sol\":16088:16097  allowance */\n      tag_89\n        /* \"smartContract_flat.sol\":16088:16113  allowance(owner, spender) */\n      jump\t// in\n    tag_182:\n        /* \"smartContract_flat.sol\":16061:16113  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"smartContract_flat.sol\":16128:16144  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":16128:16165  currentAllowance != type(uint256).max */\n      eq\n        /* \"smartContract_flat.sol\":16124:16421  if (currentAllowance != type(uint256).max) {... */\n      tag_187\n      jumpi\n        /* \"smartContract_flat.sol\":16228:16234  amount */\n      dup2\n        /* \"smartContract_flat.sol\":16208:16224  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":16208:16234  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":16182:16299  require(... */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5447:5449   */\n      0x20\n        /* \"smartContract_flat.sol\":16182:16299  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5429:5450   */\n      mstore\n        /* \"#utility.yul\":5486:5488   */\n      0x1d\n        /* \"#utility.yul\":5466:5484   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5459:5489   */\n      mstore\n        /* \"#utility.yul\":5525:5556   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":5505:5523   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5498:5557   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":16182:16299  require(... */\n      tag_132\n        /* \"#utility.yul\":5245:5598   */\n      jump\n        /* \"smartContract_flat.sol\":16182:16299  require(... */\n    tag_184:\n        /* \"smartContract_flat.sol\":16343:16394  _approve(owner, spender, currentAllowance - amount) */\n      tag_187\n        /* \"smartContract_flat.sol\":16352:16357  owner */\n      dup5\n        /* \"smartContract_flat.sol\":16359:16366  spender */\n      dup5\n        /* \"smartContract_flat.sol\":16387:16393  amount */\n      dup5\n        /* \"smartContract_flat.sol\":16368:16384  currentAllowance */\n      dup5\n        /* \"smartContract_flat.sol\":16368:16393  currentAllowance - amount */\n      sub\n        /* \"smartContract_flat.sol\":16343:16351  _approve */\n      tag_109\n        /* \"smartContract_flat.sol\":16343:16394  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_187:\n        /* \"smartContract_flat.sol\":16050:16428  {... */\n      pop\n        /* \"smartContract_flat.sol\":15926:16428  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":12499:13207  function _transfer(... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12630:12648  from != address(0) */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":12622:12690  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5805:5807   */\n      0x20\n        /* \"smartContract_flat.sol\":12622:12690  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5787:5808   */\n      mstore\n        /* \"#utility.yul\":5844:5846   */\n      0x25\n        /* \"#utility.yul\":5824:5842   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5817:5847   */\n      mstore\n        /* \"#utility.yul\":5883:5917   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5863:5881   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5856:5918   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5934:5952   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5927:5962   */\n      mstore\n        /* \"#utility.yul\":5979:5998   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12622:12690  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_132\n        /* \"#utility.yul\":5603:6004   */\n      jump\n        /* \"smartContract_flat.sol\":12622:12690  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12709:12725  to != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":12701:12765  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6211:6213   */\n      0x20\n        /* \"smartContract_flat.sol\":12701:12765  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6193:6214   */\n      mstore\n        /* \"#utility.yul\":6250:6252   */\n      0x23\n        /* \"#utility.yul\":6230:6248   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6223:6253   */\n      mstore\n        /* \"#utility.yul\":6289:6323   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6269:6287   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6262:6324   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6340:6358   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6333:6366   */\n      mstore\n        /* \"#utility.yul\":6383:6402   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12701:12765  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_132\n        /* \"#utility.yul\":6009:6408   */\n      jump\n        /* \"smartContract_flat.sol\":12701:12765  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12851:12866  _balances[from] */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":12829:12848  uint256 fromBalance */\n      0x00\n        /* \"smartContract_flat.sol\":12851:12866  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":12851:12860  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":12851:12866  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":12899:12920  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":12877:12986  require(... */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6615:6617   */\n      0x20\n        /* \"smartContract_flat.sol\":12877:12986  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6597:6618   */\n      mstore\n        /* \"#utility.yul\":6654:6656   */\n      0x26\n        /* \"#utility.yul\":6634:6652   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6627:6657   */\n      mstore\n        /* \"#utility.yul\":6693:6727   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6673:6691   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6666:6728   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":6744:6762   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6737:6773   */\n      mstore\n        /* \"#utility.yul\":6790:6809   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12877:12986  require(... */\n      tag_132\n        /* \"#utility.yul\":6413:6815   */\n      jump\n        /* \"smartContract_flat.sol\":12877:12986  require(... */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13022:13037  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":13022:13031  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":13022:13037  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"smartContract_flat.sol\":13040:13060  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"smartContract_flat.sol\":13022:13060  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":13082:13095  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"smartContract_flat.sol\":13082:13105  _balances[to] += amount */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":13054:13060  amount */\n      dup5\n      swap3\n        /* \"smartContract_flat.sol\":13022:13037  _balances[from] */\n      swap1\n        /* \"smartContract_flat.sol\":13082:13105  _balances[to] += amount */\n      tag_200\n      swap1\n        /* \"smartContract_flat.sol\":13054:13060  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":13082:13105  _balances[to] += amount */\n      tag_123\n      jump\t// in\n    tag_200:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smartContract_flat.sol\":13138:13140  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13123:13149  Transfer(from, to, amount) */\n      and\n        /* \"smartContract_flat.sol\":13132:13136  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13123:13149  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"smartContract_flat.sol\":13142:13148  amount */\n      dup5\n        /* \"smartContract_flat.sol\":13123:13149  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_201\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"smartContract_flat.sol\":13123:13149  Transfer(from, to, amount) */\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":13162:13199  _afterTokenTransfer(from, to, amount) */\n      tag_187\n        /* \"smartContract_flat.sol\":20823:20975  function transferPrice(... */\n      jump\n        /* \"smartContract_flat.sol\":13494:13893  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13578:13599  account != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":13570:13635  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7022:7024   */\n      0x20\n        /* \"smartContract_flat.sol\":13570:13635  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7004:7025   */\n      mstore\n        /* \"#utility.yul\":7061:7063   */\n      0x1f\n        /* \"#utility.yul\":7041:7059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7034:7064   */\n      mstore\n        /* \"#utility.yul\":7100:7133   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7080:7098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7073:7134   */\n      mstore\n        /* \"#utility.yul\":7151:7169   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":13570:13635  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_132\n        /* \"#utility.yul\":6820:7175   */\n      jump\n        /* \"smartContract_flat.sol\":13570:13635  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_205:\n        /* \"smartContract_flat.sol\":13726:13732  amount */\n      dup1\n        /* \"smartContract_flat.sol\":13710:13722  _totalSupply */\n      0x03\n      0x00\n        /* \"smartContract_flat.sol\":13710:13732  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13743:13761  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":13743:13752  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":13743:13761  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"smartContract_flat.sol\":13743:13771  _balances[account] += amount */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":13765:13771  amount */\n      dup4\n      swap3\n        /* \"smartContract_flat.sol\":13743:13761  _balances[account] */\n      swap1\n        /* \"smartContract_flat.sol\":13743:13771  _balances[account] += amount */\n      tag_210\n      swap1\n        /* \"smartContract_flat.sol\":13765:13771  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":13743:13771  _balances[account] += amount */\n      tag_123\n      jump\t// in\n    tag_210:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"smartContract_flat.sol\":13787:13824  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13787:13824  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"smartContract_flat.sol\":13804:13805  0 */\n      0x00\n      swap1\n        /* \"smartContract_flat.sol\":13787:13824  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":13787:13824  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":20983:21078  function mint(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":20248:20439  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_136:\n        /* \"smartContract_flat.sol\":20322:20338  address oldOwner */\n      0x00\n        /* \"smartContract_flat.sol\":20341:20347  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":20358:20375  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"smartContract_flat.sol\":20341:20347  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"smartContract_flat.sol\":20322:20338  address oldOwner */\n      swap1\n        /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"smartContract_flat.sol\":20311:20439  {... */\n      pop\n        /* \"smartContract_flat.sol\":20248:20439  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":14226:14817  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":14310:14331  account != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":14302:14369  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7382:7384   */\n      0x20\n        /* \"smartContract_flat.sol\":14302:14369  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7364:7385   */\n      mstore\n        /* \"#utility.yul\":7421:7423   */\n      0x21\n        /* \"#utility.yul\":7401:7419   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7394:7424   */\n      mstore\n        /* \"#utility.yul\":7460:7494   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":7440:7458   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7433:7495   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7511:7529   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7504:7535   */\n      mstore\n        /* \"#utility.yul\":7552:7571   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":14302:14369  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_132\n        /* \"#utility.yul\":7180:7577   */\n      jump\n        /* \"smartContract_flat.sol\":14302:14369  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":14469:14487  _balances[account] */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":14444:14466  uint256 accountBalance */\n      0x00\n        /* \"smartContract_flat.sol\":14469:14487  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":14469:14478  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":14469:14487  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":14506:14530  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":14498:14569  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7784:7786   */\n      0x20\n        /* \"smartContract_flat.sol\":14498:14569  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7766:7787   */\n      mstore\n        /* \"#utility.yul\":7823:7825   */\n      0x22\n        /* \"#utility.yul\":7803:7821   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7796:7826   */\n      mstore\n        /* \"#utility.yul\":7862:7896   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":7842:7860   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7835:7897   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":7913:7931   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7906:7938   */\n      mstore\n        /* \"#utility.yul\":7955:7974   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":14498:14569  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_132\n        /* \"#utility.yul\":7582:7980   */\n      jump\n        /* \"smartContract_flat.sol\":14498:14569  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":14605:14623  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":14605:14614  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":14605:14623  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"smartContract_flat.sol\":14626:14649  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"smartContract_flat.sol\":14605:14649  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":14671:14683  _totalSupply */\n      0x03\n        /* \"smartContract_flat.sol\":14671:14693  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":14643:14649  amount */\n      dup5\n      swap3\n        /* \"smartContract_flat.sol\":14605:14623  _balances[account] */\n      swap1\n        /* \"smartContract_flat.sol\":14671:14693  _totalSupply -= amount */\n      tag_222\n      swap1\n        /* \"smartContract_flat.sol\":14643:14649  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":14671:14693  _totalSupply -= amount */\n      tag_223\n      jump\t// in\n    tag_222:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"smartContract_flat.sol\":14711:14748  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":14737:14738  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":14711:14748  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":14711:14748  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":20823:20975  function transferPrice(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_28:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_232:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_232)\n    tag_234:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_235:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_228:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_237:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_31:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_239:\n        /* \"#utility.yul\":962:991   */\n      tag_240\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_228\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_41:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_244:\n        /* \"#utility.yul\":1612:1641   */\n      tag_245\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_228\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_246\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_228\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_60:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_249:\n        /* \"#utility.yul\":2100:2129   */\n      tag_250\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_228\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2348:2608   */\n    tag_88:\n        /* \"#utility.yul\":2416:2422   */\n      0x00\n        /* \"#utility.yul\":2424:2430   */\n      dup1\n        /* \"#utility.yul\":2477:2479   */\n      0x40\n        /* \"#utility.yul\":2465:2474   */\n      dup4\n        /* \"#utility.yul\":2456:2463   */\n      dup6\n        /* \"#utility.yul\":2452:2475   */\n      sub\n        /* \"#utility.yul\":2448:2480   */\n      slt\n        /* \"#utility.yul\":2445:2497   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2493:2494   */\n      0x00\n        /* \"#utility.yul\":2490:2491   */\n      dup1\n        /* \"#utility.yul\":2483:2495   */\n      revert\n        /* \"#utility.yul\":2445:2497   */\n    tag_253:\n        /* \"#utility.yul\":2516:2545   */\n      tag_254\n        /* \"#utility.yul\":2535:2544   */\n      dup4\n        /* \"#utility.yul\":2516:2545   */\n      tag_228\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2506:2545   */\n      swap2\n      pop\n        /* \"#utility.yul\":2564:2602   */\n      tag_255\n        /* \"#utility.yul\":2598:2600   */\n      0x20\n        /* \"#utility.yul\":2587:2596   */\n      dup5\n        /* \"#utility.yul\":2583:2601   */\n      add\n        /* \"#utility.yul\":2564:2602   */\n      tag_228\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2554:2602   */\n      swap1\n      pop\n        /* \"#utility.yul\":2348:2608   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2613:2993   */\n    tag_100:\n        /* \"#utility.yul\":2692:2693   */\n      0x01\n        /* \"#utility.yul\":2688:2700   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2735:2747   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2756:2817   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2810:2814   */\n      0x7f\n        /* \"#utility.yul\":2802:2808   */\n      dup3\n        /* \"#utility.yul\":2798:2815   */\n      and\n        /* \"#utility.yul\":2788:2815   */\n      swap2\n      pop\n        /* \"#utility.yul\":2756:2817   */\n    tag_257:\n        /* \"#utility.yul\":2863:2865   */\n      0x20\n        /* \"#utility.yul\":2855:2861   */\n      dup3\n        /* \"#utility.yul\":2852:2866   */\n      lt\n        /* \"#utility.yul\":2832:2850   */\n      dup2\n        /* \"#utility.yul\":2829:2867   */\n      sub\n        /* \"#utility.yul\":2826:2987   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2909:2919   */\n      0x4e487b71\n        /* \"#utility.yul\":2904:2907   */\n      0xe0\n        /* \"#utility.yul\":2900:2920   */\n      shl\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2890:2921   */\n      mstore\n        /* \"#utility.yul\":2944:2948   */\n      0x22\n        /* \"#utility.yul\":2941:2942   */\n      0x04\n        /* \"#utility.yul\":2934:2949   */\n      mstore\n        /* \"#utility.yul\":2972:2976   */\n      0x24\n        /* \"#utility.yul\":2969:2970   */\n      0x00\n        /* \"#utility.yul\":2962:2977   */\n      revert\n        /* \"#utility.yul\":2826:2987   */\n    tag_258:\n      pop\n        /* \"#utility.yul\":2613:2993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3125   */\n    tag_229:\n        /* \"#utility.yul\":3059:3069   */\n      0x4e487b71\n        /* \"#utility.yul\":3054:3057   */\n      0xe0\n        /* \"#utility.yul\":3050:3070   */\n      shl\n        /* \"#utility.yul\":3047:3048   */\n      0x00\n        /* \"#utility.yul\":3040:3071   */\n      mstore\n        /* \"#utility.yul\":3090:3094   */\n      0x11\n        /* \"#utility.yul\":3087:3088   */\n      0x04\n        /* \"#utility.yul\":3080:3095   */\n      mstore\n        /* \"#utility.yul\":3114:3118   */\n      0x24\n        /* \"#utility.yul\":3111:3112   */\n      0x00\n        /* \"#utility.yul\":3104:3119   */\n      revert\n        /* \"#utility.yul\":3130:3258   */\n    tag_123:\n        /* \"#utility.yul\":3170:3173   */\n      0x00\n        /* \"#utility.yul\":3201:3202   */\n      dup3\n        /* \"#utility.yul\":3197:3203   */\n      not\n        /* \"#utility.yul\":3194:3195   */\n      dup3\n        /* \"#utility.yul\":3191:3204   */\n      gt\n        /* \"#utility.yul\":3188:3227   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3207:3225   */\n      tag_262\n      tag_229\n      jump\t// in\n    tag_262:\n      pop\n        /* \"#utility.yul\":3243:3252   */\n      add\n      swap1\n        /* \"#utility.yul\":3130:3258   */\n      jump\t// out\n        /* \"#utility.yul\":7985:8110   */\n    tag_223:\n        /* \"#utility.yul\":8025:8029   */\n      0x00\n        /* \"#utility.yul\":8053:8054   */\n      dup3\n        /* \"#utility.yul\":8050:8051   */\n      dup3\n        /* \"#utility.yul\":8047:8055   */\n      lt\n        /* \"#utility.yul\":8044:8078   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":8058:8076   */\n      tag_277\n      tag_229\n      jump\t// in\n    tag_277:\n      pop\n        /* \"#utility.yul\":8095:8104   */\n      sub\n      swap1\n        /* \"#utility.yul\":7985:8110   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200395aa51ed67149ece4d4afdd4db7fa596b90677adfedb004f40724c93fecc9d64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_167": {
									"entryPoint": null,
									"id": 167,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_729": {
									"entryPoint": null,
									"id": 729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_840": {
									"entryPoint": null,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_707": {
									"entryPoint": null,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_696": {
									"entryPoint": null,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_525": {
									"entryPoint": 285,
									"id": 525,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_109": {
									"entryPoint": 201,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_809": {
									"entryPoint": 205,
									"id": 809,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_738": {
									"entryPoint": null,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1168:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "422:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "457:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "478:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "485:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "490:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "481:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "481:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "471:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "471:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "471:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "515:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "515:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "550:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "553:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "543:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "543:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "438:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "445:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "441:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "441:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "435:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:13:1"
															},
															"nodeType": "YulIf",
															"src": "432:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "577:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "588:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "591:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "584:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "577:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "405:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "408:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "414:3:1",
														"type": ""
													}
												],
												"src": "374:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "705:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "715:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "727:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "723:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "715:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "757:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "768:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "750:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "674:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "685:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "696:4:1",
														"type": ""
													}
												],
												"src": "604:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "841:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "851:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "868:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "851:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "882:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "912:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "886:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "959:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "961:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "975:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "983:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "971:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "939:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:26:1"
															},
															"nodeType": "YulIf",
															"src": "929:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1049:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1070:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1077:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1082:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1073:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1073:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1063:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1063:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1063:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1117:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1107:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1107:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1142:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1145:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1135:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1135:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1135:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1005:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1028:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1025:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1002:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:38:1"
															},
															"nodeType": "YulIf",
															"src": "999:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "821:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "830:6:1",
														"type": ""
													}
												],
												"src": "786:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600481526020016321a7a4a760e11b8152506040518060400160405280600281526020016121a760f11b81525060096200006662000060620000c960201b60201c565b620000cd565b82516200007b90600490602086019062000205565b5081516200009190600590602085019062000205565b50600655505067016345785d8a0000600755620000c3620000ba6000546001600160a01b031690565b6007546200011d565b6200030e565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216620001785760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600360008282546200018c9190620002ab565b90915550506001600160a01b03821660009081526001602052604081208054839290620001bb908490620002ab565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200021390620002d2565b90600052602060002090601f01602090048101928262000237576000855562000282565b82601f106200025257805160ff191683800117855562000282565b8280016001018555821562000282579182015b828111156200028257825182559160200191906001019062000265565b506200029092915062000294565b5090565b5b8082111562000290576000815560010162000295565b60008219821115620002cd57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002e757607f821691505b6020821081036200030857634e487b7160e01b600052602260045260246000fd5b50919050565b610d6d806200031e6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb14610246578063b45ee9ef14610259578063dd62ed3e1461026c578063e3d670d7146101cc578063f2fde38b1461027f57600080fd5b8063715018a6146101f55780638da5cb5b146101fd57806395d89b41146102185780639dc29fac14610220578063a457c2d71461023357600080fd5b8063313ce567116100f4578063313ce5671461018c578063395093511461019b5780633eaaf86b146101ae57806340c10f19146101b757806370a08231146101cc57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e610292565b60405161013b9190610b8c565b60405180910390f35b610157610152366004610bfd565b610324565b604051901515815260200161013b565b6003545b60405190815260200161013b565b610157610187366004610c27565b61033c565b6040516009815260200161013b565b6101576101a9366004610bfd565b610360565b61016b60075481565b6101ca6101c5366004610bfd565b610382565b005b61016b6101da366004610c63565b6001600160a01b031660009081526001602052604090205490565b6101ca610390565b6000546040516001600160a01b03909116815260200161013b565b61012e6103fb565b6101ca61022e366004610bfd565b61040a565b610157610241366004610bfd565b610414565b610157610254366004610bfd565b61048f565b6101ca610267366004610c27565b61049d565b61016b61027a366004610c85565b6104ad565b6101ca61028d366004610c63565b6104d8565b6060600480546102a190610cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90610cb8565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b5050505050905090565b6000336103328185856105a3565b5060019392505050565b60003361034a8582856106c7565b610355858585610741565b506001949350505050565b60003361033281858561037383836104ad565b61037d9190610d08565b6105a3565b61038c828261090f565b5050565b6000546001600160a01b031633146103ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6103f960006109ee565b565b6060600580546102a190610cb8565b61038c8282610a3e565b6000338161042282866104ad565b9050838110156104825760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103e6565b61035582868684036105a3565b600033610332818585610741565b6104a8838383610741565b505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000546001600160a01b031633146105325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e6565b6001600160a01b0381166105975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e6565b6105a0816109ee565b50565b6001600160a01b0383166106055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e6565b6001600160a01b0382166106665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106d384846104ad565b9050600019811461073b578181101561072e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e6565b61073b84848484036105a3565b50505050565b6001600160a01b0383166107a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e6565b6001600160a01b0382166108075760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e6565b6001600160a01b0383166000908152600160205260409020548181101561087f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e6565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906108b6908490610d08565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161090291815260200190565b60405180910390a361073b565b6001600160a01b0382166109655760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e6565b80600360008282546109779190610d08565b90915550506001600160a01b038216600090815260016020526040812080548392906109a4908490610d08565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610a9e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103e6565b6001600160a01b03821660009081526001602052604090205481811015610b125760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103e6565b6001600160a01b0383166000908152600160205260408120838303905560038054849290610b41908490610d20565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b81811015610bb957858101830151858201604001528201610b9d565b81811115610bcb576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bf857600080fd5b919050565b60008060408385031215610c1057600080fd5b610c1983610be1565b946020939093013593505050565b600080600060608486031215610c3c57600080fd5b610c4584610be1565b9250610c5360208501610be1565b9150604084013590509250925092565b600060208284031215610c7557600080fd5b610c7e82610be1565b9392505050565b60008060408385031215610c9857600080fd5b610ca183610be1565b9150610caf60208401610be1565b90509250929050565b600181811c90821680610ccc57607f821691505b602082108103610cec57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d1b57610d1b610cf2565b500190565b600082821015610d3257610d32610cf2565b50039056fea26469706673582212200395aa51ed67149ece4d4afdd4db7fa596b90677adfedb004f40724c93fecc9d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x21A7A4A7 PUSH1 0xE1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21A7 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH1 0x9 PUSH3 0x66 PUSH3 0x60 PUSH3 0xC9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCD JUMP JUMPDEST DUP3 MLOAD PUSH3 0x7B SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x205 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x91 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x205 JUMP JUMPDEST POP PUSH1 0x6 SSTORE POP POP PUSH8 0x16345785D8A0000 PUSH1 0x7 SSTORE PUSH3 0xC3 PUSH3 0xBA PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH3 0x11D JUMP JUMPDEST PUSH3 0x30E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x178 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x18C SWAP2 SWAP1 PUSH3 0x2AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1BB SWAP1 DUP5 SWAP1 PUSH3 0x2AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x213 SWAP1 PUSH3 0x2D2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x237 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x282 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x252 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x282 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x282 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x265 JUMP JUMPDEST POP PUSH3 0x290 SWAP3 SWAP2 POP PUSH3 0x294 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x290 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x295 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2E7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x308 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6D DUP1 PUSH3 0x31E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xB45EE9EF EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x16B PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x157 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST PUSH2 0x16B PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CD SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x5A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x34A DUP6 DUP3 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x355 DUP6 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x373 DUP4 DUP4 PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x38C DUP3 DUP3 PUSH2 0x90F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F9 PUSH1 0x0 PUSH2 0x9EE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x38C DUP3 DUP3 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x422 DUP3 DUP7 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x355 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4A8 DUP4 DUP4 DUP4 PUSH2 0x741 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x5A0 DUP2 PUSH2 0x9EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D3 DUP5 DUP5 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x73B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x73B DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8B6 SWAP1 DUP5 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x902 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x977 SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9A4 SWAP1 DUP5 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB41 SWAP1 DUP5 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB9D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC19 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC45 DUP5 PUSH2 0xBE1 JUMP JUMPDEST SWAP3 POP PUSH2 0xC53 PUSH1 0x20 DUP6 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7E DUP3 PUSH2 0xBE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA1 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xCAF PUSH1 0x20 DUP5 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCCC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1B PUSH2 0xCF2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xD32 PUSH2 0xCF2 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SWAP6 0xAA MLOAD 0xED PUSH8 0x149ECE4D4AFDD4DB PUSH32 0xA596B90677ADFEDB004F40724C93FECC9D64736F6C634300080D003300000000 ",
							"sourceMap": "20494:690:0:-:0;;;20570:129;;;;;;;;;;6457:198;;;;;;;;;;;;;-1:-1:-1;;;6457:198:0;;;;;;;;;;;;;;;;-1:-1:-1;;;6457:198:0;;;20604:1;18820:32;18839:12;:10;;;:12;;:::i;:::-;18820:18;:32::i;:::-;6576:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6600:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;6628:8:0;:19;-1:-1:-1;;20633:19:0::1;20618:12;:34:::0;20663:28:::1;20669:7;18987::::0;19014:6;-1:-1:-1;;;;;19014:6:0;;18941:87;20669:7:::1;20678:12;::::0;20663:5:::1;:28::i;:::-;20494:690:::0;;4295:98;4375:10;;4295:98::o;20248:191::-;20322:16;20341:6;;-1:-1:-1;;;;;20358:17:0;;;-1:-1:-1;;;;;;20358:17:0;;;;;;20391:40;;20341:6;;;;;;;20391:40;;20322:16;20391:40;20311:128;20248:191;:::o;13494:399::-;-1:-1:-1;;;;;13578:21:0;;13570:65;;;;-1:-1:-1;;;13570:65:0;;216:2:1;13570:65:0;;;198:21:1;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;13570:65:0;;;;;;;;13726:6;13710:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13743:18:0;;;;;;:9;:18;;;;;:28;;13765:6;;13743:18;:28;;13765:6;;13743:28;:::i;:::-;;;;-1:-1:-1;;13787:37:0;;750:25:1;;;-1:-1:-1;;;;;13787:37:0;;;13804:1;;13787:37;;738:2:1;723:18;13787:37:0;;;;;;;13494:399;;:::o;20494:690::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20494:690:0;;;-1:-1:-1;20494:690:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;374:225:1;414:3;445:1;441:6;438:1;435:13;432:136;;;490:10;485:3;481:20;478:1;471:31;525:4;522:1;515:15;553:4;550:1;543:15;432:136;-1:-1:-1;584:9:1;;374:225::o;786:380::-;865:1;861:12;;;;908;;;929:61;;983:4;975:6;971:17;961:27;;929:61;1036:2;1028:6;1025:14;1005:18;1002:38;999:161;;1082:10;1077:3;1073:20;1070:1;1063:31;1117:4;1114:1;1107:15;1145:4;1142:1;1135:15;999:161;;786:380;;;:::o;:::-;20494:690:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_707": {
									"entryPoint": null,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_642": {
									"entryPoint": 1443,
									"id": 642,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_696": {
									"entryPoint": null,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_597": {
									"entryPoint": 2622,
									"id": 597,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_525": {
									"entryPoint": 2319,
									"id": 525,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_109": {
									"entryPoint": null,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_685": {
									"entryPoint": 1735,
									"id": 685,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_totalSupply_816": {
									"entryPoint": null,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_809": {
									"entryPoint": 2542,
									"id": 809,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_469": {
									"entryPoint": 1857,
									"id": 469,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_264": {
									"entryPoint": 1197,
									"id": 264,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_289": {
									"entryPoint": 804,
									"id": 289,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balance_852": {
									"entryPoint": null,
									"id": 852,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_894": {
									"entryPoint": 1034,
									"id": 894,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_392": {
									"entryPoint": 1044,
									"id": 392,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_351": {
									"entryPoint": 864,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_881": {
									"entryPoint": 898,
									"id": 881,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_177": {
									"entryPoint": 658,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_738": {
									"entryPoint": null,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_766": {
									"entryPoint": 912,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_187": {
									"entryPoint": 1019,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_322": {
									"entryPoint": 828,
									"id": 322,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_789": {
									"entryPoint": 1240,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferPrice_868": {
									"entryPoint": 1181,
									"id": 868,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_246": {
									"entryPoint": 1167,
									"id": 246,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8112:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2241:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2251:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2251:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2293:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2308:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2324:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2329:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2320:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2320:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2333:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2316:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2316:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2210:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2221:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2232:4:1",
														"type": ""
													}
												],
												"src": "2140:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2435:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2481:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2490:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2493:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2483:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2483:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2483:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2456:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2465:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2452:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2452:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2477:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2448:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:32:1"
															},
															"nodeType": "YulIf",
															"src": "2445:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2506:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2535:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2516:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2554:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2587:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2598:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2583:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2564:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2404:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2416:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													}
												],
												"src": "2348:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2668:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2678:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2695:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2678:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2709:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2739:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2745:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2713:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2786:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2788:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2802:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2810:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2798:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2798:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2788:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2766:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2759:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:26:1"
															},
															"nodeType": "YulIf",
															"src": "2756:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2876:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2897:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2904:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2909:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2900:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2900:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2890:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2890:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2890:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2944:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2934:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2934:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2972:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2962:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2962:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2962:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2832:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2855:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2863:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2852:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2852:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2829:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:38:1"
															},
															"nodeType": "YulIf",
															"src": "2826:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2648:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2657:6:1",
														"type": ""
													}
												],
												"src": "2613:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3030:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3047:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3054:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3059:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3040:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3087:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3090:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3080:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3111:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3114:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3104:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2998:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3178:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3205:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3207:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3207:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3207:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3194:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3201:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3197:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3191:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:13:1"
															},
															"nodeType": "YulIf",
															"src": "3188:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3236:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3247:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3250:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3236:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3161:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3164:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3170:3:1",
														"type": ""
													}
												],
												"src": "3130:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3437:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3454:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3465:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3447:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3488:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3499:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3484:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3504:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3477:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3527:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3543:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3516:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3587:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3610:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3595:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3587:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3414:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3428:4:1",
														"type": ""
													}
												],
												"src": "3263:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3798:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3826:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3808:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3808:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3849:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3860:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3845:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3845:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3865:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3838:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3899:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3884:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3884:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3904:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3877:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3877:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3959:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3970:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3955:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3975:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3948:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3948:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3992:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4004:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4015:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3992:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3775:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3789:4:1",
														"type": ""
													}
												],
												"src": "3624:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4204:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4221:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4232:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4214:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4214:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4214:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4255:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4266:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4251:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4244:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4244:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4294:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4305:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4290:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4290:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4310:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4283:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4381:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4399:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4411:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4422:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4399:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4181:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4195:4:1",
														"type": ""
													}
												],
												"src": "4030:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4611:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4628:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4639:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4621:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4662:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4673:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4658:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4658:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4678:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4651:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4651:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4712:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4697:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4717:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4690:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4772:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4783:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4768:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4768:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4788:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4761:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4804:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4816:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4827:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4812:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4804:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4588:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4602:4:1",
														"type": ""
													}
												],
												"src": "4437:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5016:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5033:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5044:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5026:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5067:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5078:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5056:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5056:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5106:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5117:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5102:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5122:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5095:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5095:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5095:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5188:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5173:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5173:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5193:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5166:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5207:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5219:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5207:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4993:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5007:4:1",
														"type": ""
													}
												],
												"src": "4842:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5419:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5436:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5447:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5429:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5429:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5429:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5470:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5466:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5486:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5459:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5520:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5505:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5525:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5498:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5498:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5498:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5566:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5578:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5574:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5574:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5566:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5396:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5410:4:1",
														"type": ""
													}
												],
												"src": "5245:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5794:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5805:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5787:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5828:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5839:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5824:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5844:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5817:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5817:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5867:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5878:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5863:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5863:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5883:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5856:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5856:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5938:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5949:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5934:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5934:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5954:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5927:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5971:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5983:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5979:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5971:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5754:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5768:4:1",
														"type": ""
													}
												],
												"src": "5603:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6200:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6211:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6193:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6193:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6234:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6245:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6230:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6250:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6223:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6223:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6273:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6284:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6269:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6289:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6262:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6262:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6344:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6355:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6340:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6360:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6333:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6333:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6375:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6387:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6398:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6383:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6383:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6375:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6160:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6174:4:1",
														"type": ""
													}
												],
												"src": "6009:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6587:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6604:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6597:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6649:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6627:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6627:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6677:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6688:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6673:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6693:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6666:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6748:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6759:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6744:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6744:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6764:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6737:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6737:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6782:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6794:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6805:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6790:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6782:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6564:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6578:4:1",
														"type": ""
													}
												],
												"src": "6413:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6994:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7011:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7022:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7004:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7056:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7041:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7061:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7034:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7034:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7084:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7095:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7080:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7100:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7073:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7143:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6971:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6985:4:1",
														"type": ""
													}
												],
												"src": "6820:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7354:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7371:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7382:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7364:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7364:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7401:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7421:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7394:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7394:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7455:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7440:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7460:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7433:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7515:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7526:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7511:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7531:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7504:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7504:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7544:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7556:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7567:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7552:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7552:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7544:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7331:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7345:4:1",
														"type": ""
													}
												],
												"src": "7180:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7756:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7773:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7784:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7766:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7766:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7807:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7818:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7803:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7803:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7823:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7796:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7796:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7846:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7857:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7842:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7842:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7862:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7835:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7928:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7913:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7933:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7906:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7906:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7947:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7959:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7970:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7955:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7955:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7947:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7733:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7747:4:1",
														"type": ""
													}
												],
												"src": "7582:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8034:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8056:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8058:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8058:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8058:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8050:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8053:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8047:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:8:1"
															},
															"nodeType": "YulIf",
															"src": "8044:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8087:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8099:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8102:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8095:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8087:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8016:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8019:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8025:4:1",
														"type": ""
													}
												],
												"src": "7985:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb14610246578063b45ee9ef14610259578063dd62ed3e1461026c578063e3d670d7146101cc578063f2fde38b1461027f57600080fd5b8063715018a6146101f55780638da5cb5b146101fd57806395d89b41146102185780639dc29fac14610220578063a457c2d71461023357600080fd5b8063313ce567116100f4578063313ce5671461018c578063395093511461019b5780633eaaf86b146101ae57806340c10f19146101b757806370a08231146101cc57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e610292565b60405161013b9190610b8c565b60405180910390f35b610157610152366004610bfd565b610324565b604051901515815260200161013b565b6003545b60405190815260200161013b565b610157610187366004610c27565b61033c565b6040516009815260200161013b565b6101576101a9366004610bfd565b610360565b61016b60075481565b6101ca6101c5366004610bfd565b610382565b005b61016b6101da366004610c63565b6001600160a01b031660009081526001602052604090205490565b6101ca610390565b6000546040516001600160a01b03909116815260200161013b565b61012e6103fb565b6101ca61022e366004610bfd565b61040a565b610157610241366004610bfd565b610414565b610157610254366004610bfd565b61048f565b6101ca610267366004610c27565b61049d565b61016b61027a366004610c85565b6104ad565b6101ca61028d366004610c63565b6104d8565b6060600480546102a190610cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90610cb8565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b5050505050905090565b6000336103328185856105a3565b5060019392505050565b60003361034a8582856106c7565b610355858585610741565b506001949350505050565b60003361033281858561037383836104ad565b61037d9190610d08565b6105a3565b61038c828261090f565b5050565b6000546001600160a01b031633146103ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6103f960006109ee565b565b6060600580546102a190610cb8565b61038c8282610a3e565b6000338161042282866104ad565b9050838110156104825760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103e6565b61035582868684036105a3565b600033610332818585610741565b6104a8838383610741565b505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000546001600160a01b031633146105325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e6565b6001600160a01b0381166105975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e6565b6105a0816109ee565b50565b6001600160a01b0383166106055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e6565b6001600160a01b0382166106665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106d384846104ad565b9050600019811461073b578181101561072e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e6565b61073b84848484036105a3565b50505050565b6001600160a01b0383166107a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e6565b6001600160a01b0382166108075760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e6565b6001600160a01b0383166000908152600160205260409020548181101561087f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e6565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906108b6908490610d08565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161090291815260200190565b60405180910390a361073b565b6001600160a01b0382166109655760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e6565b80600360008282546109779190610d08565b90915550506001600160a01b038216600090815260016020526040812080548392906109a4908490610d08565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610a9e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103e6565b6001600160a01b03821660009081526001602052604090205481811015610b125760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103e6565b6001600160a01b0383166000908152600160205260408120838303905560038054849290610b41908490610d20565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b81811015610bb957858101830151858201604001528201610b9d565b81811115610bcb576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bf857600080fd5b919050565b60008060408385031215610c1057600080fd5b610c1983610be1565b946020939093013593505050565b600080600060608486031215610c3c57600080fd5b610c4584610be1565b9250610c5360208501610be1565b9150604084013590509250925092565b600060208284031215610c7557600080fd5b610c7e82610be1565b9392505050565b60008060408385031215610c9857600080fd5b610ca183610be1565b9150610caf60208401610be1565b90509250929050565b600181811c90821680610ccc57607f821691505b602082108103610cec57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d1b57610d1b610cf2565b500190565b600082821015610d3257610d32610cf2565b50039056fea26469706673582212200395aa51ed67149ece4d4afdd4db7fa596b90677adfedb004f40724c93fecc9d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xB45EE9EF EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x16B PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x157 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST PUSH2 0x16B PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CD SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x5A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x34A DUP6 DUP3 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x355 DUP6 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x373 DUP4 DUP4 PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x38C DUP3 DUP3 PUSH2 0x90F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F9 PUSH1 0x0 PUSH2 0x9EE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x38C DUP3 DUP3 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x422 DUP3 DUP7 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x355 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4A8 DUP4 DUP4 DUP4 PUSH2 0x741 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x5A0 DUP2 PUSH2 0x9EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D3 DUP5 DUP5 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x73B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x73B DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8B6 SWAP1 DUP5 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x902 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x977 SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9A4 SWAP1 DUP5 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB41 SWAP1 DUP5 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB9D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC19 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC45 DUP5 PUSH2 0xBE1 JUMP JUMPDEST SWAP3 POP PUSH2 0xC53 PUSH1 0x20 DUP6 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7E DUP3 PUSH2 0xBE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA1 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xCAF PUSH1 0x20 DUP5 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCCC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1B PUSH2 0xCF2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xD32 PUSH2 0xCF2 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SWAP6 0xAA MLOAD 0xED PUSH8 0x149ECE4D4AFDD4DB PUSH32 0xA596B90677ADFEDB004F40724C93FECC9D64736F6C634300080D003300000000 ",
							"sourceMap": "20494:690:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6725:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9216:242;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;9216:242:0;1053:187:1;7844:108:0;7932:12;;7844:108;;;1391:25:1;;;1379:2;1364:18;7844:108:0;1245:177:1;10038:295:0;;;;;;:::i;:::-;;:::i;7687:92::-;;;7770:1;1902:36:1;;1890:2;1875:18;7687:92:0;1760:184:1;10742:270:0;;;;;;:::i;:::-;;:::i;20534:27::-;;;;;;20983:95;;;;;;:::i;:::-;;:::i;:::-;;8015:177;;;;;;:::i;:::-;-1:-1:-1;;;;;8166:18:0;8134:7;8166:18;;;:9;:18;;;;;;;8015:177;19592:103;;;:::i;18941:87::-;18987:7;19014:6;18941:87;;-1:-1:-1;;;;;19014:6:0;;;2286:51:1;;2274:2;2259:18;18941:87:0;2140:203:1;6944:104:0;;;:::i;21086:95::-;;;;;;:::i;:::-;;:::i;11515:505::-;;;;;;:::i;:::-;;:::i;8398:234::-;;;;;;:::i;:::-;;:::i;20823:152::-;;;;;;:::i;:::-;;:::i;8695:201::-;;;;;;:::i;:::-;;:::i;19850:238::-;;;;;;:::i;:::-;;:::i;6725:100::-;6779:13;6812:5;6805:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6725:100;:::o;9216:242::-;9335:4;4375:10;9396:32;4375:10;9412:7;9421:6;9396:8;:32::i;:::-;-1:-1:-1;9446:4:0;;9216:242;-1:-1:-1;;;9216:242:0:o;10038:295::-;10169:4;4375:10;10227:38;10243:4;4375:10;10258:6;10227:15;:38::i;:::-;10276:27;10286:4;10292:2;10296:6;10276:9;:27::i;:::-;-1:-1:-1;10321:4:0;;10038:295;-1:-1:-1;;;;10038:295:0:o;10742:270::-;10857:4;4375:10;10918:64;4375:10;10934:7;10971:10;10943:25;4375:10;10934:7;10943:9;:25::i;:::-;:38;;;;:::i;:::-;10918:8;:64::i;20983:95::-;21048:22;21054:7;21063:6;21048:5;:22::i;:::-;20983:95;;:::o;19592:103::-;18987:7;19014:6;-1:-1:-1;;;;;19014:6:0;4375:10;19161:23;19153:68;;;;-1:-1:-1;;;19153:68:0;;3465:2:1;19153:68:0;;;3447:21:1;;;3484:18;;;3477:30;3543:34;3523:18;;;3516:62;3595:18;;19153:68:0;;;;;;;;;19657:30:::1;19684:1;19657:18;:30::i;:::-;19592:103::o:0;6944:104::-;7000:13;7033:7;7026:14;;;;;:::i;21086:95::-;21151:22;21157:7;21166:6;21151:5;:22::i;11515:505::-;11635:4;4375:10;11635:4;11723:25;4375:10;11740:7;11723:9;:25::i;:::-;11696:52;;11801:15;11781:16;:35;;11759:122;;;;-1:-1:-1;;;11759:122:0;;3826:2:1;11759:122:0;;;3808:21:1;3865:2;3845:18;;;3838:30;3904:34;3884:18;;;3877:62;-1:-1:-1;;;3955:18:1;;;3948:35;4000:19;;11759:122:0;3624:401:1;11759:122:0;11917:60;11926:5;11933:7;11961:15;11942:16;:34;11917:8;:60::i;8398:234::-;8513:4;4375:10;8574:28;4375:10;8591:2;8595:6;8574:9;:28::i;20823:152::-;20940:27;20950:4;20956:2;20960:6;20940:9;:27::i;:::-;20823:152;;;:::o;8695:201::-;-1:-1:-1;;;;;8861:18:0;;;8829:7;8861:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8695:201::o;19850:238::-;18987:7;19014:6;-1:-1:-1;;;;;19014:6:0;4375:10;19161:23;19153:68;;;;-1:-1:-1;;;19153:68:0;;3465:2:1;19153:68:0;;;3447:21:1;;;3484:18;;;3477:30;3543:34;3523:18;;;3516:62;3595:18;;19153:68:0;3263:356:1;19153:68:0;-1:-1:-1;;;;;19953:22:0;::::1;19931:110;;;::::0;-1:-1:-1;;;19931:110:0;;4232:2:1;19931:110:0::1;::::0;::::1;4214:21:1::0;4271:2;4251:18;;;4244:30;4310:34;4290:18;;;4283:62;-1:-1:-1;;;4361:18:1;;;4354:36;4407:19;;19931:110:0::1;4030:402:1::0;19931:110:0::1;20052:28;20071:8;20052:18;:28::i;:::-;19850:238:::0;:::o;15255:380::-;-1:-1:-1;;;;;15391:19:0;;15383:68;;;;-1:-1:-1;;;15383:68:0;;4639:2:1;15383:68:0;;;4621:21:1;4678:2;4658:18;;;4651:30;4717:34;4697:18;;;4690:62;-1:-1:-1;;;4768:18:1;;;4761:34;4812:19;;15383:68:0;4437:400:1;15383:68:0;-1:-1:-1;;;;;15470:21:0;;15462:68;;;;-1:-1:-1;;;15462:68:0;;5044:2:1;15462:68:0;;;5026:21:1;5083:2;5063:18;;;5056:30;5122:34;5102:18;;;5095:62;-1:-1:-1;;;5173:18:1;;;5166:32;5215:19;;15462:68:0;4842:398:1;15462:68:0;-1:-1:-1;;;;;15543:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15595:32;;1391:25:1;;;15595:32:0;;1364:18:1;15595:32:0;;;;;;;15255:380;;;:::o;15926:502::-;16061:24;16088:25;16098:5;16105:7;16088:9;:25::i;:::-;16061:52;;-1:-1:-1;;16128:16:0;:37;16124:297;;16228:6;16208:16;:26;;16182:117;;;;-1:-1:-1;;;16182:117:0;;5447:2:1;16182:117:0;;;5429:21:1;5486:2;5466:18;;;5459:30;5525:31;5505:18;;;5498:59;5574:18;;16182:117:0;5245:353:1;16182:117:0;16343:51;16352:5;16359:7;16387:6;16368:16;:25;16343:8;:51::i;:::-;16050:378;15926:502;;;:::o;12499:708::-;-1:-1:-1;;;;;12630:18:0;;12622:68;;;;-1:-1:-1;;;12622:68:0;;5805:2:1;12622:68:0;;;5787:21:1;5844:2;5824:18;;;5817:30;5883:34;5863:18;;;5856:62;-1:-1:-1;;;5934:18:1;;;5927:35;5979:19;;12622:68:0;5603:401:1;12622:68:0;-1:-1:-1;;;;;12709:16:0;;12701:64;;;;-1:-1:-1;;;12701:64:0;;6211:2:1;12701:64:0;;;6193:21:1;6250:2;6230:18;;;6223:30;6289:34;6269:18;;;6262:62;-1:-1:-1;;;6340:18:1;;;6333:33;6383:19;;12701:64:0;6009:399:1;12701:64:0;-1:-1:-1;;;;;12851:15:0;;12829:19;12851:15;;;:9;:15;;;;;;12899:21;;;;12877:109;;;;-1:-1:-1;;;12877:109:0;;6615:2:1;12877:109:0;;;6597:21:1;6654:2;6634:18;;;6627:30;6693:34;6673:18;;;6666:62;-1:-1:-1;;;6744:18:1;;;6737:36;6790:19;;12877:109:0;6413:402:1;12877:109:0;-1:-1:-1;;;;;13022:15:0;;;;;;;:9;:15;;;;;;13040:20;;;13022:38;;13082:13;;;;;;;;:23;;13054:6;;13022:15;13082:23;;13054:6;;13082:23;:::i;:::-;;;;;;;;13138:2;-1:-1:-1;;;;;13123:26:0;13132:4;-1:-1:-1;;;;;13123:26:0;;13142:6;13123:26;;;;1391:25:1;;1379:2;1364:18;;1245:177;13123:26:0;;;;;;;;13162:37;20823:152;13494:399;-1:-1:-1;;;;;13578:21:0;;13570:65;;;;-1:-1:-1;;;13570:65:0;;7022:2:1;13570:65:0;;;7004:21:1;7061:2;7041:18;;;7034:30;7100:33;7080:18;;;7073:61;7151:18;;13570:65:0;6820:355:1;13570:65:0;13726:6;13710:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13743:18:0;;;;;;:9;:18;;;;;:28;;13765:6;;13743:18;:28;;13765:6;;13743:28;:::i;:::-;;;;-1:-1:-1;;13787:37:0;;1391:25:1;;;-1:-1:-1;;;;;13787:37:0;;;13804:1;;13787:37;;1379:2:1;1364:18;13787:37:0;;;;;;;20983:95;;:::o;20248:191::-;20322:16;20341:6;;-1:-1:-1;;;;;20358:17:0;;;-1:-1:-1;;;;;;20358:17:0;;;;;;20391:40;;20341:6;;;;;;;20391:40;;20322:16;20391:40;20311:128;20248:191;:::o;14226:591::-;-1:-1:-1;;;;;14310:21:0;;14302:67;;;;-1:-1:-1;;;14302:67:0;;7382:2:1;14302:67:0;;;7364:21:1;7421:2;7401:18;;;7394:30;7460:34;7440:18;;;7433:62;-1:-1:-1;;;7511:18:1;;;7504:31;7552:19;;14302:67:0;7180:397:1;14302:67:0;-1:-1:-1;;;;;14469:18:0;;14444:22;14469:18;;;:9;:18;;;;;;14506:24;;;;14498:71;;;;-1:-1:-1;;;14498:71:0;;7784:2:1;14498:71:0;;;7766:21:1;7823:2;7803:18;;;7796:30;7862:34;7842:18;;;7835:62;-1:-1:-1;;;7913:18:1;;;7906:32;7955:19;;14498:71:0;7582:398:1;14498:71:0;-1:-1:-1;;;;;14605:18:0;;;;;;:9;:18;;;;;14626:23;;;14605:44;;14671:12;:22;;14643:6;;14605:18;14671:22;;14643:6;;14671:22;:::i;:::-;;;;-1:-1:-1;;14711:37:0;;1391:25:1;;;14737:1:0;;-1:-1:-1;;;;;14711:37:0;;;;;1379:2:1;1364:18;14711:37:0;;;;;;;20823:152;;;:::o;14:597:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;2998:127::-;3059:10;3054:3;3050:20;3047:1;3040:31;3090:4;3087:1;3080:15;3114:4;3111:1;3104:15;3130:128;3170:3;3201:1;3197:6;3194:1;3191:13;3188:39;;;3207:18;;:::i;:::-;-1:-1:-1;3243:9:1;;3130:128::o;7985:125::-;8025:4;8053:1;8050;8047:8;8044:34;;;8058:18;;:::i;:::-;-1:-1:-1;8095:9:1;;7985:125::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "687400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_totalSupply()": "2362",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24647",
								"balance(address)": "2625",
								"balanceOf(address)": "2648",
								"burn(address,uint256)": "51037",
								"decimals()": "200",
								"decreaseAllowance(address,uint256)": "27061",
								"increaseAllowance(address,uint256)": "27023",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2346",
								"renounceOwnership()": "28137",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51198",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28419",
								"transferPrice(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20699,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "21A7A4A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "21A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6457,
									"end": 6655,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20604,
									"end": 20605,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 18820,
									"end": 18852,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 18839,
									"end": 18851,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 18839,
									"end": 18849,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 18839,
									"end": 18849,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18839,
									"end": 18849,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18839,
									"end": 18851,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18839,
									"end": 18851,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18839,
									"end": 18851,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18839,
									"end": 18851,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 18839,
									"end": 18851,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18820,
									"end": 18838,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 18820,
									"end": 18852,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18820,
									"end": 18852,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 18820,
									"end": 18852,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6576,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6607,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6600,
									"end": 6607,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6600,
									"end": 6617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6636,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6628,
									"end": 6647,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20633,
									"end": 20652,
									"name": "PUSH",
									"source": 0,
									"value": "16345785D8A0000"
								},
								{
									"begin": 20618,
									"end": 20630,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20618,
									"end": 20652,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20663,
									"end": 20691,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 20669,
									"end": 20676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18987,
									"end": 18994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19014,
									"end": 19020,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 19014,
									"end": 19020,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19014,
									"end": 19020,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18941,
									"end": 19028,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20669,
									"end": 20676,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 20669,
									"end": 20676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20678,
									"end": 20690,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20678,
									"end": 20690,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 20663,
									"end": 20668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 20663,
									"end": 20691,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20663,
									"end": 20691,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 20663,
									"end": 20691,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4295,
									"end": 4393,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4295,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4375,
									"end": 4385,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4375,
									"end": 4385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4295,
									"end": 4393,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 20248,
									"end": 20439,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20248,
									"end": 20439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20322,
									"end": 20338,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20322,
									"end": 20338,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 20311,
									"end": 20439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20248,
									"end": 20439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20248,
									"end": 20439,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 13494,
									"end": 13893,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13494,
									"end": 13893,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13578,
									"end": 13599,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13578,
									"end": 13599,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 13570,
									"end": 13635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13726,
									"end": 13732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13710,
									"end": 13722,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13710,
									"end": 13722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13710,
									"end": 13732,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13752,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13765,
									"end": 13771,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13765,
									"end": 13771,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13761,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13765,
									"end": 13771,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13765,
									"end": 13771,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13743,
									"end": 13771,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 750,
									"end": 775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 750,
									"end": 775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 750,
									"end": 775,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13804,
									"end": 13805,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13804,
									"end": 13805,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 738,
									"end": 740,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 723,
									"end": 741,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13824,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 13494,
									"end": 13893,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13494,
									"end": 13893,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13494,
									"end": 13893,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 374,
									"end": 599,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 374,
									"end": 599,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 414,
									"end": 417,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 441,
									"end": 447,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 438,
									"end": 439,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 435,
									"end": 448,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 432,
									"end": 568,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 432,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 432,
									"end": 568,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 490,
									"end": 500,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 485,
									"end": 488,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 481,
									"end": 501,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 478,
									"end": 479,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 502,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 525,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 522,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 515,
									"end": 530,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 550,
									"end": 551,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 558,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 432,
									"end": 568,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 432,
									"end": 568,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 584,
									"end": 593,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 584,
									"end": 593,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 374,
									"end": 599,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 865,
									"end": 866,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 929,
									"end": 990,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 983,
									"end": 987,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 975,
									"end": 981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 971,
									"end": 988,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 961,
									"end": 988,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 961,
									"end": 988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 990,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 929,
									"end": 990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1040,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1092,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1077,
									"end": 1080,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1073,
									"end": 1093,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1094,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1117,
									"end": 1121,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1114,
									"end": 1115,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1107,
									"end": 1122,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1142,
									"end": 1143,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1135,
									"end": 1150,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20494,
									"end": 21184,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200395aa51ed67149ece4d4afdd4db7fa596b90677adfedb004f40724c93fecc9d64736f6c634300080d0033",
									".code": [
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "B45EE9EF"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "E3D670D7"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "3EAAF86B"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 21184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 7944,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7932,
											"end": 7944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7770,
											"end": 7771,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20534,
											"end": 20561,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 20534,
											"end": 20561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20534,
											"end": 20561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 20534,
											"end": 20561,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20534,
											"end": 20561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20534,
											"end": 20561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20534,
											"end": 20561,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8192,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2140,
											"end": 2343,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6812,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 9339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9419,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9446,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9446,
											"end": 9450,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9216,
											"end": 9458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10169,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10227,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10243,
											"end": 10247,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10227,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10227,
											"end": 10265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10227,
											"end": 10265,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10227,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10276,
											"end": 10303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10276,
											"end": 10303,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10276,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10321,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10321,
											"end": 10325,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10038,
											"end": 10333,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10742,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10941,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10981,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10943,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10918,
											"end": 10982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21054,
											"end": 21061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21063,
											"end": 21069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 21048,
											"end": 21070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21048,
											"end": 21070,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21048,
											"end": 21070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19657,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 19684,
											"end": 19685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19657,
											"end": 19675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19657,
											"end": 19687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19657,
											"end": 19687,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 19657,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6944,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7000,
											"end": 7013,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7033,
											"end": 7040,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 21086,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21151,
											"end": 21173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21157,
											"end": 21164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21166,
											"end": 21172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21151,
											"end": 21156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21151,
											"end": 21173,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 11515,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11635,
											"end": 11639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11635,
											"end": 11639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11723,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11723,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11723,
											"end": 11748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11723,
											"end": 11748,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 11723,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 11816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11781,
											"end": 11797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11781,
											"end": 11816,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11781,
											"end": 11816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3938,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4019,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4000,
											"end": 4019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3624,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 11759,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11917,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11926,
											"end": 11931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 11940,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11961,
											"end": 11976,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 11958,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 11976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11917,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 11917,
											"end": 11977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8398,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8591,
											"end": 8593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8574,
											"end": 8602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 20950,
											"end": 20954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20956,
											"end": 20958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20960,
											"end": 20966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 20940,
											"end": 20967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20940,
											"end": 20967,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 20940,
											"end": 20967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8829,
											"end": 8836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8872,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8896,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3263,
											"end": 3619,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19953,
											"end": 19975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19953,
											"end": 19975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4344,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4426,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4407,
											"end": 4426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4030,
											"end": 4432,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20052,
											"end": 20080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 20071,
											"end": 20079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20052,
											"end": 20070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 20052,
											"end": 20080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20052,
											"end": 20080,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 20052,
											"end": 20080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15391,
											"end": 15410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15391,
											"end": 15410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4680,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4658,
											"end": 4676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4751,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4812,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4437,
											"end": 4837,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15383,
											"end": 15451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15470,
											"end": 15491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5044,
											"end": 5046,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5234,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5215,
											"end": 5234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4842,
											"end": 5240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 15462,
											"end": 15530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15554,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15579,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15579,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15627,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15635,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16061,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16088,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16098,
											"end": 16103,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16105,
											"end": 16112,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16088,
											"end": 16097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16088,
											"end": 16113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16088,
											"end": 16113,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16088,
											"end": 16113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16061,
											"end": 16113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16061,
											"end": 16113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16128,
											"end": 16144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16165,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16124,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16124,
											"end": 16421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16228,
											"end": 16234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16208,
											"end": 16224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16208,
											"end": 16234,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16208,
											"end": 16234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5429,
											"end": 5450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5488,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5556,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5245,
											"end": 5598,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16182,
											"end": 16299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16352,
											"end": 16357,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16387,
											"end": 16393,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16384,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16343,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16050,
											"end": 16428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 16428,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12499,
											"end": 13207,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 12499,
											"end": 13207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5846,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5824,
											"end": 5842,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5824,
											"end": 5842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5817,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 5917,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 5918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5979,
											"end": 5998,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5979,
											"end": 5998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5603,
											"end": 6004,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12622,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12709,
											"end": 12725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6323,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6009,
											"end": 6408,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12701,
											"end": 12765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12829,
											"end": 12848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 12920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 12920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 12920,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 12920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6597,
											"end": 6618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6656,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6727,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6666,
											"end": 6728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6737,
											"end": 6773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6809,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6790,
											"end": 6809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6413,
											"end": 6815,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12877,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13031,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13060,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13060,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13060,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13095,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13082,
											"end": 13105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13138,
											"end": 13140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13132,
											"end": 13136,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13142,
											"end": 13148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13494,
											"end": 13893,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 13494,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13578,
											"end": 13599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13578,
											"end": 13599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7004,
											"end": 7025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7100,
											"end": 7133,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6820,
											"end": 7175,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13570,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13726,
											"end": 13732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13722,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13710,
											"end": 13722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13752,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13765,
											"end": 13771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13765,
											"end": 13771,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13765,
											"end": 13771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13765,
											"end": 13771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13771,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13824,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 21078,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20248,
											"end": 20439,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 20248,
											"end": 20439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20322,
											"end": 20338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20322,
											"end": 20338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20311,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14226,
											"end": 14817,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14226,
											"end": 14817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14310,
											"end": 14331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7423,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7494,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7433,
											"end": 7495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7180,
											"end": 7577,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 14302,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 14466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14478,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14530,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7825,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7862,
											"end": 7896,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7955,
											"end": 7974,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7955,
											"end": 7974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7582,
											"end": 7980,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14498,
											"end": 14569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14614,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14626,
											"end": 14649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14626,
											"end": 14649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14626,
											"end": 14649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14649,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14671,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 14649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 14649,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 14649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 14649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14671,
											"end": 14693,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14737,
											"end": 14738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14737,
											"end": 14738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14748,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20975,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2463,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2495,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 2861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2866,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2904,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2900,
											"end": 2920,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2934,
											"end": 2949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2976,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2969,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2998,
											"end": 3125,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2998,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3069,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3087,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3080,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3118,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3111,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3119,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3130,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3188,
											"end": 3227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3258,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8055,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balance(address)": "e3d670d7",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferPrice(address,address,uint256)": "b45ee9ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x8719c32dcc545738040a58763b52918cfe883c74383c50fabcadd45e0eb76258\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6d5e84c45a6856591d0ea3a4bc03be6e70869deac19d8512b06a213f1dcd20\",\"dweb:/ipfs/QmQU5Mz6H1z7WcMXnV78SHj1C1UF27fK73nfZLAtKSxj4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 713,
								"contract": "smartContract_flat.sol:Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "smartContract_flat.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 136,
								"contract": "smartContract_flat.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 138,
								"contract": "smartContract_flat.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 140,
								"contract": "smartContract_flat.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 142,
								"contract": "smartContract_flat.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 144,
								"contract": "smartContract_flat.sol:Token",
								"label": "_decimal",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 816,
								"contract": "smartContract_flat.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"smartContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burningAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountAfterBurning",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ownerSurplus",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "BNBchargedByAdmin",
									"type": "uint256"
								}
							],
							"name": "buyTokenDetails",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "AdminAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "buyTokenDetailsAddresses",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ownerInitiative",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "BNB",
									"type": "uint256"
								}
							],
							"name": "swapTokenBNB",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AdminAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Coin",
							"outputs": [
								{
									"internalType": "contract Token",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "amountAfterBurning",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "burningAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "buyInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "buyTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "purchaseToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "burnToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "userGets",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ownerSurplus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "BNBchargedByAdmin",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getIdsOfUser",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract Token",
									"name": "_Coin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_adminAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ownerSurplusToAdmin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "setAdminAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalInvesters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smartContract_flat.sol\":28390:32042  contract smartContract is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"smartContract_flat.sol\":18820:18852  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n  caller\n    /* \"smartContract_flat.sol\":18820:18838  _transferOwnership */\n  tag_7\n    /* \"smartContract_flat.sol\":18820:18852  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"smartContract_flat.sol\":28390:32042  contract smartContract is Ownable {... */\n  jump(tag_8)\n    /* \"smartContract_flat.sol\":20248:20439  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"smartContract_flat.sol\":20322:20338  address oldOwner */\n  0x00\n    /* \"smartContract_flat.sol\":20341:20347  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":20358:20375  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"smartContract_flat.sol\":20341:20347  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"smartContract_flat.sol\":20322:20338  address oldOwner */\n  swap1\n    /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"smartContract_flat.sol\":20311:20439  {... */\n  pop\n    /* \"smartContract_flat.sol\":20248:20439  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"smartContract_flat.sol\":28390:32042  contract smartContract is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"smartContract_flat.sol\":28390:32042  contract smartContract is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8637856d\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xaf0afec9\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xaf0afec9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd09bf0e4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xee238506\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x8637856d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9134709e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa77b2e37\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x2c1e816d\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x2c1e816d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a84374b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5f4fd1f7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x158ef93e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1794bb3c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x28f661e3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"smartContract_flat.sol\":28547:28570  bool public initialized */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      sload(0x04)\n      tag_21\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"smartContract_flat.sol\":28547:28570  bool public initialized */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smartContract_flat.sol\":29572:29933  function initialize(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"smartContract_flat.sol\":28464:28491  address public AdminAddress */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      sload(0x01)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1001:1033   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":983:1034   */\n      dup2\n      mstore\n        /* \"#utility.yul\":971:973   */\n      0x20\n        /* \"#utility.yul\":956:974   */\n      add\n        /* \"smartContract_flat.sol\":28464:28491  address public AdminAddress */\n      tag_23\n        /* \"#utility.yul\":837:1040   */\n      jump\n        /* \"smartContract_flat.sol\":29941:30039  function setAdminAddress(address _admin) public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"smartContract_flat.sol\":28759:28812  mapping(uint256 => uint256) public amountAfterBurning */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":1635:1660   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1623:1625   */\n      0x20\n        /* \"#utility.yul\":1608:1626   */\n      add\n        /* \"smartContract_flat.sol\":28759:28812  mapping(uint256 => uint256) public amountAfterBurning */\n      tag_23\n        /* \"#utility.yul\":1489:1666   */\n      jump\n        /* \"smartContract_flat.sol\":30147:30268  function getIdsOfUser(address user) public view returns (uint256[] memory) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n        /* \"smartContract_flat.sol\":19592:19695  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_26\n      tag_55\n      jump\t// in\n        /* \"smartContract_flat.sol\":28579:28646  mapping(address => mapping(uint256 => purchaseInfo)) public buyInfo */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      0x05\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      swap6\n      dup6\n      add\n      sload\n      0x06\n      swap1\n      swap6\n      add\n      sload\n      swap4\n      swap6\n      swap3\n      swap5\n      swap2\n      swap4\n      swap1\n      swap3\n      swap2\n      swap1\n      dup8\n      jump\n    tag_57:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2950:2975   */\n      swap8\n      dup9\n      mstore\n        /* \"#utility.yul\":3006:3008   */\n      0x20\n        /* \"#utility.yul\":2991:3009   */\n      dup9\n      add\n        /* \"#utility.yul\":2984:3018   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":3034:3052   */\n      swap5\n      dup7\n      add\n        /* \"#utility.yul\":3027:3061   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3092:3094   */\n      0x60\n        /* \"#utility.yul\":3077:3095   */\n      dup6\n      add\n        /* \"#utility.yul\":3070:3104   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3135:3138   */\n      0x80\n        /* \"#utility.yul\":3120:3139   */\n      dup5\n      add\n        /* \"#utility.yul\":3113:3148   */\n      mstore\n        /* \"#utility.yul\":3179:3182   */\n      0xa0\n        /* \"#utility.yul\":3164:3183   */\n      dup4\n      add\n        /* \"#utility.yul\":3157:3192   */\n      mstore\n        /* \"#utility.yul\":3223:3226   */\n      0xc0\n        /* \"#utility.yul\":3208:3227   */\n      dup3\n      add\n        /* \"#utility.yul\":3201:3236   */\n      mstore\n        /* \"#utility.yul\":2937:2940   */\n      0xe0\n        /* \"#utility.yul\":2922:2941   */\n      add\n        /* \"smartContract_flat.sol\":28579:28646  mapping(address => mapping(uint256 => purchaseInfo)) public buyInfo */\n      tag_23\n        /* \"#utility.yul\":2635:3242   */\n      jump\n        /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n      jump(tag_31)\n        /* \"smartContract_flat.sol\":30276:31960  function buyToken(uint256 amount, address user) public payable {... */\n    tag_11:\n      tag_26\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"smartContract_flat.sol\":28498:28515  Token public Coin */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      sload(0x02)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"smartContract_flat.sol\":30047:30139  function totalInvesters() public view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n        /* \"smartContract_flat.sol\":30121:30131  investerID */\n      sload(0x03)\n        /* \"smartContract_flat.sol\":30047:30139  function totalInvesters() public view returns (uint256) {... */\n      jump(tag_41)\n        /* \"smartContract_flat.sol\":28819:28873  mapping(uint256 => uint256) public ownerSurplusToAdmin */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_41\n      tag_82\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_82:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"smartContract_flat.sol\":28704:28752  mapping(uint256 => uint256) public burningAmount */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_41\n      tag_87\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_87:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"smartContract_flat.sol\":19850:20088  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_26\n      tag_92\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"smartContract_flat.sol\":29572:29933  function initialize(... */\n    tag_29:\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19161:19184  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"smartContract_flat.sol\":29714:29725  initialized */\n      and(0xff, sload(0x04))\n        /* \"smartContract_flat.sol\":29714:29733  initialized != true */\n      iszero\n      iszero\n        /* \"smartContract_flat.sol\":29714:29725  initialized */\n      0x01\n        /* \"smartContract_flat.sol\":29714:29733  initialized != true */\n      sub\n        /* \"smartContract_flat.sol\":29706:29757  require(initialized != true, \"Already Initialized\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4358:4360   */\n      0x20\n        /* \"smartContract_flat.sol\":29706:29757  require(initialized != true, \"Already Initialized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4340:4361   */\n      mstore\n        /* \"#utility.yul\":4397:4399   */\n      0x13\n        /* \"#utility.yul\":4377:4395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4370:4400   */\n      mstore\n      shl(0x6a, 0x105b1c9958591e48125b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":4416:4434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4409:4458   */\n      mstore\n        /* \"#utility.yul\":4475:4493   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":29706:29757  require(initialized != true, \"Already Initialized\") */\n      tag_99\n        /* \"#utility.yul\":4156:4499   */\n      jump\n        /* \"smartContract_flat.sol\":29706:29757  require(initialized != true, \"Already Initialized\") */\n    tag_102:\n        /* \"smartContract_flat.sol\":29768:29772  Coin */\n      0x02\n        /* \"smartContract_flat.sol\":29768:29787  Coin = Token(_Coin) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n      0x01\n        /* \"smartContract_flat.sol\":29798:29835  AdminAddress = address(_adminAddress) */\n      dup1\n      sload\n      swap2\n      dup7\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":29846:29864  Coin.transferPrice */\n      0xb45ee9ef\n        /* \"smartContract_flat.sol\":29865:29872  owner() */\n      tag_105\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smartContract_flat.sol\":29865:29872  owner() */\n    tag_105:\n        /* \"smartContract_flat.sol\":29846:29896  Coin.transferPrice(owner(), _adminAddress, amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4762:4777   */\n      swap2\n      dup3\n      and\n        /* \"smartContract_flat.sol\":29846:29896  Coin.transferPrice(owner(), _adminAddress, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4744:4778   */\n      mstore\n        /* \"#utility.yul\":4814:4829   */\n      swap1\n      dup6\n      and\n        /* \"#utility.yul\":4794:4812   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4787:4830   */\n      mstore\n        /* \"#utility.yul\":4846:4864   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4839:4873   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":29846:29896  Coin.transferPrice(owner(), _adminAddress, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n        /* \"smartContract_flat.sol\":29907:29918  initialized */\n      0x04\n        /* \"smartContract_flat.sol\":29907:29925  initialized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"smartContract_flat.sol\":29921:29925  true */\n      0x01\n        /* \"smartContract_flat.sol\":29907:29925  initialized = true */\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"smartContract_flat.sol\":29572:29933  function initialize(... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":29941:30039  function setAdminAddress(address _admin) public onlyOwner {... */\n    tag_39:\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19161:19184  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_114:\n        /* \"smartContract_flat.sol\":30010:30022  AdminAddress */\n      0x01\n        /* \"smartContract_flat.sol\":30010:30031  AdminAddress = _admin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":29941:30039  function setAdminAddress(address _admin) public onlyOwner {... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":30147:30268  function getIdsOfUser(address user) public view returns (uint256[] memory) {... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":30240:30260  getIDByAddress[user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":30240:30254  getIDByAddress */\n      0x06\n        /* \"smartContract_flat.sol\":30240:30260  getIDByAddress[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":30233:30260  return getIDByAddress[user] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"smartContract_flat.sol\":30204:30220  uint256[] memory */\n      0x60\n      swap4\n        /* \"smartContract_flat.sol\":30233:30260  return getIDByAddress[user] */\n      swap3\n      dup4\n      add\n        /* \"smartContract_flat.sol\":30240:30260  getIDByAddress[user] */\n      dup3\n        /* \"smartContract_flat.sol\":30233:30260  return getIDByAddress[user] */\n      dup3\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":30147:30268  function getIdsOfUser(address user) public view returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":19592:19695  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19161:19184  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_123:\n        /* \"smartContract_flat.sol\":19657:19687  _transferOwnership(address(0)) */\n      tag_126\n        /* \"smartContract_flat.sol\":19684:19685  0 */\n      0x00\n        /* \"smartContract_flat.sol\":19657:19675  _transferOwnership */\n      tag_127\n        /* \"smartContract_flat.sol\":19657:19687  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_126:\n        /* \"smartContract_flat.sol\":19592:19695  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":30276:31960  function buyToken(uint256 amount, address user) public payable {... */\n    tag_70:\n        /* \"smartContract_flat.sol\":30372:30384  AdminAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"smartContract_flat.sol\":30358:30368  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":30358:30384  msg.sender == AdminAddress */\n      eq\n        /* \"smartContract_flat.sol\":30350:30420  require(msg.sender == AdminAddress, \"Only Admin can make transaction\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5086:5088   */\n      0x20\n        /* \"smartContract_flat.sol\":30350:30420  require(msg.sender == AdminAddress, \"Only Admin can make transaction\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5068:5089   */\n      mstore\n        /* \"#utility.yul\":5125:5127   */\n      0x1f\n        /* \"#utility.yul\":5105:5123   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5098:5128   */\n      mstore\n        /* \"#utility.yul\":5164:5197   */\n      0x4f6e6c792041646d696e2063616e206d616b65207472616e73616374696f6e00\n        /* \"#utility.yul\":5144:5162   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5137:5198   */\n      mstore\n        /* \"#utility.yul\":5215:5233   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":30350:30420  require(msg.sender == AdminAddress, \"Only Admin can make transaction\") */\n      tag_99\n        /* \"#utility.yul\":4884:5239   */\n      jump\n        /* \"smartContract_flat.sol\":30350:30420  require(msg.sender == AdminAddress, \"Only Admin can make transaction\") */\n    tag_130:\n        /* \"smartContract_flat.sol\":30453:30457  Coin */\n      sload(0x02)\n      0x01\n        /* \"smartContract_flat.sol\":30466:30478  AdminAddress */\n      sload\n        /* \"smartContract_flat.sol\":30453:30479  Coin.balance(AdminAddress) */\n      mload(0x40)\n      shl(0xe0, 0xe3d670d7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":30466:30478  AdminAddress */\n      swap2\n      dup3\n      and\n        /* \"smartContract_flat.sol\":30453:30479  Coin.balance(AdminAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":983:1034   */\n      mstore\n        /* \"smartContract_flat.sol\":30482:30488  amount */\n      dup5\n      swap3\n        /* \"smartContract_flat.sol\":30453:30457  Coin */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"smartContract_flat.sol\":30453:30465  Coin.balance */\n      0xe3d670d7\n      swap1\n        /* \"#utility.yul\":956:974   */\n      0x24\n      add\n        /* \"smartContract_flat.sol\":30453:30479  Coin.balance(AdminAddress) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"smartContract_flat.sol\":30453:30488  Coin.balance(AdminAddress) > amount */\n      gt\n        /* \"smartContract_flat.sol\":30431:30557  require(... */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5635:5637   */\n      0x20\n        /* \"smartContract_flat.sol\":30431:30557  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5617:5638   */\n      mstore\n        /* \"#utility.yul\":5674:5676   */\n      0x29\n        /* \"#utility.yul\":5654:5672   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5647:5677   */\n      mstore\n        /* \"#utility.yul\":5713:5747   */\n      0x4572726f723a2041646d696e20646f6573206e6f74206861766520656e6f7567\n        /* \"#utility.yul\":5693:5711   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5686:5748   */\n      mstore\n      shl(0xb8, 0x682062616c616e6365)\n        /* \"#utility.yul\":5764:5782   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5757:5796   */\n      mstore\n        /* \"#utility.yul\":5813:5832   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":30431:30557  require(... */\n      tag_99\n        /* \"#utility.yul\":5433:5838   */\n      jump\n        /* \"smartContract_flat.sol\":30431:30557  require(... */\n    tag_138:\n        /* \"smartContract_flat.sol\":30593:30603  investerID */\n      0x03\n        /* \"smartContract_flat.sol\":30593:30605  investerID++ */\n      dup1\n      sload\n      0x01\n      swap1\n      dup2\n      add\n      swap2\n      dup3\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":30669:30689  getIDByAddress[user] */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":30593:30603  investerID */\n      0x00\n        /* \"smartContract_flat.sol\":30669:30689  getIDByAddress[user] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":30669:30683  getIDByAddress */\n      0x06\n        /* \"smartContract_flat.sol\":30669:30689  getIDByAddress[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"smartContract_flat.sol\":30669:30698  getIDByAddress[user].push(id) */\n      dup1\n      sload\n      dup1\n      dup6\n      add\n      dup3\n      sstore\n      swap1\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup3\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":30744:30747  100 */\n      0x64\n      swap1\n        /* \"smartContract_flat.sol\":30730:30740  1 * amount */\n      tag_142\n      swap1\n        /* \"smartContract_flat.sol\":30734:30740  amount */\n      dup6\n      swap1\n        /* \"smartContract_flat.sol\":30730:30740  1 * amount */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"smartContract_flat.sol\":30729:30747  (1 * amount) / 100 */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"smartContract_flat.sol\":30709:30726  burningAmount[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":30709:30722  burningAmount */\n      0x07\n        /* \"smartContract_flat.sol\":30709:30726  burningAmount[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":30709:30747  burningAmount[id] = (1 * amount) / 100 */\n      dup2\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":30783:30812  amount.sub(burningAmount[id]) */\n      tag_146\n      swap1\n        /* \"smartContract_flat.sol\":30783:30789  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":30783:30793  amount.sub */\n      tag_147\n        /* \"smartContract_flat.sol\":30783:30812  amount.sub(burningAmount[id]) */\n      jump\t// in\n    tag_146:\n        /* \"smartContract_flat.sol\":30758:30780  amountAfterBurning[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":30758:30776  amountAfterBurning */\n      0x08\n        /* \"smartContract_flat.sol\":30758:30780  amountAfterBurning[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":30758:30812  amountAfterBurning[id] = amount.sub(burningAmount[id]) */\n      dup3\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":30823:30827  Coin */\n      sload(0x02)\n      0x01\n        /* \"smartContract_flat.sol\":30842:30854  AdminAddress */\n      sload\n        /* \"smartContract_flat.sol\":30823:30885  Coin.transferPrice(AdminAddress, user, amountAfterBurning[id]) */\n      swap2\n      mload\n      shl(0xe0, 0xb45ee9ef)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":30842:30854  AdminAddress */\n      swap3\n      dup4\n      and\n        /* \"smartContract_flat.sol\":30823:30885  Coin.transferPrice(AdminAddress, user, amountAfterBurning[id]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4744:4778   */\n      mstore\n        /* \"#utility.yul\":4814:4829   */\n      dup6\n      dup4\n      and\n        /* \"#utility.yul\":4794:4812   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4787:4830   */\n      mstore\n        /* \"#utility.yul\":4846:4864   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4839:4873   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"smartContract_flat.sol\":30823:30827  Coin */\n      and\n      swap1\n        /* \"smartContract_flat.sol\":30823:30841  Coin.transferPrice */\n      0xb45ee9ef\n      swap1\n        /* \"#utility.yul\":4679:4697   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":30823:30885  Coin.transferPrice(AdminAddress, user, amountAfterBurning[id]) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n      pop\n        /* \"smartContract_flat.sol\":30921:30931  investerID */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":30898:30911  buyInfo[user] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":30898:30905  buyInfo */\n      0x05\n        /* \"smartContract_flat.sol\":30898:30911  buyInfo[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":30898:30915  buyInfo[user][id] */\n      dup9\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":30898:30931  buyInfo[user][id].ID = investerID */\n      swap4\n      dup5\n      sstore\n        /* \"smartContract_flat.sol\":30970:30985  block.timestamp */\n      timestamp\n        /* \"smartContract_flat.sol\":30942:30967  buyInfo[user][id].buyTime */\n      0x01\n      dup6\n      add\n        /* \"smartContract_flat.sol\":30942:30985  buyInfo[user][id].buyTime = block.timestamp */\n      sstore\n        /* \"smartContract_flat.sol\":30996:31027  buyInfo[user][id].purchaseToken */\n      0x02\n      dup1\n      dup6\n      add\n        /* \"smartContract_flat.sol\":30996:31036  buyInfo[user][id].purchaseToken = amount */\n      dup12\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":31077:31090  burningAmount */\n      0x07\n        /* \"smartContract_flat.sol\":31077:31094  burningAmount[id] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31047:31074  buyInfo[user][id].burnToken */\n      swap6\n      dup6\n      add\n        /* \"smartContract_flat.sol\":31047:31094  buyInfo[user][id].burnToken = burningAmount[id] */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"smartContract_flat.sol\":31134:31152  amountAfterBurning */\n      0x08\n        /* \"smartContract_flat.sol\":31134:31156  amountAfterBurning[id] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31105:31131  buyInfo[user][id].userGets */\n      0x04\n      swap1\n      swap2\n      add\n        /* \"smartContract_flat.sol\":31105:31156  buyInfo[user][id].userGets = amountAfterBurning[id] */\n      dup2\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":31193:31222  amountAfterBurning[id].div(2) */\n      tag_152\n      swap4\n      pop\n        /* \"smartContract_flat.sol\":31134:31156  amountAfterBurning[id] */\n      swap2\n      pop\n        /* \"smartContract_flat.sol\":31193:31219  amountAfterBurning[id].div */\n      tag_153\n        /* \"smartContract_flat.sol\":31193:31222  amountAfterBurning[id].div(2) */\n      jump\t// in\n    tag_152:\n        /* \"smartContract_flat.sol\":31167:31190  ownerSurplusToAdmin[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31167:31186  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31167:31190  ownerSurplusToAdmin[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":31167:31222  ownerSurplusToAdmin[id] = amountAfterBurning[id].div(2) */\n      dup2\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":31255:31259  Coin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"smartContract_flat.sol\":31255:31267  Coin.balance */\n      0xe3d670d7\n        /* \"smartContract_flat.sol\":31268:31275  owner() */\n      tag_154\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smartContract_flat.sol\":31268:31275  owner() */\n    tag_154:\n        /* \"smartContract_flat.sol\":31255:31276  Coin.balance(owner()) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1001:1033   */\n      swap1\n      swap2\n      and\n        /* \"smartContract_flat.sol\":31255:31276  Coin.balance(owner()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":983:1034   */\n      mstore\n        /* \"#utility.yul\":956:974   */\n      0x24\n      add\n        /* \"smartContract_flat.sol\":31255:31276  Coin.balance(owner()) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"smartContract_flat.sol\":31255:31302  Coin.balance(owner()) > ownerSurplusToAdmin[id] */\n      gt\n        /* \"smartContract_flat.sol\":31233:31371  require(... */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6572:6574   */\n      0x20\n        /* \"smartContract_flat.sol\":31233:31371  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6554:6575   */\n      mstore\n        /* \"#utility.yul\":6611:6613   */\n      0x29\n        /* \"#utility.yul\":6591:6609   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6584:6614   */\n      mstore\n        /* \"#utility.yul\":6650:6684   */\n      0x4572726f723a204f776e657220646f6573206e6f74206861766520656e6f7567\n        /* \"#utility.yul\":6630:6648   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6623:6685   */\n      mstore\n      shl(0xb8, 0x682062616c616e6365)\n        /* \"#utility.yul\":6701:6719   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6694:6733   */\n      mstore\n        /* \"#utility.yul\":6750:6769   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":31233:31371  require(... */\n      tag_99\n        /* \"#utility.yul\":6370:6775   */\n      jump\n        /* \"smartContract_flat.sol\":31233:31371  require(... */\n    tag_159:\n        /* \"smartContract_flat.sol\":31415:31438  ownerSurplusToAdmin[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31415:31434  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31415:31438  ownerSurplusToAdmin[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":31382:31395  buyInfo[user] */\n      dup1\n      dup8\n      and\n      dup6\n      mstore\n        /* \"smartContract_flat.sol\":31382:31389  buyInfo */\n      0x05\n        /* \"smartContract_flat.sol\":31382:31395  buyInfo[user] */\n      dup1\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"smartContract_flat.sol\":31382:31399  buyInfo[user][id] */\n      dup8\n      dup8\n      mstore\n      swap1\n      swap5\n      mstore\n      swap2\n      swap1\n      swap4\n      keccak256\n        /* \"smartContract_flat.sol\":31382:31412  buyInfo[user][id].ownerSurplus */\n      swap1\n      swap2\n      add\n        /* \"smartContract_flat.sol\":31382:31438  buyInfo[user][id].ownerSurplus = ownerSurplusToAdmin[id] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"smartContract_flat.sol\":31449:31453  Coin */\n      sload(0x02)\n      and\n        /* \"smartContract_flat.sol\":31449:31467  Coin.transferPrice */\n      0xb45ee9ef\n        /* \"smartContract_flat.sol\":31468:31475  owner() */\n      tag_162\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smartContract_flat.sol\":31468:31475  owner() */\n    tag_162:\n        /* \"smartContract_flat.sol\":31477:31489  AdminAddress */\n      sload(0x01)\n      0x00\n        /* \"smartContract_flat.sol\":31491:31514  ownerSurplusToAdmin[id] */\n      dup6\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31491:31510  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31491:31514  ownerSurplusToAdmin[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31449:31515  Coin.transferPrice(owner(), AdminAddress, ownerSurplusToAdmin[id]) */\n      swap1\n      mload\n      0xe0\n      dup6\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4762:4777   */\n      swap4\n      dup5\n      and\n        /* \"smartContract_flat.sol\":31449:31515  Coin.transferPrice(owner(), AdminAddress, ownerSurplusToAdmin[id]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4744:4778   */\n      mstore\n        /* \"smartContract_flat.sol\":31477:31489  AdminAddress */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4794:4812   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4787:4830   */\n      mstore\n        /* \"#utility.yul\":4846:4864   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4839:4873   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":31449:31515  Coin.transferPrice(owner(), AdminAddress, ownerSurplusToAdmin[id]) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n        /* \"smartContract_flat.sol\":31544:31567  ownerSurplusToAdmin[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31544:31563  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31544:31567  ownerSurplusToAdmin[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31539:31584  (1 * ownerSurplusToAdmin[id]).div(1000000000) */\n      tag_167\n      swap2\n      pop\n        /* \"smartContract_flat.sol\":31573:31583  1000000000 */\n      0x3b9aca00\n      swap1\n        /* \"smartContract_flat.sol\":31540:31567  1 * ownerSurplusToAdmin[id] */\n      tag_168\n      swap1\n        /* \"smartContract_flat.sol\":31540:31541  1 */\n      0x01\n        /* \"smartContract_flat.sol\":31540:31567  1 * ownerSurplusToAdmin[id] */\n      tag_143\n      jump\t// in\n    tag_168:\n        /* \"smartContract_flat.sol\":31539:31572  (1 * ownerSurplusToAdmin[id]).div */\n      swap1\n      tag_153\n        /* \"smartContract_flat.sol\":31539:31584  (1 * ownerSurplusToAdmin[id]).div(1000000000) */\n      jump\t// in\n    tag_167:\n      pop\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":31595:31631  payable(owner()).transfer(msg.value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"smartContract_flat.sol\":31621:31630  msg.value */\n      callvalue\n        /* \"smartContract_flat.sol\":31595:31631  payable(owner()).transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap3\n        /* \"smartContract_flat.sol\":31621:31630  msg.value */\n      swap1\n      swap2\n        /* \"smartContract_flat.sol\":31595:31631  payable(owner()).transfer(msg.value) */\n      dup2\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      dup2\n        /* \"smartContract_flat.sol\":31595:31631  payable(owner()).transfer(msg.value) */\n      dup2\n        /* \"smartContract_flat.sol\":31621:31630  msg.value */\n      dup6\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      dup9\n        /* \"smartContract_flat.sol\":31595:31631  payable(owner()).transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":31642:31655  buyInfo[user] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31642:31649  buyInfo */\n      0x05\n        /* \"smartContract_flat.sol\":31642:31655  buyInfo[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":31642:31659  buyInfo[user][id] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":31680:31689  msg.value */\n      callvalue\n        /* \"smartContract_flat.sol\":31642:31677  buyInfo[user][id].BNBchargedByAdmin */\n      0x06\n      swap1\n      swap2\n      add\n        /* \"smartContract_flat.sol\":31642:31689  buyInfo[user][id].BNBchargedByAdmin = msg.value */\n      sstore\n        /* \"smartContract_flat.sol\":31736:31748  AdminAddress */\n      sload(0x01)\n        /* \"smartContract_flat.sol\":31705:31758  buyTokenDetailsAddresses(user, AdminAddress, owner()) */\n      0x200e42c44f4b61e64b8298dd340205f3d4fd26f4018958219ac19fa737a4bc93\n      swap2\n        /* \"smartContract_flat.sol\":31650:31654  user */\n      dup5\n      swap2\n        /* \"smartContract_flat.sol\":31736:31748  AdminAddress */\n      and\n        /* \"smartContract_flat.sol\":31750:31757  owner() */\n      tag_172\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"smartContract_flat.sol\":18941:19028  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smartContract_flat.sol\":31750:31757  owner() */\n    tag_172:\n        /* \"smartContract_flat.sol\":31705:31758  buyTokenDetailsAddresses(user, AdminAddress, owner()) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7038:7053   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":7020:7054   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7090:7105   */\n      swap3\n      dup5\n      and\n        /* \"#utility.yul\":7085:7087   */\n      0x20\n        /* \"#utility.yul\":7070:7088   */\n      dup5\n      add\n        /* \"#utility.yul\":7063:7106   */\n      mstore\n        /* \"#utility.yul\":7142:7157   */\n      swap3\n      and\n        /* \"#utility.yul\":7122:7140   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":7115:7158   */\n      mstore\n        /* \"smartContract_flat.sol\":31705:31758  buyTokenDetailsAddresses(user, AdminAddress, owner()) */\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6970:6972   */\n      0x60\n        /* \"smartContract_flat.sol\":31705:31758  buyTokenDetailsAddresses(user, AdminAddress, owner()) */\n      add\n      swap1\n      log1\n        /* \"smartContract_flat.sol\":31825:31842  burningAmount[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31825:31838  burningAmount */\n      0x07\n        /* \"smartContract_flat.sol\":31825:31842  burningAmount[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31857:31875  amountAfterBurning */\n      0x08\n        /* \"smartContract_flat.sol\":31857:31879  amountAfterBurning[id] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31894:31913  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31894:31917  ownerSurplusToAdmin[id] */\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31774:31952  buyTokenDetails(... */\n      dup3\n      mload\n        /* \"#utility.yul\":7428:7453   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":7469:7487   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":7462:7496   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7512:7530   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7505:7539   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7570:7572   */\n      0x60\n        /* \"#utility.yul\":7555:7573   */\n      dup2\n      add\n        /* \"#utility.yul\":7548:7582   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"smartContract_flat.sol\":31932:31941  msg.value */\n      callvalue\n        /* \"#utility.yul\":7613:7616   */\n      0x80\n        /* \"#utility.yul\":7598:7617   */\n      dup3\n      add\n        /* \"#utility.yul\":7591:7626   */\n      mstore\n        /* \"smartContract_flat.sol\":31774:31952  buyTokenDetails(... */\n      0xd3826252b977104a2929fb0e0fea16abe1e1f9d413dbdd04568f52a0a681bf1c\n      swap1\n        /* \"#utility.yul\":7415:7418   */\n      0xa0\n        /* \"#utility.yul\":7400:7419   */\n      add\n        /* \"smartContract_flat.sol\":31774:31952  buyTokenDetails(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smartContract_flat.sol\":30339:31960  {... */\n      pop\n        /* \"smartContract_flat.sol\":30276:31960  function buyToken(uint256 amount, address user) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":19850:20088  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_93:\n        /* \"smartContract_flat.sol\":18987:18994  address */\n      0x00\n        /* \"smartContract_flat.sol\":19014:19020  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4375:4385  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19161:19184  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19153:19221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":19953:19975  newOwner != address(0) */\n      dup2\n      and\n        /* \"smartContract_flat.sol\":19931:20041  require(... */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7839:7841   */\n      0x20\n        /* \"smartContract_flat.sol\":19931:20041  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7821:7842   */\n      mstore\n        /* \"#utility.yul\":7878:7880   */\n      0x26\n        /* \"#utility.yul\":7858:7876   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7851:7881   */\n      mstore\n        /* \"#utility.yul\":7917:7951   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7897:7915   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7890:7952   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7968:7986   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7961:7997   */\n      mstore\n        /* \"#utility.yul\":8014:8033   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":19931:20041  require(... */\n      tag_99\n        /* \"#utility.yul\":7637:8039   */\n      jump\n        /* \"smartContract_flat.sol\":19931:20041  require(... */\n    tag_184:\n        /* \"smartContract_flat.sol\":20052:20080  _transferOwnership(newOwner) */\n      tag_187\n        /* \"smartContract_flat.sol\":20071:20079  newOwner */\n      dup2\n        /* \"smartContract_flat.sol\":20052:20070  _transferOwnership */\n      tag_127\n        /* \"smartContract_flat.sol\":20052:20080  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_187:\n        /* \"smartContract_flat.sol\":19850:20088  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":20248:20439  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_127:\n        /* \"smartContract_flat.sol\":20322:20338  address oldOwner */\n      0x00\n        /* \"smartContract_flat.sol\":20341:20347  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":20358:20375  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"smartContract_flat.sol\":20341:20347  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"smartContract_flat.sol\":20322:20338  address oldOwner */\n      swap1\n        /* \"smartContract_flat.sol\":20391:20431  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"smartContract_flat.sol\":20311:20439  {... */\n      pop\n        /* \"smartContract_flat.sol\":20248:20439  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":24554:24652  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_147:\n        /* \"smartContract_flat.sol\":24612:24619  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":24639:24644  a - b */\n      tag_191\n        /* \"smartContract_flat.sol\":24643:24644  b */\n      dup3\n        /* \"smartContract_flat.sol\":24639:24640  a */\n      dup5\n        /* \"smartContract_flat.sol\":24639:24644  a - b */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"smartContract_flat.sol\":24632:24644  return a - b */\n      swap4\n        /* \"smartContract_flat.sol\":24554:24652  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":25310:25408  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_153:\n        /* \"smartContract_flat.sol\":25368:25375  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":25395:25400  a / b */\n      tag_191\n        /* \"smartContract_flat.sol\":25399:25400  b */\n      dup3\n        /* \"smartContract_flat.sol\":25395:25396  a */\n      dup5\n        /* \"smartContract_flat.sol\":25395:25400  a / b */\n      tag_145\n      jump\t// in\n        /* \"#utility.yul\":206:344   */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":288:319   */\n      dup2\n      and\n        /* \"#utility.yul\":278:320   */\n      dup2\n      eq\n        /* \"#utility.yul\":268:338   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":334:335   */\n      0x00\n        /* \"#utility.yul\":331:332   */\n      dup1\n        /* \"#utility.yul\":324:336   */\n      revert\n        /* \"#utility.yul\":349:832   */\n    tag_28:\n        /* \"#utility.yul\":439:445   */\n      0x00\n        /* \"#utility.yul\":447:453   */\n      dup1\n        /* \"#utility.yul\":455:461   */\n      0x00\n        /* \"#utility.yul\":508:510   */\n      0x60\n        /* \"#utility.yul\":496:505   */\n      dup5\n        /* \"#utility.yul\":487:494   */\n      dup7\n        /* \"#utility.yul\":483:506   */\n      sub\n        /* \"#utility.yul\":479:511   */\n      slt\n        /* \"#utility.yul\":476:528   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":524:525   */\n      0x00\n        /* \"#utility.yul\":521:522   */\n      dup1\n        /* \"#utility.yul\":514:526   */\n      revert\n        /* \"#utility.yul\":476:528   */\n    tag_202:\n        /* \"#utility.yul\":563:572   */\n      dup4\n        /* \"#utility.yul\":550:573   */\n      calldataload\n        /* \"#utility.yul\":582:620   */\n      tag_203\n        /* \"#utility.yul\":614:619   */\n      dup2\n        /* \"#utility.yul\":582:620   */\n      tag_195\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":639:644   */\n      swap3\n      pop\n        /* \"#utility.yul\":696:698   */\n      0x20\n        /* \"#utility.yul\":681:699   */\n      dup5\n      add\n        /* \"#utility.yul\":668:700   */\n      calldataload\n        /* \"#utility.yul\":709:749   */\n      tag_204\n        /* \"#utility.yul\":668:700   */\n      dup2\n        /* \"#utility.yul\":709:749   */\n      tag_195\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":349:832   */\n      swap3\n      swap6\n        /* \"#utility.yul\":768:775   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":822:824   */\n      0x40\n        /* \"#utility.yul\":807:825   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":794:826   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":349:832   */\n      jump\t// out\n        /* \"#utility.yul\":1045:1299   */\n    tag_38:\n        /* \"#utility.yul\":1104:1110   */\n      0x00\n        /* \"#utility.yul\":1157:1159   */\n      0x20\n        /* \"#utility.yul\":1145:1154   */\n      dup3\n        /* \"#utility.yul\":1136:1143   */\n      dup5\n        /* \"#utility.yul\":1132:1155   */\n      sub\n        /* \"#utility.yul\":1128:1160   */\n      slt\n        /* \"#utility.yul\":1125:1177   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":1173:1174   */\n      0x00\n        /* \"#utility.yul\":1170:1171   */\n      dup1\n        /* \"#utility.yul\":1163:1175   */\n      revert\n        /* \"#utility.yul\":1125:1177   */\n    tag_207:\n        /* \"#utility.yul\":1212:1221   */\n      dup2\n        /* \"#utility.yul\":1199:1222   */\n      calldataload\n        /* \"#utility.yul\":1231:1269   */\n      tag_191\n        /* \"#utility.yul\":1263:1268   */\n      dup2\n        /* \"#utility.yul\":1231:1269   */\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1304:1484   */\n    tag_43:\n        /* \"#utility.yul\":1363:1369   */\n      0x00\n        /* \"#utility.yul\":1416:1418   */\n      0x20\n        /* \"#utility.yul\":1404:1413   */\n      dup3\n        /* \"#utility.yul\":1395:1402   */\n      dup5\n        /* \"#utility.yul\":1391:1414   */\n      sub\n        /* \"#utility.yul\":1387:1419   */\n      slt\n        /* \"#utility.yul\":1384:1436   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1384:1436   */\n    tag_210:\n      pop\n        /* \"#utility.yul\":1455:1478   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1304:1484   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1671:2303   */\n    tag_52:\n        /* \"#utility.yul\":1842:1844   */\n      0x20\n        /* \"#utility.yul\":1894:1915   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1964:1977   */\n      dup3\n      mload\n        /* \"#utility.yul\":1867:1885   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1986:2008   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1813:1817   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1842:1844   */\n      swap1\n        /* \"#utility.yul\":2065:2080   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2039:2041   */\n      0x40\n        /* \"#utility.yul\":2024:2042   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1813:1817   */\n      dup5\n        /* \"#utility.yul\":2108:2277   */\n    tag_213:\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2119:2120   */\n      dup2\n        /* \"#utility.yul\":2116:2129   */\n      lt\n        /* \"#utility.yul\":2108:2277   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2183:2196   */\n      dup4\n      mload\n        /* \"#utility.yul\":2171:2197   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2252:2267   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2217:2229   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2144:2145   */\n      0x01\n        /* \"#utility.yul\":2137:2146   */\n      add\n        /* \"#utility.yul\":2108:2277   */\n      jump(tag_213)\n    tag_215:\n      pop\n        /* \"#utility.yul\":2294:2297   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1671:2303   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2308:2630   */\n    tag_59:\n        /* \"#utility.yul\":2376:2382   */\n      0x00\n        /* \"#utility.yul\":2384:2390   */\n      dup1\n        /* \"#utility.yul\":2437:2439   */\n      0x40\n        /* \"#utility.yul\":2425:2434   */\n      dup4\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2412:2435   */\n      sub\n        /* \"#utility.yul\":2408:2440   */\n      slt\n        /* \"#utility.yul\":2405:2457   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2453:2454   */\n      0x00\n        /* \"#utility.yul\":2450:2451   */\n      dup1\n        /* \"#utility.yul\":2443:2455   */\n      revert\n        /* \"#utility.yul\":2405:2457   */\n    tag_217:\n        /* \"#utility.yul\":2492:2501   */\n      dup3\n        /* \"#utility.yul\":2479:2502   */\n      calldataload\n        /* \"#utility.yul\":2511:2549   */\n      tag_218\n        /* \"#utility.yul\":2543:2548   */\n      dup2\n        /* \"#utility.yul\":2511:2549   */\n      tag_195\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2568:2573   */\n      swap5\n        /* \"#utility.yul\":2620:2622   */\n      0x20\n        /* \"#utility.yul\":2605:2623   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2592:2624   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2308:2630   */\n      jump\t// out\n        /* \"#utility.yul\":3247:3569   */\n    tag_69:\n        /* \"#utility.yul\":3315:3321   */\n      0x00\n        /* \"#utility.yul\":3323:3329   */\n      dup1\n        /* \"#utility.yul\":3376:3378   */\n      0x40\n        /* \"#utility.yul\":3364:3373   */\n      dup4\n        /* \"#utility.yul\":3355:3362   */\n      dup6\n        /* \"#utility.yul\":3351:3374   */\n      sub\n        /* \"#utility.yul\":3347:3379   */\n      slt\n        /* \"#utility.yul\":3344:3396   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":3392:3393   */\n      0x00\n        /* \"#utility.yul\":3389:3390   */\n      dup1\n        /* \"#utility.yul\":3382:3394   */\n      revert\n        /* \"#utility.yul\":3344:3396   */\n    tag_221:\n        /* \"#utility.yul\":3428:3437   */\n      dup3\n        /* \"#utility.yul\":3415:3438   */\n      calldataload\n        /* \"#utility.yul\":3405:3438   */\n      swap2\n      pop\n        /* \"#utility.yul\":3488:3490   */\n      0x20\n        /* \"#utility.yul\":3477:3486   */\n      dup4\n        /* \"#utility.yul\":3473:3491   */\n      add\n        /* \"#utility.yul\":3460:3492   */\n      calldataload\n        /* \"#utility.yul\":3501:3539   */\n      tag_222\n        /* \"#utility.yul\":3533:3538   */\n      dup2\n        /* \"#utility.yul\":3501:3539   */\n      tag_195\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3558:3563   */\n      dup1\n        /* \"#utility.yul\":3548:3563   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3247:3569   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3795:4151   */\n    tag_100:\n        /* \"#utility.yul\":3997:3999   */\n      0x20\n        /* \"#utility.yul\":3979:4000   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4016:4034   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4009:4039   */\n      mstore\n        /* \"#utility.yul\":4075:4109   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4070:4072   */\n      0x40\n        /* \"#utility.yul\":4055:4073   */\n      dup3\n      add\n        /* \"#utility.yul\":4048:4110   */\n      mstore\n        /* \"#utility.yul\":4142:4144   */\n      0x60\n        /* \"#utility.yul\":4127:4145   */\n      add\n      swap1\n        /* \"#utility.yul\":3795:4151   */\n      jump\t// out\n        /* \"#utility.yul\":5244:5428   */\n    tag_137:\n        /* \"#utility.yul\":5314:5320   */\n      0x00\n        /* \"#utility.yul\":5367:5369   */\n      0x20\n        /* \"#utility.yul\":5355:5364   */\n      dup3\n        /* \"#utility.yul\":5346:5353   */\n      dup5\n        /* \"#utility.yul\":5342:5365   */\n      sub\n        /* \"#utility.yul\":5338:5370   */\n      slt\n        /* \"#utility.yul\":5335:5387   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":5383:5384   */\n      0x00\n        /* \"#utility.yul\":5380:5381   */\n      dup1\n        /* \"#utility.yul\":5373:5385   */\n      revert\n        /* \"#utility.yul\":5335:5387   */\n    tag_229:\n      pop\n        /* \"#utility.yul\":5406:5422   */\n      mload\n      swap2\n        /* \"#utility.yul\":5244:5428   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5843:5970   */\n    tag_196:\n        /* \"#utility.yul\":5904:5914   */\n      0x4e487b71\n        /* \"#utility.yul\":5899:5902   */\n      0xe0\n        /* \"#utility.yul\":5895:5915   */\n      shl\n        /* \"#utility.yul\":5892:5893   */\n      0x00\n        /* \"#utility.yul\":5885:5916   */\n      mstore\n        /* \"#utility.yul\":5935:5939   */\n      0x11\n        /* \"#utility.yul\":5932:5933   */\n      0x04\n        /* \"#utility.yul\":5925:5940   */\n      mstore\n        /* \"#utility.yul\":5959:5963   */\n      0x24\n        /* \"#utility.yul\":5956:5957   */\n      0x00\n        /* \"#utility.yul\":5949:5964   */\n      revert\n        /* \"#utility.yul\":5975:6143   */\n    tag_143:\n        /* \"#utility.yul\":6015:6022   */\n      0x00\n        /* \"#utility.yul\":6081:6082   */\n      dup2\n        /* \"#utility.yul\":6077:6078   */\n      0x00\n        /* \"#utility.yul\":6073:6079   */\n      not\n        /* \"#utility.yul\":6069:6083   */\n      div\n        /* \"#utility.yul\":6066:6067   */\n      dup4\n        /* \"#utility.yul\":6063:6084   */\n      gt\n        /* \"#utility.yul\":6058:6059   */\n      dup3\n        /* \"#utility.yul\":6051:6060   */\n      iszero\n        /* \"#utility.yul\":6044:6061   */\n      iszero\n        /* \"#utility.yul\":6040:6085   */\n      and\n        /* \"#utility.yul\":6037:6108   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":6088:6106   */\n      tag_234\n      tag_196\n      jump\t// in\n    tag_234:\n      pop\n        /* \"#utility.yul\":6128:6137   */\n      mul\n      swap1\n        /* \"#utility.yul\":5975:6143   */\n      jump\t// out\n        /* \"#utility.yul\":6148:6365   */\n    tag_145:\n        /* \"#utility.yul\":6188:6189   */\n      0x00\n        /* \"#utility.yul\":6214:6215   */\n      dup3\n        /* \"#utility.yul\":6204:6336   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":6258:6268   */\n      0x4e487b71\n        /* \"#utility.yul\":6253:6256   */\n      0xe0\n        /* \"#utility.yul\":6249:6269   */\n      shl\n        /* \"#utility.yul\":6246:6247   */\n      0x00\n        /* \"#utility.yul\":6239:6270   */\n      mstore\n        /* \"#utility.yul\":6293:6297   */\n      0x12\n        /* \"#utility.yul\":6290:6291   */\n      0x04\n        /* \"#utility.yul\":6283:6298   */\n      mstore\n        /* \"#utility.yul\":6321:6325   */\n      0x24\n        /* \"#utility.yul\":6318:6319   */\n      0x00\n        /* \"#utility.yul\":6311:6326   */\n      revert\n        /* \"#utility.yul\":6204:6336   */\n    tag_236:\n      pop\n        /* \"#utility.yul\":6350:6359   */\n      div\n      swap1\n        /* \"#utility.yul\":6148:6365   */\n      jump\t// out\n        /* \"#utility.yul\":8044:8169   */\n    tag_192:\n        /* \"#utility.yul\":8084:8088   */\n      0x00\n        /* \"#utility.yul\":8112:8113   */\n      dup3\n        /* \"#utility.yul\":8109:8110   */\n      dup3\n        /* \"#utility.yul\":8106:8114   */\n      lt\n        /* \"#utility.yul\":8103:8137   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":8117:8135   */\n      tag_243\n      tag_196\n      jump\t// in\n    tag_243:\n      pop\n        /* \"#utility.yul\":8154:8163   */\n      sub\n      swap1\n        /* \"#utility.yul\":8044:8169   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ca28295e4ee1c7656896c46a09dfee419f06b5c7261cb7770fc68feebd64d37864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_729": {
									"entryPoint": null,
									"id": 729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_109": {
									"entryPoint": null,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_809": {
									"entryPoint": 31,
									"id": 809,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e8c8061007e6000396000f3fe6080604052600436106100e85760003560e01c80638637856d1161008a578063af0afec911610059578063af0afec9146102fa578063d09bf0e41461030f578063ee2385061461033c578063f2fde38b1461036957600080fd5b80638637856d146102135780638da5cb5b146102a95780639134709e146102c7578063a77b2e37146102da57600080fd5b80632c1e816d116100c65780632c1e816d146101765780633a84374b146101965780635f4fd1f7146101d1578063715018a6146101fe57600080fd5b8063158ef93e146100ed5780631794bb3c1461011c57806328f661e31461013e575b600080fd5b3480156100f957600080fd5b506004546101079060ff1681565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b5061013c610137366004610c83565b610389565b005b34801561014a57600080fd5b5060015461015e906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b34801561018257600080fd5b5061013c610191366004610cc4565b6104c8565b3480156101a257600080fd5b506101c36101b1366004610ce1565b60086020526000908152604090205481565b604051908152602001610113565b3480156101dd57600080fd5b506101f16101ec366004610cc4565b610514565b6040516101139190610cfa565b34801561020a57600080fd5b5061013c610580565b34801561021f57600080fd5b5061027461022e366004610d3e565b6005602081815260009384526040808520909152918352912080546001820154600283015460038401546004850154958501546006909501549395929491939092919087565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610113565b3480156102b557600080fd5b506000546001600160a01b031661015e565b61013c6102d5366004610d6a565b6105b6565b3480156102e657600080fd5b5060025461015e906001600160a01b031681565b34801561030657600080fd5b506003546101c3565b34801561031b57600080fd5b506101c361032a366004610ce1565b60096020526000908152604090205481565b34801561034857600080fd5b506101c3610357366004610ce1565b60076020526000908152604090205481565b34801561037557600080fd5b5061013c610384366004610cc4565b610b64565b6000546001600160a01b031633146103bc5760405162461bcd60e51b81526004016103b390610d9a565b60405180910390fd5b60045460ff1615156001036104095760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e48125b9a5d1a585b1a5e9959606a1b60448201526064016103b3565b600280546001600160a01b038086166001600160a01b03199283168117909355600180549186169190921617905563b45ee9ef61044e6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908516602482015260448101849052606401600060405180830381600087803b15801561049e57600080fd5b505af11580156104b2573d6000803e3d6000fd5b50506004805460ff191660011790555050505050565b6000546001600160a01b031633146104f25760405162461bcd60e51b81526004016103b390610d9a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526006602090815260409182902080548351818402810184019094528084526060939283018282801561057457602002820191906000526020600020905b815481526020019060010190808311610560575b50505050509050919050565b6000546001600160a01b031633146105aa5760405162461bcd60e51b81526004016103b390610d9a565b6105b46000610bff565b565b6001546001600160a01b031633146106105760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792041646d696e2063616e206d616b65207472616e73616374696f6e0060448201526064016103b3565b60025460015460405163e3d670d760e01b81526001600160a01b0391821660048201528492919091169063e3d670d790602401602060405180830381865afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610dcf565b116106e35760405162461bcd60e51b815260206004820152602960248201527f4572726f723a2041646d696e20646f6573206e6f74206861766520656e6f7567604482015268682062616c616e636560b81b60648201526084016103b3565b600380546001908101918290556001600160a01b0383166000908152600660209081526040822080548085018255908352912001829055606490610728908590610dfe565b6107329190610e1d565b600082815260076020526040902081905561074e908490610c4f565b60008281526008602052604090819020829055600254600154915163b45ee9ef60e01b81526001600160a01b03928316600482015285831660248201526044810193909352169063b45ee9ef90606401600060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b5050600380546001600160a01b0386166000908152600560209081526040808320888452825280832093845542600185015560028085018b90556007835281842054958501959095556008909152902054600490910181905561083193509150610c62565b60008281526009602052604090208190556002546001600160a01b031663e3d670d76108656000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190610dcf565b1161092c5760405162461bcd60e51b815260206004820152602960248201527f4572726f723a204f776e657220646f6573206e6f74206861766520656e6f7567604482015268682062616c616e636560b81b60648201526084016103b3565b6000818152600960209081526040808320546001600160a01b038087168552600580855283862087875290945291909320909101919091556002541663b45ee9ef61097f6000546001600160a01b031690565b6001546000858152600960205260409081902054905160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156109e157600080fd5b505af11580156109f5573d6000803e3d6000fd5b505050600082815260096020526040902054610a239150633b9aca0090610a1d906001610dfe565b90610c62565b50600080546040516001600160a01b03909116913480156108fc02929091818181858888f19350505050158015610a5e573d6000803e3d6000fd5b506001600160a01b0380831660009081526005602090815260408083208584529091529020346006909101556001547f200e42c44f4b61e64b8298dd340205f3d4fd26f4018958219ac19fa737a4bc9391849116610ac46000546001600160a01b031690565b604080516001600160a01b039485168152928416602084015292168183015290519081900360600190a160008181526007602090815260408083205460088352818420546009845293829020548251888152938401919091529082019290925260608101919091523460808201527fd3826252b977104a2929fb0e0fea16abe1e1f9d413dbdd04568f52a0a681bf1c9060a00160405180910390a1505050565b6000546001600160a01b03163314610b8e5760405162461bcd60e51b81526004016103b390610d9a565b6001600160a01b038116610bf35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b3565b610bfc81610bff565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610c5b8284610e3f565b9392505050565b6000610c5b8284610e1d565b6001600160a01b0381168114610bfc57600080fd5b600080600060608486031215610c9857600080fd5b8335610ca381610c6e565b92506020840135610cb381610c6e565b929592945050506040919091013590565b600060208284031215610cd657600080fd5b8135610c5b81610c6e565b600060208284031215610cf357600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610d3257835183529284019291840191600101610d16565b50909695505050505050565b60008060408385031215610d5157600080fd5b8235610d5c81610c6e565b946020939093013593505050565b60008060408385031215610d7d57600080fd5b823591506020830135610d8f81610c6e565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610de157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610e1857610e18610de8565b500290565b600082610e3a57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610e5157610e51610de8565b50039056fea2646970667358221220ca28295e4ee1c7656896c46a09dfee419f06b5c7261cb7770fc68feebd64d37864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE8C DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8637856D GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAF0AFEC9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAF0AFEC9 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xD09BF0E4 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xEE238506 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8637856D EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x9134709E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xA77B2E37 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C1E816D GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x2C1E816D EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x3A84374B EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x5F4FD1F7 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x158EF93E EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x28F661E3 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x107 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x580 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP6 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15E JUMP JUMPDEST PUSH2 0x13C PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6A JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E48125B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH4 0xB45EE9EF PUSH2 0x44E PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x574 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x560 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x5B4 PUSH1 0x0 PUSH2 0xBFF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792041646D696E2063616E206D616B65207472616E73616374696F6E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3D670D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE3D670D7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x660 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST GT PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A2041646D696E20646F6573206E6F74206861766520656E6F7567 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x682062616C616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD DUP1 DUP6 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP3 SWAP1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x728 SWAP1 DUP6 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x732 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x74E SWAP1 DUP5 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SWAP2 MLOAD PUSH4 0xB45EE9EF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE DUP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE AND SWAP1 PUSH4 0xB45EE9EF SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP5 SSTORE TIMESTAMP PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD DUP12 SWAP1 SSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP6 DUP6 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH2 0x831 SWAP4 POP SWAP2 POP PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE3D670D7 PUSH2 0x865 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST GT PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A204F776E657220646F6573206E6F74206861766520656E6F7567 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x682062616C616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP8 DUP8 MSTORE SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD AND PUSH4 0xB45EE9EF PUSH2 0x97F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA23 SWAP2 POP PUSH4 0x3B9ACA00 SWAP1 PUSH2 0xA1D SWAP1 PUSH1 0x1 PUSH2 0xDFE JUMP JUMPDEST SWAP1 PUSH2 0xC62 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 CALLVALUE PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH1 0x1 SLOAD PUSH32 0x200E42C44F4B61E64B8298DD340205F3D4FD26F4018958219AC19FA737A4BC93 SWAP2 DUP5 SWAP2 AND PUSH2 0xAC4 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x8 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x9 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP9 DUP2 MSTORE SWAP4 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLVALUE PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0xD3826252B977104A2929FB0E0FEA16ABE1E1F9D413DBDD04568F52A0A681BF1C SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0xBFC DUP2 PUSH2 0xBFF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP3 DUP5 PUSH2 0xE3F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP3 DUP5 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xCA3 DUP2 PUSH2 0xC6E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xCB3 DUP2 PUSH2 0xC6E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC5B DUP2 PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD32 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD16 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD5C DUP2 PUSH2 0xC6E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xD8F DUP2 PUSH2 0xC6E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE18 JUMPI PUSH2 0xE18 PUSH2 0xDE8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE3A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE51 JUMPI PUSH2 0xE51 PUSH2 0xDE8 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x28 0x29 0x5E 0x4E 0xE1 0xC7 PUSH6 0x6896C46A09DF 0xEE COINBASE SWAP16 MOD 0xB5 0xC7 0x26 SHR 0xB7 PUSH24 0xFC68FEEBD64D37864736F6C634300080D00330000000000 ",
							"sourceMap": "28390:3652:0:-:0;;;;;;;;;;;;-1:-1:-1;18820:32:0;4375:10;18820:18;:32::i;:::-;28390:3652;;20248:191;20322:16;20341:6;;-1:-1:-1;;;;;20358:17:0;;;-1:-1:-1;;;;;;20358:17:0;;;;;;20391:40;;20341:6;;;;;;;20391:40;;20322:16;20391:40;20311:128;20248:191;:::o;28390:3652::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AdminAddress_1212": {
									"entryPoint": null,
									"id": 1212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Coin_1215": {
									"entryPoint": null,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_109": {
									"entryPoint": null,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_809": {
									"entryPoint": 3071,
									"id": 809,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@amountAfterBurning_1239": {
									"entryPoint": null,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burningAmount_1235": {
									"entryPoint": null,
									"id": 1235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyInfo_1226": {
									"entryPoint": null,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyToken_1594": {
									"entryPoint": 1462,
									"id": 1594,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_1114": {
									"entryPoint": 3170,
									"id": 1114,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getIdsOfUser_1369": {
									"entryPoint": 1300,
									"id": 1369,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_1336": {
									"entryPoint": 905,
									"id": 1336,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@initialized_1219": {
									"entryPoint": null,
									"id": 1219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerSurplusToAdmin_1243": {
									"entryPoint": null,
									"id": 1243,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_738": {
									"entryPoint": null,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_766": {
									"entryPoint": 1408,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAdminAddress_1348": {
									"entryPoint": 1224,
									"id": 1348,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1084": {
									"entryPoint": 3151,
									"id": 1084,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalInvesters_1356": {
									"entryPoint": null,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_789": {
									"entryPoint": 2916,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_Token_$895t_addresst_uint256": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 3434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Token_$895__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_984b08bfca7f9e2d67cc5a731b5813befd8d3b31da6c382bcc4828bf982266fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_Token": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8171:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "154:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "78:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "89:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "100:4:1",
														"type": ""
													}
												],
												"src": "14:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "258:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "322:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "331:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "324:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "324:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "324:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "281:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "292:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "307:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "312:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "303:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "303:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "316:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "299:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "299:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "288:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "288:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "278:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "278:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:50:1"
															},
															"nodeType": "YulIf",
															"src": "268:70:1"
														}
													]
												},
												"name": "validator_revert_contract_Token",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "247:5:1",
														"type": ""
													}
												],
												"src": "206:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "466:366:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "521:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "524:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "514:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "514:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "514:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "487:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "496:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "483:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "479:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:32:1"
															},
															"nodeType": "YulIf",
															"src": "476:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "537:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "550:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "550:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "541:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "614:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "582:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "582:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "629:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "639:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "629:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "653:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "696:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "657:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "741:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "709:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "709:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "709:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "758:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "768:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "784:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "811:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "822:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "794:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "794:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_Token_$895t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "416:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "427:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "439:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "455:6:1",
														"type": ""
													}
												],
												"src": "349:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "938:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "948:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "960:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "971:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "948:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "990:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1005:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1021:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1026:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1017:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1017:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1030:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1013:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1001:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "983:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "907:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "918:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "929:4:1",
														"type": ""
													}
												],
												"src": "837:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1115:184:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1161:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1173:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1163:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1163:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1163:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1136:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1145:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1157:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1128:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:32:1"
															},
															"nodeType": "YulIf",
															"src": "1125:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1186:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1199:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1190:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1263:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "1231:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1278:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1288:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1278:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1081:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1092:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1104:6:1",
														"type": ""
													}
												],
												"src": "1045:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1374:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1420:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1429:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1432:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1422:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1422:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1422:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1395:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1404:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1391:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1416:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1387:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1387:32:1"
															},
															"nodeType": "YulIf",
															"src": "1384:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1445:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1468:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1455:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1340:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1351:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1363:6:1",
														"type": ""
													}
												],
												"src": "1304:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1600:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1612:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1608:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1600:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1642:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1653:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1635:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1559:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1581:4:1",
														"type": ""
													}
												],
												"src": "1489:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1822:481:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1832:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1842:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1836:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1853:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1871:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1882:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1857:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1901:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1912:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1894:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1894:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1924:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1935:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1928:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1950:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1970:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1964:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1954:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1993:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2001:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1986:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2017:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2028:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2039:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2017:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2051:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2069:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2077:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2065:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2055:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2089:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2098:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2093:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2157:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2178:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "2189:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2183:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2183:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2171:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2210:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2221:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2226:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2217:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2217:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2210:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2242:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2256:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2264:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2252:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2252:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2119:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2116:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2130:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2132:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2141:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2144:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2137:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2137:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2132:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2112:3:1",
																"statements": []
															},
															"src": "2108:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2286:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2294:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2286:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1791:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1802:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1813:4:1",
														"type": ""
													}
												],
												"src": "1671:632:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2395:235:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2441:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2450:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2453:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2443:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2443:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2443:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2425:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2412:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:32:1"
															},
															"nodeType": "YulIf",
															"src": "2405:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2466:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2479:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2479:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2470:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2543:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "2511:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2511:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2558:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2568:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2582:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2620:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2353:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2364:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2376:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2384:6:1",
														"type": ""
													}
												],
												"src": "2308:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2904:338:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2914:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2914:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2957:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2968:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2950:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2950:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2995:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3006:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2984:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2984:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3038:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3049:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3034:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3054:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3027:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3081:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3092:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3077:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3077:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3097:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3070:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3070:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3070:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3135:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3120:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3141:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3113:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3168:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3179:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "3185:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3157:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3157:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3157:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3223:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3208:19:1"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "3229:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3201:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2825:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2836:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2844:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2852:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2860:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2868:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2876:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2884:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2895:4:1",
														"type": ""
													}
												],
												"src": "2635:607:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3334:235:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3380:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3389:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3392:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3382:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3382:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3382:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3355:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3364:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3376:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3347:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:32:1"
															},
															"nodeType": "YulIf",
															"src": "3344:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3405:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3428:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3415:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3415:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3405:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3447:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3477:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3488:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3460:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3460:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3451:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3533:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "3501:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3548:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3558:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3548:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3292:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3303:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3315:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3323:6:1",
														"type": ""
													}
												],
												"src": "3247:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3688:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3698:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3710:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3721:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3698:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3740:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3755:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3771:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3776:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3767:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3767:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3780:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3763:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3763:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3751:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3733:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Token_$895__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3657:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3668:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3679:4:1",
														"type": ""
													}
												],
												"src": "3574:216:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3969:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3979:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4020:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4031:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4016:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4016:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4009:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4070:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4055:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4075:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4048:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4048:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4142:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4119:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3946:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3960:4:1",
														"type": ""
													}
												],
												"src": "3795:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4330:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4347:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4358:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4340:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4340:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4340:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4397:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4370:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4431:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4416:18:1"
																	},
																	{
																		"hexValue": "416c726561647920496e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4436:21:1",
																		"type": "",
																		"value": "Already Initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4409:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4409:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4467:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4475:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4475:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4467:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4307:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4321:4:1",
														"type": ""
													}
												],
												"src": "4156:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4661:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4671:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4683:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4679:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4671:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4706:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4724:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4729:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4720:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4720:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4733:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4716:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4710:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4766:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4774:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4762:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4744:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4818:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4826:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4850:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4861:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4846:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4846:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4866:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4839:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4839:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4625:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4633:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4641:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4652:4:1",
														"type": ""
													}
												],
												"src": "4504:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5058:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5075:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5086:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5068:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5109:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5120:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5105:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5105:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5125:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5098:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5098:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5148:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5159:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:18:1"
																	},
																	{
																		"hexValue": "4f6e6c792041646d696e2063616e206d616b65207472616e73616374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5164:33:1",
																		"type": "",
																		"value": "Only Admin can make transaction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5137:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5137:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5207:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5219:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5207:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_984b08bfca7f9e2d67cc5a731b5813befd8d3b31da6c382bcc4828bf982266fd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5035:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5049:4:1",
														"type": ""
													}
												],
												"src": "4884:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5325:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5371:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5380:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5383:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5373:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5373:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5373:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5346:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5355:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5342:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5338:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5338:32:1"
															},
															"nodeType": "YulIf",
															"src": "5335:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5396:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5412:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5406:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5396:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5291:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5302:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5314:6:1",
														"type": ""
													}
												],
												"src": "5244:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5607:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5624:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5635:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5617:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5617:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5654:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5674:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5647:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5647:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5697:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5708:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5693:18:1"
																	},
																	{
																		"hexValue": "4572726f723a2041646d696e20646f6573206e6f74206861766520656e6f7567",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5713:34:1",
																		"type": "",
																		"value": "Error: Admin does not have enoug"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5686:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5768:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5779:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5764:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5764:18:1"
																	},
																	{
																		"hexValue": "682062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5784:11:1",
																		"type": "",
																		"value": "h balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5757:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5757:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5805:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5817:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5828:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5813:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5813:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5805:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5584:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5598:4:1",
														"type": ""
													}
												],
												"src": "5433:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5875:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5892:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5899:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5904:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5895:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5885:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5932:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5956:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5959:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5949:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5949:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5843:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6027:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6086:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6088:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6088:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6088:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6058:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6051:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6044:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6044:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6066:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6077:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6073:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6073:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6081:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6069:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6069:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6063:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6063:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6040:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6040:45:1"
															},
															"nodeType": "YulIf",
															"src": "6037:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6117:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6132:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6135:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6128:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6117:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6006:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6009:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6015:7:1",
														"type": ""
													}
												],
												"src": "5975:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6194:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6225:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6253:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6258:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6249:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6239:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6239:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6239:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6290:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6293:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6283:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6283:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6283:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6318:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6321:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6311:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6311:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6311:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6214:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:9:1"
															},
															"nodeType": "YulIf",
															"src": "6204:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6345:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6354:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6357:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6350:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6345:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6179:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6182:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6188:1:1",
														"type": ""
													}
												],
												"src": "6148:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6544:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6561:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6572:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6554:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6554:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6595:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6606:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6591:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6611:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6584:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6584:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6645:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6630:18:1"
																	},
																	{
																		"hexValue": "4572726f723a204f776e657220646f6573206e6f74206861766520656e6f7567",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6650:34:1",
																		"type": "",
																		"value": "Error: Owner does not have enoug"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6623:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6623:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6623:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6705:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6716:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6701:18:1"
																	},
																	{
																		"hexValue": "682062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6721:11:1",
																		"type": "",
																		"value": "h balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6694:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6694:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6742:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6754:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6765:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6750:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6742:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6521:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6535:4:1",
														"type": ""
													}
												],
												"src": "6370:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6937:227:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6947:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6959:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6970:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6955:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6955:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6947:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6982:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7000:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7005:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6996:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6996:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7009:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6992:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6992:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6986:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7027:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7042:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7050:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7038:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7038:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7020:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7074:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7085:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7070:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7070:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7094:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7102:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7063:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7063:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7126:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7137:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7122:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "7146:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7154:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7142:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7115:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6890:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6901:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6909:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6917:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6928:4:1",
														"type": ""
													}
												],
												"src": "6780:384:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7382:250:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7392:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7404:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7415:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7400:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7392:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7435:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7428:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7428:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7473:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7484:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7469:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7489:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7462:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7527:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7570:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7555:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7575:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7548:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7602:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7613:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7598:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7619:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7591:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7319:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7330:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7338:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7346:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7354:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7362:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7373:4:1",
														"type": ""
													}
												],
												"src": "7169:463:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7811:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7828:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7839:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7821:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7821:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7862:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7873:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7858:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7858:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7878:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7851:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7851:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7851:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7901:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7912:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7897:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7917:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7890:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7972:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7983:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7968:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7968:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7988:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7961:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7961:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7961:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8006:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8018:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8029:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8014:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8014:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8006:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7788:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7802:4:1",
														"type": ""
													}
												],
												"src": "7637:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8093:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8115:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8117:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8117:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8117:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8109:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8112:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8106:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8106:8:1"
															},
															"nodeType": "YulIf",
															"src": "8103:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8146:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8158:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8161:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8154:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8146:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8075:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8078:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8084:4:1",
														"type": ""
													}
												],
												"src": "8044:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_contract_Token(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_Token_$895t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Token(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_Token(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Token(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Token(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_Token(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_contract$_Token_$895__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already Initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_984b08bfca7f9e2d67cc5a731b5813befd8d3b31da6c382bcc4828bf982266fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Only Admin can make transaction\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Error: Admin does not have enoug\")\n        mstore(add(headStart, 96), \"h balance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Error: Owner does not have enoug\")\n        mstore(add(headStart, 96), \"h balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80638637856d1161008a578063af0afec911610059578063af0afec9146102fa578063d09bf0e41461030f578063ee2385061461033c578063f2fde38b1461036957600080fd5b80638637856d146102135780638da5cb5b146102a95780639134709e146102c7578063a77b2e37146102da57600080fd5b80632c1e816d116100c65780632c1e816d146101765780633a84374b146101965780635f4fd1f7146101d1578063715018a6146101fe57600080fd5b8063158ef93e146100ed5780631794bb3c1461011c57806328f661e31461013e575b600080fd5b3480156100f957600080fd5b506004546101079060ff1681565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b5061013c610137366004610c83565b610389565b005b34801561014a57600080fd5b5060015461015e906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b34801561018257600080fd5b5061013c610191366004610cc4565b6104c8565b3480156101a257600080fd5b506101c36101b1366004610ce1565b60086020526000908152604090205481565b604051908152602001610113565b3480156101dd57600080fd5b506101f16101ec366004610cc4565b610514565b6040516101139190610cfa565b34801561020a57600080fd5b5061013c610580565b34801561021f57600080fd5b5061027461022e366004610d3e565b6005602081815260009384526040808520909152918352912080546001820154600283015460038401546004850154958501546006909501549395929491939092919087565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610113565b3480156102b557600080fd5b506000546001600160a01b031661015e565b61013c6102d5366004610d6a565b6105b6565b3480156102e657600080fd5b5060025461015e906001600160a01b031681565b34801561030657600080fd5b506003546101c3565b34801561031b57600080fd5b506101c361032a366004610ce1565b60096020526000908152604090205481565b34801561034857600080fd5b506101c3610357366004610ce1565b60076020526000908152604090205481565b34801561037557600080fd5b5061013c610384366004610cc4565b610b64565b6000546001600160a01b031633146103bc5760405162461bcd60e51b81526004016103b390610d9a565b60405180910390fd5b60045460ff1615156001036104095760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e48125b9a5d1a585b1a5e9959606a1b60448201526064016103b3565b600280546001600160a01b038086166001600160a01b03199283168117909355600180549186169190921617905563b45ee9ef61044e6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908516602482015260448101849052606401600060405180830381600087803b15801561049e57600080fd5b505af11580156104b2573d6000803e3d6000fd5b50506004805460ff191660011790555050505050565b6000546001600160a01b031633146104f25760405162461bcd60e51b81526004016103b390610d9a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526006602090815260409182902080548351818402810184019094528084526060939283018282801561057457602002820191906000526020600020905b815481526020019060010190808311610560575b50505050509050919050565b6000546001600160a01b031633146105aa5760405162461bcd60e51b81526004016103b390610d9a565b6105b46000610bff565b565b6001546001600160a01b031633146106105760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792041646d696e2063616e206d616b65207472616e73616374696f6e0060448201526064016103b3565b60025460015460405163e3d670d760e01b81526001600160a01b0391821660048201528492919091169063e3d670d790602401602060405180830381865afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610dcf565b116106e35760405162461bcd60e51b815260206004820152602960248201527f4572726f723a2041646d696e20646f6573206e6f74206861766520656e6f7567604482015268682062616c616e636560b81b60648201526084016103b3565b600380546001908101918290556001600160a01b0383166000908152600660209081526040822080548085018255908352912001829055606490610728908590610dfe565b6107329190610e1d565b600082815260076020526040902081905561074e908490610c4f565b60008281526008602052604090819020829055600254600154915163b45ee9ef60e01b81526001600160a01b03928316600482015285831660248201526044810193909352169063b45ee9ef90606401600060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b5050600380546001600160a01b0386166000908152600560209081526040808320888452825280832093845542600185015560028085018b90556007835281842054958501959095556008909152902054600490910181905561083193509150610c62565b60008281526009602052604090208190556002546001600160a01b031663e3d670d76108656000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190610dcf565b1161092c5760405162461bcd60e51b815260206004820152602960248201527f4572726f723a204f776e657220646f6573206e6f74206861766520656e6f7567604482015268682062616c616e636560b81b60648201526084016103b3565b6000818152600960209081526040808320546001600160a01b038087168552600580855283862087875290945291909320909101919091556002541663b45ee9ef61097f6000546001600160a01b031690565b6001546000858152600960205260409081902054905160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156109e157600080fd5b505af11580156109f5573d6000803e3d6000fd5b505050600082815260096020526040902054610a239150633b9aca0090610a1d906001610dfe565b90610c62565b50600080546040516001600160a01b03909116913480156108fc02929091818181858888f19350505050158015610a5e573d6000803e3d6000fd5b506001600160a01b0380831660009081526005602090815260408083208584529091529020346006909101556001547f200e42c44f4b61e64b8298dd340205f3d4fd26f4018958219ac19fa737a4bc9391849116610ac46000546001600160a01b031690565b604080516001600160a01b039485168152928416602084015292168183015290519081900360600190a160008181526007602090815260408083205460088352818420546009845293829020548251888152938401919091529082019290925260608101919091523460808201527fd3826252b977104a2929fb0e0fea16abe1e1f9d413dbdd04568f52a0a681bf1c9060a00160405180910390a1505050565b6000546001600160a01b03163314610b8e5760405162461bcd60e51b81526004016103b390610d9a565b6001600160a01b038116610bf35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b3565b610bfc81610bff565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610c5b8284610e3f565b9392505050565b6000610c5b8284610e1d565b6001600160a01b0381168114610bfc57600080fd5b600080600060608486031215610c9857600080fd5b8335610ca381610c6e565b92506020840135610cb381610c6e565b929592945050506040919091013590565b600060208284031215610cd657600080fd5b8135610c5b81610c6e565b600060208284031215610cf357600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610d3257835183529284019291840191600101610d16565b50909695505050505050565b60008060408385031215610d5157600080fd5b8235610d5c81610c6e565b946020939093013593505050565b60008060408385031215610d7d57600080fd5b823591506020830135610d8f81610c6e565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610de157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610e1857610e18610de8565b500290565b600082610e3a57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610e5157610e51610de8565b50039056fea2646970667358221220ca28295e4ee1c7656896c46a09dfee419f06b5c7261cb7770fc68feebd64d37864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8637856D GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAF0AFEC9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAF0AFEC9 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xD09BF0E4 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xEE238506 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8637856D EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x9134709E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xA77B2E37 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C1E816D GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x2C1E816D EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x3A84374B EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x5F4FD1F7 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x158EF93E EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x28F661E3 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x107 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x580 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP6 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15E JUMP JUMPDEST PUSH2 0x13C PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6A JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E48125B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH4 0xB45EE9EF PUSH2 0x44E PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x574 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x560 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x5B4 PUSH1 0x0 PUSH2 0xBFF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792041646D696E2063616E206D616B65207472616E73616374696F6E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3D670D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE3D670D7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x660 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST GT PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A2041646D696E20646F6573206E6F74206861766520656E6F7567 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x682062616C616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD DUP1 DUP6 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP3 SWAP1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x728 SWAP1 DUP6 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x732 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x74E SWAP1 DUP5 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SWAP2 MLOAD PUSH4 0xB45EE9EF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE DUP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE AND SWAP1 PUSH4 0xB45EE9EF SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP5 SSTORE TIMESTAMP PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD DUP12 SWAP1 SSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP6 DUP6 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH2 0x831 SWAP4 POP SWAP2 POP PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE3D670D7 PUSH2 0x865 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST GT PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A204F776E657220646F6573206E6F74206861766520656E6F7567 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x682062616C616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP8 DUP8 MSTORE SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD AND PUSH4 0xB45EE9EF PUSH2 0x97F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA23 SWAP2 POP PUSH4 0x3B9ACA00 SWAP1 PUSH2 0xA1D SWAP1 PUSH1 0x1 PUSH2 0xDFE JUMP JUMPDEST SWAP1 PUSH2 0xC62 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 CALLVALUE PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH1 0x1 SLOAD PUSH32 0x200E42C44F4B61E64B8298DD340205F3D4FD26F4018958219AC19FA737A4BC93 SWAP2 DUP5 SWAP2 AND PUSH2 0xAC4 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x8 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x9 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP9 DUP2 MSTORE SWAP4 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLVALUE PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0xD3826252B977104A2929FB0E0FEA16ABE1E1F9D413DBDD04568F52A0A681BF1C SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0xBFC DUP2 PUSH2 0xBFF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP3 DUP5 PUSH2 0xE3F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP3 DUP5 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xCA3 DUP2 PUSH2 0xC6E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xCB3 DUP2 PUSH2 0xC6E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC5B DUP2 PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD32 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD16 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD5C DUP2 PUSH2 0xC6E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xD8F DUP2 PUSH2 0xC6E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE18 JUMPI PUSH2 0xE18 PUSH2 0xDE8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE3A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE51 JUMPI PUSH2 0xE51 PUSH2 0xDE8 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x28 0x29 0x5E 0x4E 0xE1 0xC7 PUSH6 0x6896C46A09DF 0xEE COINBASE SWAP16 MOD 0xB5 0xC7 0x26 SHR 0xB7 PUSH24 0xFC68FEEBD64D37864736F6C634300080D00330000000000 ",
							"sourceMap": "28390:3652:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28547:23;;;;;;;;;;-1:-1:-1;28547:23:0;;;;;;;;;;;179:14:1;;172:22;154:41;;142:2;127:18;28547:23:0;;;;;;;;29572:361;;;;;;;;;;-1:-1:-1;29572:361:0;;;;;:::i;:::-;;:::i;:::-;;28464:27;;;;;;;;;;-1:-1:-1;28464:27:0;;;;-1:-1:-1;;;;;28464:27:0;;;;;;-1:-1:-1;;;;;1001:32:1;;;983:51;;971:2;956:18;28464:27:0;837:203:1;29941:98:0;;;;;;;;;;-1:-1:-1;29941:98:0;;;;;:::i;:::-;;:::i;28759:53::-;;;;;;;;;;-1:-1:-1;28759:53:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1635:25:1;;;1623:2;1608:18;28759:53:0;1489:177:1;30147:121:0;;;;;;;;;;-1:-1:-1;30147:121:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;19592:103::-;;;;;;;;;;;;;:::i;28579:67::-;;;;;;;;;;-1:-1:-1;28579:67:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:25:1;;;3006:2;2991:18;;2984:34;;;;3034:18;;;3027:34;;;;3092:2;3077:18;;3070:34;;;;3135:3;3120:19;;3113:35;3179:3;3164:19;;3157:35;3223:3;3208:19;;3201:35;2937:3;2922:19;28579:67:0;2635:607:1;18941:87:0;;;;;;;;;;-1:-1:-1;18987:7:0;19014:6;-1:-1:-1;;;;;19014:6:0;18941:87;;30276:1684;;;;;;:::i;:::-;;:::i;28498:17::-;;;;;;;;;;-1:-1:-1;28498:17:0;;;;-1:-1:-1;;;;;28498:17:0;;;30047:92;;;;;;;;;;-1:-1:-1;30121:10:0;;30047:92;;28819:54;;;;;;;;;;-1:-1:-1;28819:54:0;;;;;:::i;:::-;;;;;;;;;;;;;;28704:48;;;;;;;;;;-1:-1:-1;28704:48:0;;;;;:::i;:::-;;;;;;;;;;;;;;19850:238;;;;;;;;;;-1:-1:-1;19850:238:0;;;;;:::i;:::-;;:::i;29572:361::-;18987:7;19014:6;-1:-1:-1;;;;;19014:6:0;4375:10;19161:23;19153:68;;;;-1:-1:-1;;;19153:68:0;;;;;;;:::i;:::-;;;;;;;;;29714:11:::1;::::0;::::1;;:19;;:11:::0;:19;29706:51:::1;;;::::0;-1:-1:-1;;;29706:51:0;;4358:2:1;29706:51:0::1;::::0;::::1;4340:21:1::0;4397:2;4377:18;;;4370:30;-1:-1:-1;;;4416:18:1;;;4409:49;4475:18;;29706:51:0::1;4156:343:1::0;29706:51:0::1;29768:4;:19:::0;;-1:-1:-1;;;;;29768:19:0;;::::1;-1:-1:-1::0;;;;;;29768:19:0;;::::1;::::0;::::1;::::0;;;;29798:37;;;;::::1;::::0;;;::::1;;::::0;;29846:18:::1;29865:7;18987::::0;19014:6;-1:-1:-1;;;;;19014:6:0;;18941:87;29865:7:::1;29846:50;::::0;-1:-1:-1;;;;;;29846:50:0::1;::::0;;;;;;-1:-1:-1;;;;;4762:15:1;;;29846:50:0::1;::::0;::::1;4744:34:1::0;4814:15;;;4794:18;;;4787:43;4846:18;;;4839:34;;;4679:18;;29846:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;29907:11:0::1;:18:::0;;-1:-1:-1;;29907:18:0::1;29921:4;29907:18;::::0;;-1:-1:-1;;;;;29572:361:0:o;29941:98::-;18987:7;19014:6;-1:-1:-1;;;;;19014:6:0;4375:10;19161:23;19153:68;;;;-1:-1:-1;;;19153:68:0;;;;;;;:::i;:::-;30010:12:::1;:21:::0;;-1:-1:-1;;;;;;30010:21:0::1;-1:-1:-1::0;;;;;30010:21:0;;;::::1;::::0;;;::::1;::::0;;29941:98::o;30147:121::-;-1:-1:-1;;;;;30240:20:0;;;;;;:14;:20;;;;;;;;;30233:27;;;;;;;;;;;;;;;;;30204:16;;30233:27;;;30240:20;30233:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30147:121;;;:::o;19592:103::-;18987:7;19014:6;-1:-1:-1;;;;;19014:6:0;4375:10;19161:23;19153:68;;;;-1:-1:-1;;;19153:68:0;;;;;;;:::i;:::-;19657:30:::1;19684:1;19657:18;:30::i;:::-;19592:103::o:0;30276:1684::-;30372:12;;-1:-1:-1;;;;;30372:12:0;30358:10;:26;30350:70;;;;-1:-1:-1;;;30350:70:0;;5086:2:1;30350:70:0;;;5068:21:1;5125:2;5105:18;;;5098:30;5164:33;5144:18;;;5137:61;5215:18;;30350:70:0;4884:355:1;30350:70:0;30453:4;;;30466:12;30453:26;;-1:-1:-1;;;30453:26:0;;-1:-1:-1;;;;;30466:12:0;;;30453:26;;;983:51:1;30482:6:0;;30453:4;;;;;:12;;956:18:1;;30453:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;30431:126;;;;-1:-1:-1;;;30431:126:0;;5635:2:1;30431:126:0;;;5617:21:1;5674:2;5654:18;;;5647:30;5713:34;5693:18;;;5686:62;-1:-1:-1;;;5764:18:1;;;5757:39;5813:19;;30431:126:0;5433:405:1;30431:126:0;30593:10;:12;;;;;;;;;;-1:-1:-1;;;;;30669:20:0;;30593:10;30669:20;;;:14;:20;;;;;;;:29;;;;;;;;;;;;;;;;30744:3;;30730:10;;30734:6;;30730:10;:::i;:::-;30729:18;;;;:::i;:::-;30709:17;;;;:13;:17;;;;;:38;;;30783:29;;:6;;:10;:29::i;:::-;30758:22;;;;:18;:22;;;;;;;:54;;;30823:4;;;30842:12;30823:62;;-1:-1:-1;;;30823:62:0;;-1:-1:-1;;;;;30842:12:0;;;30823:62;;;4744:34:1;4814:15;;;4794:18;;;4787:43;4846:18;;;4839:34;;;;30823:4:0;;:18;;4679::1;;30823:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;30921:10:0;;;-1:-1:-1;;;;;30898:13:0;;;;;;:7;:13;;;;;;;;:17;;;;;;;;:33;;;30970:15;30942:25;;;:43;30996:31;;;;:40;;;31077:13;:17;;;;;;31047:27;;;:47;;;;31134:18;:22;;;;;;31105:26;;;;:51;;;31193:29;;-1:-1:-1;31134:22:0;-1:-1:-1;31193:26:0;:29::i;:::-;31167:23;;;;:19;:23;;;;;:55;;;31255:4;;-1:-1:-1;;;;;31255:4:0;:12;31268:7;18987;19014:6;-1:-1:-1;;;;;19014:6:0;;18941:87;31268:7;31255:21;;-1:-1:-1;;;;;;31255:21:0;;;;;;;-1:-1:-1;;;;;1001:32:1;;;31255:21:0;;;983:51:1;956:18;;31255:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;31233:138;;;;-1:-1:-1;;;31233:138:0;;6572:2:1;31233:138:0;;;6554:21:1;6611:2;6591:18;;;6584:30;6650:34;6630:18;;;6623:62;-1:-1:-1;;;6701:18:1;;;6694:39;6750:19;;31233:138:0;6370:405:1;31233:138:0;31415:23;;;;:19;:23;;;;;;;;;-1:-1:-1;;;;;31382:13:0;;;;;:7;:13;;;;;;:17;;;;;;;;;;:30;;;:56;;;;31449:4;;;:18;31468:7;18987;19014:6;-1:-1:-1;;;;;19014:6:0;;18941:87;31468:7;31477:12;;;31491:23;;;:19;:23;;;;;;;;31449:66;;;;;;-1:-1:-1;;;;;;31449:66:0;;;-1:-1:-1;;;;;4762:15:1;;;31449:66:0;;;4744:34:1;31477:12:0;;;;4794:18:1;;;4787:43;4846:18;;;4839:34;4679:18;;31449:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;31544:23:0;;;;:19;:23;;;;;;31539:45;;-1:-1:-1;31573:10:0;;31540:27;;:1;:27;:::i;:::-;31539:33;;:45::i;:::-;-1:-1:-1;18987:7:0;19014:6;;31595:36;;-1:-1:-1;;;;;19014:6:0;;;;31621:9;31595:36;;;;;31621:9;;31595:36;18987:7;31595:36;31621:9;19014:6;31595:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;31642:13:0;;;;;;;:7;:13;;;;;;;;:17;;;;;;;;31680:9;31642:35;;;;:47;31736:12;;31705:53;;31650:4;;31736:12;31750:7;18987;19014:6;-1:-1:-1;;;;;19014:6:0;;18941:87;31750:7;31705:53;;;-1:-1:-1;;;;;7038:15:1;;;7020:34;;7090:15;;;7085:2;7070:18;;7063:43;7142:15;;7122:18;;;7115:43;31705:53:0;;;;;;6970:2:1;31705:53:0;;;31825:17;;;;:13;:17;;;;;;;;;31857:18;:22;;;;;;31894:19;:23;;;;;;;31774:178;;7428:25:1;;;7469:18;;;7462:34;;;;7512:18;;;7505:34;;;;7570:2;7555:18;;7548:34;;;;31932:9:0;7613:3:1;7598:19;;7591:35;31774:178:0;;7415:3:1;7400:19;31774:178:0;;;;;;;30339:1621;30276:1684;;:::o;19850:238::-;18987:7;19014:6;-1:-1:-1;;;;;19014:6:0;4375:10;19161:23;19153:68;;;;-1:-1:-1;;;19153:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;19953:22:0;::::1;19931:110;;;::::0;-1:-1:-1;;;19931:110:0;;7839:2:1;19931:110:0::1;::::0;::::1;7821:21:1::0;7878:2;7858:18;;;7851:30;7917:34;7897:18;;;7890:62;-1:-1:-1;;;7968:18:1;;;7961:36;8014:19;;19931:110:0::1;7637:402:1::0;19931:110:0::1;20052:28;20071:8;20052:18;:28::i;:::-;19850:238:::0;:::o;20248:191::-;20322:16;20341:6;;-1:-1:-1;;;;;20358:17:0;;;-1:-1:-1;;;;;;20358:17:0;;;;;;20391:40;;20341:6;;;;;;;20391:40;;20322:16;20391:40;20311:128;20248:191;:::o;24554:98::-;24612:7;24639:5;24643:1;24639;:5;:::i;:::-;24632:12;24554:98;-1:-1:-1;;;24554:98:0:o;25310:::-;25368:7;25395:5;25399:1;25395;:5;:::i;206:138:1:-;-1:-1:-1;;;;;288:31:1;;278:42;;268:70;;334:1;331;324:12;349:483;439:6;447;455;508:2;496:9;487:7;483:23;479:32;476:52;;;524:1;521;514:12;476:52;563:9;550:23;582:38;614:5;582:38;:::i;:::-;639:5;-1:-1:-1;696:2:1;681:18;;668:32;709:40;668:32;709:40;:::i;:::-;349:483;;768:7;;-1:-1:-1;;;822:2:1;807:18;;;;794:32;;349:483::o;1045:254::-;1104:6;1157:2;1145:9;1136:7;1132:23;1128:32;1125:52;;;1173:1;1170;1163:12;1125:52;1212:9;1199:23;1231:38;1263:5;1231:38;:::i;1304:180::-;1363:6;1416:2;1404:9;1395:7;1391:23;1387:32;1384:52;;;1432:1;1429;1422:12;1384:52;-1:-1:-1;1455:23:1;;1304:180;-1:-1:-1;1304:180:1:o;1671:632::-;1842:2;1894:21;;;1964:13;;1867:18;;;1986:22;;;1813:4;;1842:2;2065:15;;;;2039:2;2024:18;;;1813:4;2108:169;2122:6;2119:1;2116:13;2108:169;;;2183:13;;2171:26;;2252:15;;;;2217:12;;;;2144:1;2137:9;2108:169;;;-1:-1:-1;2294:3:1;;1671:632;-1:-1:-1;;;;;;1671:632:1:o;2308:322::-;2376:6;2384;2437:2;2425:9;2416:7;2412:23;2408:32;2405:52;;;2453:1;2450;2443:12;2405:52;2492:9;2479:23;2511:38;2543:5;2511:38;:::i;:::-;2568:5;2620:2;2605:18;;;;2592:32;;-1:-1:-1;;;2308:322:1:o;3247:::-;3315:6;3323;3376:2;3364:9;3355:7;3351:23;3347:32;3344:52;;;3392:1;3389;3382:12;3344:52;3428:9;3415:23;3405:33;;3488:2;3477:9;3473:18;3460:32;3501:38;3533:5;3501:38;:::i;:::-;3558:5;3548:15;;;3247:322;;;;;:::o;3795:356::-;3997:2;3979:21;;;4016:18;;;4009:30;4075:34;4070:2;4055:18;;4048:62;4142:2;4127:18;;3795:356::o;5244:184::-;5314:6;5367:2;5355:9;5346:7;5342:23;5338:32;5335:52;;;5383:1;5380;5373:12;5335:52;-1:-1:-1;5406:16:1;;5244:184;-1:-1:-1;5244:184:1:o;5843:127::-;5904:10;5899:3;5895:20;5892:1;5885:31;5935:4;5932:1;5925:15;5959:4;5956:1;5949:15;5975:168;6015:7;6081:1;6077;6073:6;6069:14;6066:1;6063:21;6058:1;6051:9;6044:17;6040:45;6037:71;;;6088:18;;:::i;:::-;-1:-1:-1;6128:9:1;;5975:168::o;6148:217::-;6188:1;6214;6204:132;;6258:10;6253:3;6249:20;6246:1;6239:31;6293:4;6290:1;6283:15;6321:4;6318:1;6311:15;6204:132;-1:-1:-1;6350:9:1;;6148:217::o;8044:125::-;8084:4;8112:1;8109;8106:8;8103:34;;;8117:18;;:::i;:::-;-1:-1:-1;8154:9:1;;8044:125::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "744800",
								"executionCost": "26620",
								"totalCost": "771420"
							},
							"external": {
								"AdminAddress()": "2405",
								"Coin()": "2426",
								"amountAfterBurning(uint256)": "2483",
								"burningAmount(uint256)": "2504",
								"buyInfo(address,uint256)": "15439",
								"buyToken(uint256,address)": "infinite",
								"getIdsOfUser(address)": "infinite",
								"initialize(address,address,uint256)": "infinite",
								"initialized()": "2323",
								"owner()": "2376",
								"ownerSurplusToAdmin(uint256)": "2482",
								"renounceOwnership()": "28203",
								"setAdminAddress(address)": "26728",
								"totalInvesters()": "2314",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28390,
									"end": 32042,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18820,
									"end": 18852,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4375,
									"end": 4385,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 18820,
									"end": 18838,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 18820,
									"end": 18852,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18820,
									"end": 18852,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18820,
									"end": 18852,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20248,
									"end": 20439,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20248,
									"end": 20439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20322,
									"end": 20338,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20358,
									"end": 20375,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20341,
									"end": 20347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20322,
									"end": 20338,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20391,
									"end": 20431,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 20311,
									"end": 20439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20248,
									"end": 20439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20248,
									"end": 20439,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28390,
									"end": 32042,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca28295e4ee1c7656896c46a09dfee419f06b5c7261cb7770fc68feebd64d37864736f6c634300080d0033",
									".code": [
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "8637856D"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "AF0AFEC9"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "AF0AFEC9"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "D09BF0E4"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "EE238506"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "8637856D"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "9134709E"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "A77B2E37"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "2C1E816D"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "2C1E816D"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "3A84374B"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "5F4FD1F7"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "158EF93E"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "1794BB3C"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "28F661E3"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28390,
											"end": 32042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28547,
											"end": 28570,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28464,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 837,
											"end": 1040,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28759,
											"end": 28812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1489,
											"end": 1666,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 2975,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2975,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3009,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3018,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3018,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3061,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3061,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3077,
											"end": 3095,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3138,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3164,
											"end": 3183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3208,
											"end": 3227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2940,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2922,
											"end": 2941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28579,
											"end": 28646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2635,
											"end": 3242,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28515,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30121,
											"end": 30131,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30121,
											"end": 30131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30047,
											"end": 30139,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28752,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29714,
											"end": 29725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29714,
											"end": 29725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29714,
											"end": 29725,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29714,
											"end": 29725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29714,
											"end": 29733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29714,
											"end": 29733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29714,
											"end": 29725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29714,
											"end": 29733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4358,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4340,
											"end": 4361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E48125B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4156,
											"end": 4499,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29706,
											"end": 29757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29772,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29835,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29864,
											"name": "PUSH",
											"source": 0,
											"value": "B45EE9EF"
										},
										{
											"begin": 29865,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29872,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29865,
											"end": 29872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29846,
											"end": 29896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29907,
											"end": 29918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29907,
											"end": 29925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29907,
											"end": 29925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29907,
											"end": 29925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29925,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29907,
											"end": 29925,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29907,
											"end": 29925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29907,
											"end": 29925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29572,
											"end": 29933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30031,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29941,
											"end": 30039,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30254,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30204,
											"end": 30220,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30204,
											"end": 30220,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30147,
											"end": 30268,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19657,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 19684,
											"end": 19685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19657,
											"end": 19675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 19657,
											"end": 19687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19657,
											"end": 19687,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 19657,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19695,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30372,
											"end": 30384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30372,
											"end": 30384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30372,
											"end": 30384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30368,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5197,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792041646D696E2063616E206D616B65207472616E73616374696F6E00"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4884,
											"end": 5239,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 30350,
											"end": 30420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30457,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30453,
											"end": 30457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30457,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30466,
											"end": 30478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3D670D7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30466,
											"end": 30478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30466,
											"end": 30478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30466,
											"end": 30478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30482,
											"end": 30488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30482,
											"end": 30488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30465,
											"name": "PUSH",
											"source": 0,
											"value": "E3D670D7"
										},
										{
											"begin": 30453,
											"end": 30465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 956,
											"end": 974,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30453,
											"end": 30479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30488,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5635,
											"end": 5637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5654,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5654,
											"end": 5672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 5672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5747,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F723A2041646D696E20646F6573206E6F74206861766520656E6F7567"
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "682062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5764,
											"end": 5782,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5764,
											"end": 5782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5757,
											"end": 5796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5832,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5813,
											"end": 5832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5433,
											"end": 5838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 30431,
											"end": 30557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30603,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30593,
											"end": 30603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30683,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30747,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30744,
											"end": 30747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 30730,
											"end": 30740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 30740,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 30740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 30730,
											"end": 30740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30730,
											"end": 30740,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 30730,
											"end": 30740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 30729,
											"end": 30747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 30729,
											"end": 30747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30729,
											"end": 30747,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 30729,
											"end": 30747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30709,
											"end": 30726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30722,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30709,
											"end": 30726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30709,
											"end": 30726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30709,
											"end": 30726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30747,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 30783,
											"end": 30812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 30783,
											"end": 30812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30783,
											"end": 30812,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 30783,
											"end": 30812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30776,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30780,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 30812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30827,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30823,
											"end": 30827,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30827,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30842,
											"end": 30854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B45EE9EF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30842,
											"end": 30854,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30842,
											"end": 30854,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30842,
											"end": 30854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30823,
											"end": 30827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30841,
											"name": "PUSH",
											"source": 0,
											"value": "B45EE9EF"
										},
										{
											"begin": 30823,
											"end": 30841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 30823,
											"end": 30885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30921,
											"end": 30931,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30921,
											"end": 30931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30921,
											"end": 30931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30905,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30911,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30915,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30931,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30931,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30931,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30970,
											"end": 30985,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30942,
											"end": 30967,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30942,
											"end": 30967,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30942,
											"end": 30967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30942,
											"end": 30985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31027,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30996,
											"end": 31027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31027,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31036,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31036,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31090,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31077,
											"end": 31094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31094,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31047,
											"end": 31074,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31047,
											"end": 31074,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31047,
											"end": 31074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31047,
											"end": 31094,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31047,
											"end": 31094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31047,
											"end": 31094,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31047,
											"end": 31094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31152,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31134,
											"end": 31156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31156,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31105,
											"end": 31131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31156,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31193,
											"end": 31222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 31193,
											"end": 31222,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31134,
											"end": 31156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31193,
											"end": 31219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 31193,
											"end": 31222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31193,
											"end": 31222,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 31193,
											"end": 31222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31167,
											"end": 31190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31186,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31167,
											"end": 31190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31167,
											"end": 31190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31167,
											"end": 31190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31190,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31259,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31255,
											"end": 31259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31255,
											"end": 31259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31267,
											"name": "PUSH",
											"source": 0,
											"value": "E3D670D7"
										},
										{
											"begin": 31268,
											"end": 31275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31268,
											"end": 31275,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 31268,
											"end": 31275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 956,
											"end": 974,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 31255,
											"end": 31276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31302,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6574,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 6575,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6613,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6650,
											"end": 6684,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F723A204F776E657220646F6573206E6F74206861766520656E6F7567"
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "682062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6701,
											"end": 6719,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6701,
											"end": 6719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6769,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6750,
											"end": 6769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6370,
											"end": 6775,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 31233,
											"end": 31371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31434,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31415,
											"end": 31438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31389,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31453,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31449,
											"end": 31453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31467,
											"name": "PUSH",
											"source": 0,
											"value": "B45EE9EF"
										},
										{
											"begin": 31468,
											"end": 31475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31468,
											"end": 31475,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 31468,
											"end": 31475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31477,
											"end": 31489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31477,
											"end": 31489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31477,
											"end": 31489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31510,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31477,
											"end": 31489,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31477,
											"end": 31489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31477,
											"end": 31489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31477,
											"end": 31489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 31449,
											"end": 31515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31544,
											"end": 31563,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31544,
											"end": 31567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31539,
											"end": 31584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 31539,
											"end": 31584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31573,
											"end": 31583,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 31573,
											"end": 31583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31540,
											"end": 31567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 31540,
											"end": 31567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31540,
											"end": 31541,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31540,
											"end": 31567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 31540,
											"end": 31567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31540,
											"end": 31567,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 31540,
											"end": 31567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31539,
											"end": 31572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31539,
											"end": 31572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 31539,
											"end": 31584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31539,
											"end": 31584,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 31539,
											"end": 31584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31630,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31630,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 31595,
											"end": 31631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31649,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31689,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31677,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31642,
											"end": 31677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31677,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31689,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31736,
											"end": 31748,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31736,
											"end": 31748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "PUSH",
											"source": 0,
											"value": "200E42C44F4B61E64B8298DD340205F3D4FD26F4018958219AC19FA737A4BC93"
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31650,
											"end": 31654,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31650,
											"end": 31654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31736,
											"end": 31748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 19028,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31757,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 31750,
											"end": 31757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7038,
											"end": 7053,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7053,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7105,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7063,
											"end": 7106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7157,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31705,
											"end": 31758,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31838,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31857,
											"end": 31875,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31857,
											"end": 31879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31857,
											"end": 31879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31857,
											"end": 31879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31857,
											"end": 31879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31857,
											"end": 31879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31857,
											"end": 31879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31894,
											"end": 31913,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31894,
											"end": 31917,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31894,
											"end": 31917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31894,
											"end": 31917,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31894,
											"end": 31917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31894,
											"end": 31917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31894,
											"end": 31917,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31894,
											"end": 31917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7539,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7539,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7572,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31932,
											"end": 31941,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7616,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7598,
											"end": 7617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7598,
											"end": 7617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "PUSH",
											"source": 0,
											"value": "D3826252B977104A2929FB0E0FEA16ABE1E1F9D413DBDD04568F52A0A681BF1C"
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7415,
											"end": 7418,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7400,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31952,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 30339,
											"end": 31960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 31960,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19014,
											"end": 19020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19153,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19953,
											"end": 19975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19953,
											"end": 19975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 7841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7858,
											"end": 7876,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7858,
											"end": 7876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7858,
											"end": 7876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7897,
											"end": 7915,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7897,
											"end": 7915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 7915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7952,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8033,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8014,
											"end": 8033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7637,
											"end": 8039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19931,
											"end": 20041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20052,
											"end": 20080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20071,
											"end": 20079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20052,
											"end": 20070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20052,
											"end": 20080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20052,
											"end": 20080,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20052,
											"end": 20080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20088,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20248,
											"end": 20439,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20248,
											"end": 20439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20322,
											"end": 20338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20375,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20341,
											"end": 20347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20322,
											"end": 20338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20431,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20311,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24554,
											"end": 24652,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24554,
											"end": 24652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24612,
											"end": 24619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24639,
											"end": 24644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 24643,
											"end": 24644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24640,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 24639,
											"end": 24644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24639,
											"end": 24644,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 24639,
											"end": 24644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24632,
											"end": 24644,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24652,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24554,
											"end": 24652,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25310,
											"end": 25408,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25310,
											"end": 25408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25368,
											"end": 25375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25395,
											"end": 25400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25399,
											"end": 25400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25395,
											"end": 25396,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25395,
											"end": 25400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 25395,
											"end": 25400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 206,
											"end": 344,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 206,
											"end": 344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 288,
											"end": 319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 288,
											"end": 319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 278,
											"end": 320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 278,
											"end": 320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 334,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 324,
											"end": 336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 349,
											"end": 832,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 349,
											"end": 832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 455,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 496,
											"end": 505,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 487,
											"end": 494,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 479,
											"end": 511,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 476,
											"end": 528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 476,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 476,
											"end": 528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 524,
											"end": 525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 476,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 476,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 550,
											"end": 573,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 582,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 582,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 696,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 681,
											"end": 699,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 681,
											"end": 699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 668,
											"end": 700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 709,
											"end": 749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 709,
											"end": 749,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 709,
											"end": 749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 349,
											"end": 832,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 349,
											"end": 832,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 826,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 832,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1045,
											"end": 1299,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1045,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1155,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1160,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1177,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1125,
											"end": 1177,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1175,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1177,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1125,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1263,
											"end": 1268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1231,
											"end": 1269,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1304,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1363,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1419,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1436,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1384,
											"end": 1436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1436,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1384,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1304,
											"end": 1484,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1671,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1671,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2129,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2217,
											"end": 2229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2217,
											"end": 2229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2217,
											"end": 2229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2217,
											"end": 2229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2137,
											"end": 2146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 2303,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1671,
											"end": 2303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2308,
											"end": 2630,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2308,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2440,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2457,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2405,
											"end": 2457,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2405,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2543,
											"end": 2548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2511,
											"end": 2549,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2549,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2511,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2573,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2624,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2624,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3247,
											"end": 3569,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3247,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3362,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3379,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3477,
											"end": 3486,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3492,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3501,
											"end": 3539,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3501,
											"end": 3539,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3501,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3563,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3563,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3569,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3569,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3569,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3795,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3795,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 3999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4070,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 4151,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5244,
											"end": 5428,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5244,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5370,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5387,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5335,
											"end": 5387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5387,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5335,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5406,
											"end": 5422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5244,
											"end": 5428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5843,
											"end": 5970,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5843,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5914,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5899,
											"end": 5902,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5895,
											"end": 5915,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5935,
											"end": 5939,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5932,
											"end": 5933,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5925,
											"end": 5940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5956,
											"end": 5957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5964,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6143,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5975,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6073,
											"end": 6079,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6083,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6084,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6061,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6037,
											"end": 6108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6088,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6088,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6088,
											"end": 6106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6088,
											"end": 6106,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6088,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6143,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6148,
											"end": 6365,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6148,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6204,
											"end": 6336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6268,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6253,
											"end": 6256,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6249,
											"end": 6269,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6290,
											"end": 6291,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6283,
											"end": 6298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6318,
											"end": 6319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6336,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6204,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6350,
											"end": 6359,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6365,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8044,
											"end": 8169,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8044,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8114,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8103,
											"end": 8137,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"AdminAddress()": "28f661e3",
							"Coin()": "a77b2e37",
							"amountAfterBurning(uint256)": "3a84374b",
							"burningAmount(uint256)": "ee238506",
							"buyInfo(address,uint256)": "8637856d",
							"buyToken(uint256,address)": "9134709e",
							"getIdsOfUser(address)": "5f4fd1f7",
							"initialize(address,address,uint256)": "1794bb3c",
							"initialized()": "158ef93e",
							"owner()": "8da5cb5b",
							"ownerSurplusToAdmin(uint256)": "d09bf0e4",
							"renounceOwnership()": "715018a6",
							"setAdminAddress(address)": "2c1e816d",
							"totalInvesters()": "af0afec9",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burningAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountAfterBurning\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerSurplus\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"BNBchargedByAdmin\",\"type\":\"uint256\"}],\"name\":\"buyTokenDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"AdminAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"buyTokenDetailsAddresses\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerInitiative\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"BNB\",\"type\":\"uint256\"}],\"name\":\"swapTokenBNB\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AdminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Coin\",\"outputs\":[{\"internalType\":\"contract Token\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amountAfterBurning\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"burningAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buyInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchaseToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userGets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ownerSurplus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"BNBchargedByAdmin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getIdsOfUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Token\",\"name\":\"_Coin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerSurplusToAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdminAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInvesters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"smartContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x8719c32dcc545738040a58763b52918cfe883c74383c50fabcadd45e0eb76258\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6d5e84c45a6856591d0ea3a4bc03be6e70869deac19d8512b06a213f1dcd20\",\"dweb:/ipfs/QmQU5Mz6H1z7WcMXnV78SHj1C1UF27fK73nfZLAtKSxj4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 713,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1212,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "AdminAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1215,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "Coin",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(Token)895"
							},
							{
								"astId": 1217,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "investerID",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1219,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "initialized",
								"offset": 0,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 1226,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "buyInfo",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(purchaseInfo)1258_storage))"
							},
							{
								"astId": 1231,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "getIDByAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1235,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "burningAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1239,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "amountAfterBurning",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1243,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "ownerSurplusToAdmin",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(Token)895": {
								"encoding": "inplace",
								"label": "contract Token",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(purchaseInfo)1258_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(purchaseInfo)1258_storage)"
							},
							"t_mapping(t_uint256,t_struct(purchaseInfo)1258_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct smartContract.purchaseInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(purchaseInfo)1258_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(purchaseInfo)1258_storage": {
								"encoding": "inplace",
								"label": "struct smartContract.purchaseInfo",
								"members": [
									{
										"astId": 1245,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "ID",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1247,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "buyTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1249,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "purchaseToken",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1251,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "burnToken",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1253,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "userGets",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1255,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "ownerSurplus",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1257,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "BNBchargedByAdmin",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"smartContract_flat.sol": {
				"ast": {
					"absolutePath": "smartContract_flat.sol",
					"exportedSymbols": {
						"Context": [
							119
						],
						"ERC20": [
							708
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							99
						],
						"Ownable": [
							810
						],
						"SafeMath": [
							1205
						],
						"Token": [
							895
						],
						"smartContract": [
							1603
						]
					},
					"id": 1604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "151:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "179:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "263:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "277:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "452:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "461:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "499:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "483:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "511:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "503:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:57:0"
									},
									"src": "446:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "526:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "689:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "724:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "708:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "756:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "740:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "774:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:97:0"
									},
									"src": "683:112:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "803:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "886:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "897:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "923:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:9:0"
									},
									"scope": 77,
									"src": "877:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "940:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1029:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1079:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:9:0"
									},
									"scope": 77,
									"src": "1020:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1096:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1319:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1336:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1328:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1348:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1340:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:6:0"
									},
									"scope": 77,
									"src": "1310:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1388:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1673:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1706:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1698:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1765:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:9:0"
									},
									"scope": 77,
									"src": "1664:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1782:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2452:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2468:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2460:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2485:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2477:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2511:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2511:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:6:0"
									},
									"scope": 77,
									"src": "2443:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2525:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2835:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2866:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2858:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2889:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2881:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2910:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2902:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2847:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2942:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2942:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2941:6:0"
									},
									"scope": 77,
									"src": "2826:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1604,
							"src": "253:2698:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 79,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3251:6:0"
									},
									"id": 80,
									"nodeType": "InheritanceSpecifier",
									"src": "3251:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 78,
								"nodeType": "StructuredDocumentation",
								"src": "3101:120:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3233:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3265:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3336:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3366:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 83,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3366:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3365:15:0"
									},
									"scope": 99,
									"src": "3327:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "3389:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3462:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3468:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3494:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 89,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3494:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3493:15:0"
									},
									"scope": 99,
									"src": "3453:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3517:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3599:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3607:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3633:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 95,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3633:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:7:0"
									},
									"scope": 99,
									"src": "3590:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1604,
							"src": "3223:420:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 100,
								"nodeType": "StructuredDocumentation",
								"src": "3755:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 119,
							"linearizedBaseContracts": [
								119
							],
							"name": "Context",
							"nameLocation": "4280:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4357:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 105,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4375:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4375:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 104,
												"id": 107,
												"nodeType": "Return",
												"src": "4368:17:0"
											}
										]
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4304:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4314:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4347:9:0"
									},
									"scope": 119,
									"src": "4295:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "4468:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 114,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4486:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4486:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 113,
												"id": 116,
												"nodeType": "Return",
												"src": "4479:15:0"
											}
										]
									},
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4410:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4418:2:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "4452:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4452:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:16:0"
									},
									"scope": 119,
									"src": "4401:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1604,
							"src": "4262:243:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 121,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 119,
										"src": "5850:7:0"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "5850:7:0"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "5859:6:0"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "5859:6:0"
								},
								{
									"baseName": {
										"id": 125,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 99,
										"src": "5867:14:0"
									},
									"id": 126,
									"nodeType": "InheritanceSpecifier",
									"src": "5867:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 120,
								"nodeType": "StructuredDocumentation",
								"src": "4634:1196:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 708,
							"linearizedBaseContracts": [
								708,
								99,
								77,
								119
							],
							"name": "ERC20",
							"nameLocation": "5841:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5925:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5889:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 129,
										"keyType": {
											"id": 127,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5897:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5889:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 128,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5908:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5999:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5943:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 135,
										"keyType": {
											"id": 131,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5951:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5943:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 134,
											"keyType": {
												"id": 132,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5970:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5962:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5981:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "6035:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "6019:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6019:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "6071:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "6056:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6056:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 142,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "6098:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "6083:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 141,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6083:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 144,
									"mutability": "mutable",
									"name": "_decimal",
									"nameLocation": "6128:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "6112:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6112:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "6565:90:0",
										"statements": [
											{
												"expression": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 154,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "6576:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 155,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "6584:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6576:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "6576:13:0"
											},
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 158,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "6600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 159,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "6610:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6600:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "6600:17:0"
											},
											{
												"expression": {
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 162,
														"name": "_decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "6628:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 163,
														"name": "decimal_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "6639:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6628:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "6628:19:0"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "6145:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 167,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6493:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6479:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 146,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6479:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6523:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6509:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6509:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "decimal_",
												"nameLocation": "6549:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6541:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6468:96:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6565:0:0"
									},
									"scope": 708,
									"src": "6457:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										86
									],
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "6794:31:0",
										"statements": [
											{
												"expression": {
													"id": 174,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "6812:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "6805:12:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "6663:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6734:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6761:8:0"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6738:2:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "6779:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6779:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:15:0"
									},
									"scope": 708,
									"src": "6725:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										92
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "7015:33:0",
										"statements": [
											{
												"expression": {
													"id": 184,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "7033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 183,
												"id": 185,
												"nodeType": "Return",
												"src": "7026:14:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "6833:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6953:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6982:8:0"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6959:2:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7000:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7000:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6999:15:0"
									},
									"scope": 708,
									"src": "6944:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										98
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "7752:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "39",
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7770:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "7763:8:0"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "7056:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7696:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7727:8:0"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7704:2:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "7745:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 191,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7745:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7744:7:0"
									},
									"scope": 708,
									"src": "7687:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "7914:38:0",
										"statements": [
											{
												"expression": {
													"id": 204,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "7932:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 203,
												"id": 205,
												"nodeType": "Return",
												"src": "7925:19:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "7787:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7853:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 200,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7887:8:0"
									},
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7864:2:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "7905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7904:9:0"
									},
									"scope": 708,
									"src": "7844:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "8148:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 216,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "8166:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 218,
													"indexExpression": {
														"id": 217,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "8176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8166:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 215,
												"id": 219,
												"nodeType": "Return",
												"src": "8159:25:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "7960:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8024:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 212,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8107:8:0"
									},
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8042:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "8034:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8033:17:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "8134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8133:9:0"
									},
									"scope": 708,
									"src": "8015:177:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "8524:108:0",
										"statements": [
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8543:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 245,
														"src": "8535:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 232,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8535:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 234,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "8551:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8551:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8535:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "8584:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "8591:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 240,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "8595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "8574:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8574:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "8574:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 231,
												"id": 244,
												"nodeType": "Return",
												"src": "8613:11:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8200:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8407:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 228,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8486:8:0"
									},
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8424:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "8416:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8436:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "8428:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8415:28:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "8513:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8513:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8512:6:0"
									},
									"scope": 708,
									"src": "8398:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "8843:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 257,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "8861:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 259,
														"indexExpression": {
															"id": 258,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "8873:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8861:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 261,
													"indexExpression": {
														"id": 260,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "8880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8861:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 262,
												"nodeType": "Return",
												"src": "8854:34:0"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "8640:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8704:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 253,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8802:8:0"
									},
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8722:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "8714:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "8729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8713:32:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "8829:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8828:9:0"
									},
									"scope": 708,
									"src": "8695:201:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "9346:112:0",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9365:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "9357:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 275,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9357:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 277,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "9373:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9373:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9357:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "9405:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 282,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "9412:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 283,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "9421:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 280,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "9396:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9396:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "9396:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9446:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 274,
												"id": 287,
												"nodeType": "Return",
												"src": "9439:11:0"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "8904:306:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9225:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9308:8:0"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9241:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "9233:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9258:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "9250:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9232:33:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "9335:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9334:6:0"
									},
									"scope": 708,
									"src": "9216:242:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "10175:158:0",
										"statements": [
											{
												"assignments": [
													303
												],
												"declarations": [
													{
														"constant": false,
														"id": 303,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "10194:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 321,
														"src": "10186:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 302,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10186:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 306,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 304,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "10204:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10204:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10186:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "10243:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 309,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "10249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 310,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "10258:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 307,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "10227:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10227:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "10227:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 314,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "10286:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 315,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "10292:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "10296:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 313,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "10276:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10276:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "10276:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10321:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 301,
												"id": 320,
												"nodeType": "Return",
												"src": "10314:11:0"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "9466:566:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10047:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10151:8:0"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10078:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "10070:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10101:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "10093:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10122:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "10114:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10059:76:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "10169:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:6:0"
									},
									"scope": 708,
									"src": "10038:295:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "10868:144:0",
										"statements": [
											{
												"assignments": [
													333
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10887:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "10879:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 332,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10879:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 334,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "10895:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10895:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10879:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 338,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "10927:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "10934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 341,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "10953:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 342,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "10960:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 340,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "10943:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10943:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 344,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "10971:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10943:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 337,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "10918:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "10918:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11000:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 331,
												"id": 349,
												"nodeType": "Return",
												"src": "10993:11:0"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "10341:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10751:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10777:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10769:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "10794:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10786:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10768:37:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10857:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10857:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10856:6:0"
									},
									"scope": 708,
									"src": "10742:270:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "11646:374:0",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11665:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 391,
														"src": "11657:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 361,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11657:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 365,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 363,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "11673:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11673:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11657:28:0"
											},
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11704:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 391,
														"src": "11696:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11696:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"arguments": [
														{
															"id": 369,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "11733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "11740:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 368,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "11723:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11723:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11696:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 374,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "11781:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 375,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "11801:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11781:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11831:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11759:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "11759:122:0"
											},
											{
												"id": 388,
												"nodeType": "UncheckedBlock",
												"src": "11892:97:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 381,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "11926:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 382,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "11933:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "11942:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 384,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "11961:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11942:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 380,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "11917:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11917:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 387,
														"nodeType": "ExpressionStatement",
														"src": "11917:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12008:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 360,
												"id": 390,
												"nodeType": "Return",
												"src": "12001:11:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "11020:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "11524:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11550:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "11542:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "11567:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "11559:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11541:42:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "11635:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11634:6:0"
									},
									"scope": 708,
									"src": "11515:505:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "12611:596:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "12630:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12646:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12638:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12638:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12638:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12630:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12650:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12622:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12622:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "12622:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 413,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "12709:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12723:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12715:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 414,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12715:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12715:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12709:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12727:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12701:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "12701:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12799:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12805:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "12809:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "12778:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12778:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "12778:38:0"
											},
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "12837:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 468,
														"src": "12829:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 428,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12829:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"baseExpression": {
														"id": 430,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "12851:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 432,
													"indexExpression": {
														"id": 431,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "12861:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12851:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12829:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 435,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "12899:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 436,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12914:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12899:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12935:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12877:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12877:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "12877:109:0"
											},
											{
												"id": 449,
												"nodeType": "UncheckedBlock",
												"src": "12997:75:0",
												"statements": [
													{
														"expression": {
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 441,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "13022:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 443,
																"indexExpression": {
																	"id": 442,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "13032:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13022:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 444,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "13040:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 445,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "13054:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13040:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13022:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 448,
														"nodeType": "ExpressionStatement",
														"src": "13022:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 450,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "13082:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 452,
														"indexExpression": {
															"id": 451,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13092:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13082:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 453,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "13099:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13082:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "13082:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 457,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "13132:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13138:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 459,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "13142:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13123:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13123:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "EmitStatement",
												"src": "13118:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 463,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "13182:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13188:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "13192:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 462,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "13162:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13162:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "13162:37:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "12028:465:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12508:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12536:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "12528:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12559:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "12551:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "12572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12517:76:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12611:0:0"
									},
									"scope": 708,
									"src": "12499:708:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "13559:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 478,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "13578:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13597:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13589:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 479,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13589:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13589:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13578:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13601:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13570:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "13570:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13677:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 488,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13669:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13669:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13681:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "13690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "13648:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13648:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "13648:49:0"
											},
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 496,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "13710:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 497,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "13726:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13710:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "13710:22:0"
											},
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 500,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "13743:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13743:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 503,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "13765:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13743:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "13743:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13796:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13796:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13796:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "13817:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13787:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13787:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "EmitStatement",
												"src": "13782:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13865:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13857:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13857:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13857:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13869:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "13878:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "13837:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13837:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "13837:48:0"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "13215:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "13503:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13534:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13508:33:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13559:0:0"
									},
									"scope": 708,
									"src": "13494:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "14291:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 534,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "14310:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14329:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14321:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 535,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14321:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14321:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14310:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14333:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14302:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "14302:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 544,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14403:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14420:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14412:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 545,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14412:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14412:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "14424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 543,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "14382:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14382:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "14382:49:0"
											},
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "14452:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "14444:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"baseExpression": {
														"id": 554,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "14469:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 556,
													"indexExpression": {
														"id": 555,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "14479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14469:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14444:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 559,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "14506:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 560,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "14524:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14506:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14532:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "14498:71:0"
											},
											{
												"id": 573,
												"nodeType": "UncheckedBlock",
												"src": "14580:81:0",
												"statements": [
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 565,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "14605:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 567,
																"indexExpression": {
																	"id": 566,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "14615:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14605:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 568,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "14626:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 569,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "14643:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14626:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14605:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "14605:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 574,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "14671:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 575,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "14687:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14671:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "14671:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14720:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14737:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14729:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14729:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14729:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "14741:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "14711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14711:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "EmitStatement",
												"src": "14706:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14798:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14790:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 589,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14790:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14790:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 593,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "14802:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "14761:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14761:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "14761:48:0"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "13901:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "14235:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14249:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "14241:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "14258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14240:33:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14291:0:0"
									},
									"scope": 708,
									"src": "14226:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "15372:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 608,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "15391:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15408:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15400:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 609,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15400:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15400:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15391:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15412:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15383:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "15383:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 618,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "15470:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15489:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15481:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 619,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15481:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15481:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15470:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15493:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15462:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15462:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "15462:68:0"
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 627,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "15543:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 630,
															"indexExpression": {
																"id": 628,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "15555:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15543:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 631,
														"indexExpression": {
															"id": 629,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "15562:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15543:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 632,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "15573:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15543:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "15543:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 636,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "15604:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "15611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "15620:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "15595:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15595:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "EmitStatement",
												"src": "15590:37:0"
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "14825:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15264:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15291:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "15283:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15315:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "15307:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15341:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "15333:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15272:82:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15372:0:0"
									},
									"scope": 708,
									"src": "15255:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "16050:378:0",
										"statements": [
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "16069:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "16061:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "16098:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "16105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 654,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "16088:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16088:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16061:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 659,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "16128:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16153:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16153:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 660,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16148:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16148:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16148:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16128:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "16124:297:0",
												"trueBody": {
													"id": 682,
													"nodeType": "Block",
													"src": "16167:254:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 667,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 653,
																			"src": "16208:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 668,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 649,
																			"src": "16228:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16208:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16253:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 666,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16182:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16182:117:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 672,
															"nodeType": "ExpressionStatement",
															"src": "16182:117:0"
														},
														{
															"id": 681,
															"nodeType": "UncheckedBlock",
															"src": "16314:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 674,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 645,
																				"src": "16352:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 675,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "16359:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 676,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 653,
																					"src": "16368:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 677,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 649,
																					"src": "16387:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16368:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 673,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "16343:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16343:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 680,
																	"nodeType": "ExpressionStatement",
																	"src": "16343:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "15643:277:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "15935:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15969:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "15961:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15993:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "15985:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16019:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "16011:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15950:82:0"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16050:0:0"
									},
									"scope": 708,
									"src": "15926:502:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "17151:2:0",
										"statements": []
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "16436:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "17037:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17076:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "17068:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17099:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "17091:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17120:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "17112:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17057:76:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17151:0:0"
									},
									"scope": 708,
									"src": "17028:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "17879:2:0",
										"statements": []
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "17161:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "17766:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17804:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "17796:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17827:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "17819:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17848:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "17840:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17785:76:0"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17879:0:0"
									},
									"scope": 708,
									"src": "17757:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1604,
							"src": "5832:12052:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 710,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 119,
										"src": "18533:7:0"
									},
									"id": 711,
									"nodeType": "InheritanceSpecifier",
									"src": "18533:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 709,
								"nodeType": "StructuredDocumentation",
								"src": "17997:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810,
								119
							],
							"name": "Ownable",
							"nameLocation": "18522:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 713,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "18564:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "18548:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 712,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18548:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 719,
									"name": "OwnershipTransferred",
									"nameLocation": "18585:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "18632:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "18616:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "18672:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "18656:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18605:82:0"
									},
									"src": "18579:109:0"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "18809:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 724,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "18839:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18839:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 723,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "18820:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18820:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "18820:32:0"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "18696:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 729,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18806:2:0"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18809:0:0"
									},
									"scope": 810,
									"src": "18795:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "18996:32:0",
										"statements": [
											{
												"expression": {
													"id": 735,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 713,
													"src": "19014:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 734,
												"id": 736,
												"nodeType": "Return",
												"src": "19007:13:0"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "18868:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "18950:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18955:2:0"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "18987:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18986:9:0"
									},
									"scope": 810,
									"src": "18941:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "19142:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 742,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "19161:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19161:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 744,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "19172:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19172:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19161:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19186:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 741,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19153:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "19153:68:0"
											},
											{
												"id": 750,
												"nodeType": "PlaceholderStatement",
												"src": "19232:1:0"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "19036:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 752,
									"name": "onlyOwner",
									"nameLocation": "19130:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19139:2:0"
									},
									"src": "19121:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "19646:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19676:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 759,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19676:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19676:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 758,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "19657:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19657:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "19657:30:0"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "19249:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 756,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 755,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 752,
												"src": "19636:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19636:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "19601:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19618:2:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19646:0:0"
									},
									"scope": 810,
									"src": "19592:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "19920:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 775,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "19953:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19973:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19965:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19965:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19965:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19953:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19990:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19931:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "19931:110:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "20071:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 784,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "20052:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20052:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "20052:28:0"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "19703:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 772,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 771,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 752,
												"src": "19910:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19910:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "19859:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19885:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "19877:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19876:18:0"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19920:0:0"
									},
									"scope": 810,
									"src": "19850:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "20311:128:0",
										"statements": [
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "20330:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "20322:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 795,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20322:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"id": 797,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 713,
													"src": "20341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20322:25:0"
											},
											{
												"expression": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 799,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "20358:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 800,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "20367:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20358:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "20358:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 804,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "20412:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 805,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "20422:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 803,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "20391:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20391:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "EmitStatement",
												"src": "20386:45:0"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "20096:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "20257:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "20284:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "20276:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20275:18:0"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20311:0:0"
									},
									"scope": 810,
									"src": "20248:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1604,
							"src": "18504:1938:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 811,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 810,
										"src": "20512:7:0"
									},
									"id": 812,
									"nodeType": "InheritanceSpecifier",
									"src": "20512:7:0"
								},
								{
									"baseName": {
										"id": 813,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "20521:5:0"
									},
									"id": 814,
									"nodeType": "InheritanceSpecifier",
									"src": "20521:5:0"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 895,
							"linearizedBaseContracts": [
								895,
								708,
								99,
								77,
								810,
								119
							],
							"name": "Token",
							"nameLocation": "20503:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3eaaf86b",
									"id": 816,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "20549:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 895,
									"src": "20534:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20534:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "20607:92:0",
										"statements": [
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 824,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "20618:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313030303030303030",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20633:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000_by_1",
																"typeString": "int_const 100000000"
															},
															"value": "100000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000_by_1",
																		"typeString": "int_const 1000000000"
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20646:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "39",
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20650:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_9_by_1",
																			"typeString": "int_const 9"
																		},
																		"value": "9"
																	},
																	"src": "20646:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000_by_1",
																		"typeString": "int_const 1000000000"
																	}
																}
															],
															"id": 829,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														},
														"src": "20633:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														}
													},
													"src": "20618:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "20618:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 834,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "20669:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20669:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "20678:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 833,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "20663:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20663:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "20663:28:0"
											}
										]
									},
									"id": 840,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "434f494e",
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20590:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_94d28cfe178ae84130ce540d5dadabd088b301735941a744d121b4926572ece0",
														"typeString": "literal_string \"COIN\""
													},
													"value": "COIN"
												},
												{
													"hexValue": "434e",
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20598:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f8609dc9e17ae3d389c9f285ef4a3418632c9ba23251295f985500bcfc7f3ee5",
														"typeString": "literal_string \"CN\""
													},
													"value": "CN"
												},
												{
													"hexValue": "39",
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20604:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												}
											],
											"id": 822,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 818,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "20584:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20584:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20581:2:0"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20607:0:0"
									},
									"scope": 895,
									"src": "20570:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "20771:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "20799:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 847,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "20789:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20789:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 846,
												"id": 850,
												"nodeType": "Return",
												"src": "20782:25:0"
											}
										]
									},
									"functionSelector": "e3d670d7",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "20716:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "20724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20723:17:0"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "20762:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20761:9:0"
									},
									"scope": 895,
									"src": "20707:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "20929:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 862,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "20950:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "20956:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "20960:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "20940:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20940:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "20940:27:0"
											}
										]
									},
									"functionSelector": "b45ee9ef",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferPrice",
									"nameLocation": "20832:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20864:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "20856:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20887:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "20879:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20908:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "20900:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20845:76:0"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20929:0:0"
									},
									"scope": 895,
									"src": "20823:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "21037:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 876,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "21054:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "21063:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 875,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "21048:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21048:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "21048:22:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "20992:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21005:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "20997:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21022:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "21014:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20996:33:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21037:0:0"
									},
									"scope": 895,
									"src": "20983:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "21140:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 889,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "21157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 890,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "21166:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 888,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "21151:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21151:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "21151:22:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "21095:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21108:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "21100:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21125:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "21117:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21099:33:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21140:0:0"
									},
									"scope": 895,
									"src": "21086:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1604,
							"src": "20494:690:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 896,
								"nodeType": "StructuredDocumentation",
								"src": "21460:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1205,
							"linearizedBaseContracts": [
								1205
							],
							"name": "SafeMath",
							"nameLocation": "21671:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "21936:146:0",
										"statements": [
											{
												"id": 926,
												"nodeType": "UncheckedBlock",
												"src": "21947:128:0",
												"statements": [
													{
														"assignments": [
															909
														],
														"declarations": [
															{
																"constant": false,
																"id": 909,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "21980:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 926,
																"src": "21972:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 908,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21972:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 913,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 910,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "21984:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 911,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "21988:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21984:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21972:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 914,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "22008:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 915,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "22012:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22008:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 921,
														"nodeType": "IfStatement",
														"src": "22004:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22023:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22030:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 919,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22022:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 907,
															"id": 920,
															"nodeType": "Return",
															"src": "22015:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22055:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 923,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "22061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 924,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "22054:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 907,
														"id": 925,
														"nodeType": "Return",
														"src": "22047:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21687:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "21837:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21852:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "21844:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "21863:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "21855:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21843:22:0"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "21916:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21916:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "21922:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21915:15:0"
									},
									"scope": 1205,
									"src": "21828:254:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "22342:118:0",
										"statements": [
											{
												"id": 954,
												"nodeType": "UncheckedBlock",
												"src": "22353:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 940,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "22382:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 941,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "22386:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 947,
														"nodeType": "IfStatement",
														"src": "22378:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22397:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22404:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 945,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22396:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 939,
															"id": 946,
															"nodeType": "Return",
															"src": "22389:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22429:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 949,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "22435:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 950,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 933,
																		"src": "22439:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22435:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 952,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "22428:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 939,
														"id": 953,
														"nodeType": "Return",
														"src": "22421:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "22090:138:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "22243:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22258:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22250:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22269:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22261:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22249:22:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22322:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22322:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22321:15:0"
									},
									"scope": 1205,
									"src": "22234:226:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "22723:427:0",
										"statements": [
											{
												"id": 996,
												"nodeType": "UncheckedBlock",
												"src": "22734:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 968,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "22996:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23001:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22996:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 975,
														"nodeType": "IfStatement",
														"src": "22992:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23012:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23018:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 973,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23011:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 967,
															"id": 974,
															"nodeType": "Return",
															"src": "23004:16:0"
														}
													},
													{
														"assignments": [
															977
														],
														"declarations": [
															{
																"constant": false,
																"id": 977,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "23043:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 996,
																"src": "23035:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 976,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23035:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 981,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 978,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "23047:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 979,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "23051:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23047:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23035:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 982,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "23071:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 983,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "23075:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23071:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 985,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "23080:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23071:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 991,
														"nodeType": "IfStatement",
														"src": "23067:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23091:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23098:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23090:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 967,
															"id": 990,
															"nodeType": "Return",
															"src": "23083:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23123:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 993,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "23129:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 994,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "23122:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 967,
														"id": 995,
														"nodeType": "Return",
														"src": "23115:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "22468:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "22624:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22639:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "22631:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "22642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22630:22:0"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "22703:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "22709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22702:15:0"
									},
									"scope": 1205,
									"src": "22615:535:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "23414:119:0",
										"statements": [
											{
												"id": 1024,
												"nodeType": "UncheckedBlock",
												"src": "23425:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1010,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "23454:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23459:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23454:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1017,
														"nodeType": "IfStatement",
														"src": "23450:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23470:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23477:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1015,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23469:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1009,
															"id": 1016,
															"nodeType": "Return",
															"src": "23462:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23502:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1019,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "23508:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1020,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "23512:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23508:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1022,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "23501:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1009,
														"id": 1023,
														"nodeType": "Return",
														"src": "23494:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "23158:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "23315:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23330:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "23322:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23341:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "23333:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23321:22:0"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "23394:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "23400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23393:15:0"
									},
									"scope": 1205,
									"src": "23306:227:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "23807:119:0",
										"statements": [
											{
												"id": 1052,
												"nodeType": "UncheckedBlock",
												"src": "23818:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1038,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "23847:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23852:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23847:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1045,
														"nodeType": "IfStatement",
														"src": "23843:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23863:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23870:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23862:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1037,
															"id": 1044,
															"nodeType": "Return",
															"src": "23855:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23895:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1047,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "23901:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1048,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "23905:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23901:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1050,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "23894:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1037,
														"id": 1051,
														"nodeType": "Return",
														"src": "23887:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "23541:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "23708:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "23715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23734:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "23726:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23714:22:0"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "23787:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1033,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23787:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "23793:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:15:0"
									},
									"scope": 1205,
									"src": "23699:227:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "24240:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1064,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "24258:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1065,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "24262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1063,
												"id": 1067,
												"nodeType": "Return",
												"src": "24251:12:0"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "23934:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "24182:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "24186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24205:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "24197:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24185:22:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "24231:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24230:9:0"
									},
									"scope": 1205,
									"src": "24173:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "24621:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1079,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "24639:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1080,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "24643:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24639:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1078,
												"id": 1082,
												"nodeType": "Return",
												"src": "24632:12:0"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "24279:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "24563:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24575:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "24567:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24586:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "24578:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24566:22:0"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "24612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24611:9:0"
									},
									"scope": 1205,
									"src": "24554:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "24978:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "24996:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1095,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "25000:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24996:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1097,
												"nodeType": "Return",
												"src": "24989:12:0"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "24660:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "24920:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24932:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "24924:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "24935:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24923:22:0"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "24969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24968:9:0"
									},
									"scope": 1205,
									"src": "24911:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "25377:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1109,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "25395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1110,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "25399:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25395:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1108,
												"id": 1112,
												"nodeType": "Return",
												"src": "25388:12:0"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "25017:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "25319:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25331:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "25323:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25342:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "25334:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25322:22:0"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "25368:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25367:9:0"
									},
									"scope": 1205,
									"src": "25310:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "25942:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "25960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "25964:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25960:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1123,
												"id": 1127,
												"nodeType": "Return",
												"src": "25953:12:0"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "25416:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "25884:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25896:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "25888:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25907:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "25899:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25887:22:0"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "25933:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25932:9:0"
									},
									"scope": 1205,
									"src": "25875:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "26581:111:0",
										"statements": [
											{
												"id": 1152,
												"nodeType": "UncheckedBlock",
												"src": "26592:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1142,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "26625:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1143,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "26630:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26625:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1145,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "26633:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1141,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "26617:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26617:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1147,
														"nodeType": "ExpressionStatement",
														"src": "26617:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1148,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "26668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1149,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "26672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1140,
														"id": 1151,
														"nodeType": "Return",
														"src": "26661:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "25981:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "26461:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "26483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "26475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "26503:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "26495:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "26529:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "26515:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26515:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26464:84:0"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "26572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26571:9:0"
									},
									"scope": 1205,
									"src": "26452:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "27319:110:0",
										"statements": [
											{
												"id": 1177,
												"nodeType": "UncheckedBlock",
												"src": "27330:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1167,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "27363:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27367:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "27363:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1170,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "27370:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1166,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "27355:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27355:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1172,
														"nodeType": "ExpressionStatement",
														"src": "27355:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1173,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "27405:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1174,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "27409:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27405:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1165,
														"id": 1176,
														"nodeType": "Return",
														"src": "27398:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "26700:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "27199:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "27221:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "27213:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "27241:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "27233:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "27267:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "27253:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1160,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27253:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27202:84:0"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "27310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27309:9:0"
									},
									"scope": 1205,
									"src": "27190:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "28221:110:0",
										"statements": [
											{
												"id": 1202,
												"nodeType": "UncheckedBlock",
												"src": "28232:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1192,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "28265:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28269:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "28265:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1195,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "28272:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1191,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "28257:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28257:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1197,
														"nodeType": "ExpressionStatement",
														"src": "28257:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1198,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "28307:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1199,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "28311:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28307:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1190,
														"id": 1201,
														"nodeType": "Return",
														"src": "28300:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "27437:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "28101:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "28123:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28115:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "28143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "28169:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28155:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28155:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28104:84:0"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28212:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28211:9:0"
									},
									"scope": 1205,
									"src": "28092:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1604,
							"src": "21663:6671:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1206,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 810,
										"src": "28416:7:0"
									},
									"id": 1207,
									"nodeType": "InheritanceSpecifier",
									"src": "28416:7:0"
								}
							],
							"canonicalName": "smartContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1603,
							"linearizedBaseContracts": [
								1603,
								810,
								119
							],
							"name": "smartContract",
							"nameLocation": "28399:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1210,
									"libraryName": {
										"id": 1208,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1205,
										"src": "28437:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28431:27:0",
									"typeName": {
										"id": 1209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28450:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "28f661e3",
									"id": 1212,
									"mutability": "mutable",
									"name": "AdminAddress",
									"nameLocation": "28479:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "28464:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1211,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28464:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a77b2e37",
									"id": 1215,
									"mutability": "mutable",
									"name": "Coin",
									"nameLocation": "28511:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "28498:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Token_$895",
										"typeString": "contract Token"
									},
									"typeName": {
										"id": 1214,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1213,
											"name": "Token",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 895,
											"src": "28498:5:0"
										},
										"referencedDeclaration": 895,
										"src": "28498:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Token_$895",
											"typeString": "contract Token"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1217,
									"mutability": "mutable",
									"name": "investerID",
									"nameLocation": "28530:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "28522:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28522:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 1219,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "28559:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "28547:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1218,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "28547:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8637856d",
									"id": 1226,
									"mutability": "mutable",
									"name": "buyInfo",
									"nameLocation": "28639:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "28579:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo))"
									},
									"typeName": {
										"id": 1225,
										"keyType": {
											"id": 1220,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28587:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28579:52:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo))"
										},
										"valueType": {
											"id": 1224,
											"keyType": {
												"id": 1221,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28606:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "28598:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$",
												"typeString": "mapping(uint256 => struct smartContract.purchaseInfo)"
											},
											"valueType": {
												"id": 1223,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1222,
													"name": "purchaseInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1258,
													"src": "28617:12:0"
												},
												"referencedDeclaration": 1258,
												"src": "28617:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_purchaseInfo_$1258_storage_ptr",
													"typeString": "struct smartContract.purchaseInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1231,
									"mutability": "mutable",
									"name": "getIDByAddress",
									"nameLocation": "28683:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "28653:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1230,
										"keyType": {
											"id": 1227,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28661:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28653:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 1228,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28672:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1229,
											"nodeType": "ArrayTypeName",
											"src": "28672:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ee238506",
									"id": 1235,
									"mutability": "mutable",
									"name": "burningAmount",
									"nameLocation": "28739:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "28704:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1234,
										"keyType": {
											"id": 1232,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28712:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "28704:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1233,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28723:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a84374b",
									"id": 1239,
									"mutability": "mutable",
									"name": "amountAfterBurning",
									"nameLocation": "28794:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "28759:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1238,
										"keyType": {
											"id": 1236,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28767:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "28759:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1237,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28778:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d09bf0e4",
									"id": 1243,
									"mutability": "mutable",
									"name": "ownerSurplusToAdmin",
									"nameLocation": "28854:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "28819:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1242,
										"keyType": {
											"id": 1240,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28827:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "28819:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1241,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28838:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "smartContract.purchaseInfo",
									"id": 1258,
									"members": [
										{
											"constant": false,
											"id": 1245,
											"mutability": "mutable",
											"name": "ID",
											"nameLocation": "28921:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 1258,
											"src": "28913:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1244,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28913:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1247,
											"mutability": "mutable",
											"name": "buyTime",
											"nameLocation": "28942:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 1258,
											"src": "28934:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1246,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28934:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1249,
											"mutability": "mutable",
											"name": "purchaseToken",
											"nameLocation": "28968:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 1258,
											"src": "28960:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1248,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28960:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1251,
											"mutability": "mutable",
											"name": "burnToken",
											"nameLocation": "29000:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 1258,
											"src": "28992:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1250,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28992:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1253,
											"mutability": "mutable",
											"name": "userGets",
											"nameLocation": "29028:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1258,
											"src": "29020:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1252,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29020:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1255,
											"mutability": "mutable",
											"name": "ownerSurplus",
											"nameLocation": "29055:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1258,
											"src": "29047:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1254,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29047:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1257,
											"mutability": "mutable",
											"name": "BNBchargedByAdmin",
											"nameLocation": "29086:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 1258,
											"src": "29078:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1256,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29078:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "purchaseInfo",
									"nameLocation": "28889:12:0",
									"nodeType": "StructDefinition",
									"scope": 1603,
									"src": "28882:229:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "29140:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1261,
																"name": "AdminAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "29159:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1262,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "29175:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29175:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29159:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a2063616c6c6572206973206e6f74207468652041646d696e",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29189:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33def4ba61263e52f5572d2a991afa2a911f55e0da50566d766f5402d9ca23c9",
																"typeString": "literal_string \"Error: caller is not the Admin\""
															},
															"value": "Error: caller is not the Admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33def4ba61263e52f5572d2a991afa2a911f55e0da50566d766f5402d9ca23c9",
																"typeString": "literal_string \"Error: caller is not the Admin\""
															}
														],
														"id": 1260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29151:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "29151:71:0"
											},
											{
												"id": 1268,
												"nodeType": "PlaceholderStatement",
												"src": "29233:1:0"
											}
										]
									},
									"id": 1270,
									"name": "onlyAdmin",
									"nameLocation": "29128:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29137:2:0"
									},
									"src": "29119:123:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "200e42c44f4b61e64b8298dd340205f3d4fd26f4018958219ac19fa737a4bc93",
									"id": 1278,
									"name": "buyTokenDetailsAddresses",
									"nameLocation": "29256:24:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "29299:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "29291:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"indexed": false,
												"mutability": "mutable",
												"name": "AdminAddress",
												"nameLocation": "29322:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "29314:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "29353:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "29345:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29280:85:0"
									},
									"src": "29250:116:0"
								},
								{
									"anonymous": false,
									"eventSelector": "d3826252b977104a2929fb0e0fea16abe1e1f9d413dbdd04568f52a0a681bf1c",
									"id": 1290,
									"name": "buyTokenDetails",
									"nameLocation": "29380:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29414:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "29406:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"indexed": false,
												"mutability": "mutable",
												"name": "burningAmount",
												"nameLocation": "29439:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "29431:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountAfterBurning",
												"nameLocation": "29471:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "29463:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"indexed": false,
												"mutability": "mutable",
												"name": "ownerSurplus",
												"nameLocation": "29508:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "29500:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"indexed": false,
												"mutability": "mutable",
												"name": "BNBchargedByAdmin",
												"nameLocation": "29539:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "29531:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29395:168:0"
									},
									"src": "29374:190:0"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "29695:238:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1303,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "29714:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29729:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "29714:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920496e697469616c697a6564",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29735:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8",
																"typeString": "literal_string \"Already Initialized\""
															},
															"value": "Already Initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8",
																"typeString": "literal_string \"Already Initialized\""
															}
														],
														"id": 1302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29706:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "29706:51:0"
											},
											{
												"expression": {
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1309,
														"name": "Coin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "29768:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Token_$895",
															"typeString": "contract Token"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1311,
																"name": "_Coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "29781:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Token_$895",
																	"typeString": "contract Token"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Token_$895",
																	"typeString": "contract Token"
																}
															],
															"id": 1310,
															"name": "Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "29775:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Token_$895_$",
																"typeString": "type(contract Token)"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29775:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Token_$895",
															"typeString": "contract Token"
														}
													},
													"src": "29768:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Token_$895",
														"typeString": "contract Token"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "29768:19:0"
											},
											{
												"expression": {
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1315,
														"name": "AdminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "29798:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1318,
																"name": "_adminAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "29821:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1316,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29813:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29813:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29798:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "29798:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1325,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "29865:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29865:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1327,
															"name": "_adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "29874:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1328,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "29889:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1322,
															"name": "Coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "29846:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Token_$895",
																"typeString": "contract Token"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "29846:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29846:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "29846:50:0"
											},
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1331,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "29907:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29921:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29907:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "29907:18:0"
											}
										]
									},
									"functionSelector": "1794bb3c",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1300,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1299,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 752,
												"src": "29685:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29685:9:0"
										}
									],
									"name": "initialize",
									"nameLocation": "29581:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "_Coin",
												"nameLocation": "29608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "29602:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Token_$895",
													"typeString": "contract Token"
												},
												"typeName": {
													"id": 1292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1291,
														"name": "Token",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 895,
														"src": "29602:5:0"
													},
													"referencedDeclaration": 895,
													"src": "29602:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Token_$895",
														"typeString": "contract Token"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "_adminAddress",
												"nameLocation": "29632:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "29624:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "29656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29591:86:0"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29695:0:0"
									},
									"scope": 1603,
									"src": "29572:361:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "29999:40:0",
										"statements": [
											{
												"expression": {
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1343,
														"name": "AdminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "30010:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1344,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "30025:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30010:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "30010:21:0"
											}
										]
									},
									"functionSelector": "2c1e816d",
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1340,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 752,
												"src": "29989:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29989:9:0"
										}
									],
									"name": "setAdminAddress",
									"nameLocation": "29950:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "29974:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "29966:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29965:16:0"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29999:0:0"
									},
									"scope": 1603,
									"src": "29941:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "30103:36:0",
										"statements": [
											{
												"expression": {
													"id": 1353,
													"name": "investerID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1217,
													"src": "30121:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1352,
												"id": 1354,
												"nodeType": "Return",
												"src": "30114:17:0"
											}
										]
									},
									"functionSelector": "af0afec9",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalInvesters",
									"nameLocation": "30056:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30070:2:0"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "30094:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30093:9:0"
									},
									"scope": 1603,
									"src": "30047:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "30222:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1364,
														"name": "getIDByAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "30240:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1366,
													"indexExpression": {
														"id": 1365,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "30255:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30240:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1367,
												"nodeType": "Return",
												"src": "30233:27:0"
											}
										]
									},
									"functionSelector": "5f4fd1f7",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIdsOfUser",
									"nameLocation": "30156:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "30169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30168:14:0"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "30204:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1360,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30204:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1361,
													"nodeType": "ArrayTypeName",
													"src": "30204:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30203:18:0"
									},
									"scope": 1603,
									"src": "30147:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "30339:1621:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1377,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "30358:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "30358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1379,
																"name": "AdminAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "30372:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30358:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792041646d696e2063616e206d616b65207472616e73616374696f6e",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30386:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_984b08bfca7f9e2d67cc5a731b5813befd8d3b31da6c382bcc4828bf982266fd",
																"typeString": "literal_string \"Only Admin can make transaction\""
															},
															"value": "Only Admin can make transaction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_984b08bfca7f9e2d67cc5a731b5813befd8d3b31da6c382bcc4828bf982266fd",
																"typeString": "literal_string \"Only Admin can make transaction\""
															}
														],
														"id": 1376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30350:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "30350:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1387,
																		"name": "AdminAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1212,
																		"src": "30466:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1385,
																		"name": "Coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "30453:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Token_$895",
																			"typeString": "contract Token"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 852,
																	"src": "30453:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30453:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1389,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "30482:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30453:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a2041646d696e20646f6573206e6f74206861766520656e6f7567682062616c616e6365",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30503:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0",
																"typeString": "literal_string \"Error: Admin does not have enough balance\""
															},
															"value": "Error: Admin does not have enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0",
																"typeString": "literal_string \"Error: Admin does not have enough balance\""
															}
														],
														"id": 1384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30431:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "30431:126:0"
											},
											{
												"id": 1397,
												"nodeType": "UncheckedBlock",
												"src": "30568:49:0",
												"statements": [
													{
														"expression": {
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "30593:12:0",
															"subExpression": {
																"id": 1394,
																"name": "investerID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "30593:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1396,
														"nodeType": "ExpressionStatement",
														"src": "30593:12:0"
													}
												]
											},
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "30635:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1593,
														"src": "30627:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30627:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1401,
												"initialValue": {
													"id": 1400,
													"name": "investerID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1217,
													"src": "30640:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30627:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1406,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "30695:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1402,
																"name": "getIDByAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "30669:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1404,
															"indexExpression": {
																"id": 1403,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "30684:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30669:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "30669:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30669:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "30669:29:0"
											},
											{
												"expression": {
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1409,
															"name": "burningAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "30709:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1411,
														"indexExpression": {
															"id": 1410,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "30723:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30709:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "31",
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30730:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1413,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "30734:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30730:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1415,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "30729:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30744:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "30729:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30709:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "30709:38:0"
											},
											{
												"expression": {
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1420,
															"name": "amountAfterBurning",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "30758:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1422,
														"indexExpression": {
															"id": 1421,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "30777:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30758:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1425,
																	"name": "burningAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "30794:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1427,
																"indexExpression": {
																	"id": 1426,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "30808:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30794:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1423,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "30783:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1084,
															"src": "30783:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30783:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30758:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "30758:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "AdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "30842:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "30856:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1436,
																"name": "amountAfterBurning",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "30862:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1438,
															"indexExpression": {
																"id": 1437,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "30881:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30862:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1431,
															"name": "Coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "30823:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Token_$895",
																"typeString": "contract Token"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "30823:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30823:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "30823:62:0"
											},
											{
												"expression": {
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1441,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "30898:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1444,
																"indexExpression": {
																	"id": 1442,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "30906:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30898:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1445,
															"indexExpression": {
																"id": 1443,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "30912:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30898:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1258_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1245,
														"src": "30898:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1447,
														"name": "investerID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "30921:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30898:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "30898:33:0"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1450,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "30942:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1453,
																"indexExpression": {
																	"id": 1451,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "30950:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30942:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1454,
															"indexExpression": {
																"id": 1452,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "30956:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30942:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1258_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "buyTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1247,
														"src": "30942:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1456,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "30970:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30942:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "30942:43:0"
											},
											{
												"expression": {
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1460,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "30996:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1463,
																"indexExpression": {
																	"id": 1461,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "31004:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30996:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1464,
															"indexExpression": {
																"id": 1462,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "31010:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30996:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1258_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "purchaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1249,
														"src": "30996:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1466,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "31030:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30996:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "30996:40:0"
											},
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1469,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "31047:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1472,
																"indexExpression": {
																	"id": 1470,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "31055:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31047:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1473,
															"indexExpression": {
																"id": 1471,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "31061:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31047:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1258_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burnToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1251,
														"src": "31047:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1475,
															"name": "burningAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "31077:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1477,
														"indexExpression": {
															"id": 1476,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "31091:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31077:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31047:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "31047:47:0"
											},
											{
												"expression": {
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1480,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "31105:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1483,
																"indexExpression": {
																	"id": 1481,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "31113:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31105:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1484,
															"indexExpression": {
																"id": 1482,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "31119:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31105:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1258_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "userGets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1253,
														"src": "31105:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1486,
															"name": "amountAfterBurning",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "31134:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1488,
														"indexExpression": {
															"id": 1487,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "31153:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31134:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31105:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "31105:51:0"
											},
											{
												"expression": {
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1491,
															"name": "ownerSurplusToAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "31167:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1493,
														"indexExpression": {
															"id": 1492,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "31187:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31167:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31220:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1494,
																	"name": "amountAfterBurning",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "31193:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1496,
																"indexExpression": {
																	"id": 1495,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "31212:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31193:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1114,
															"src": "31193:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31193:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31167:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "31167:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1505,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "31268:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31268:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1503,
																		"name": "Coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "31255:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Token_$895",
																			"typeString": "contract Token"
																		}
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 852,
																	"src": "31255:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31255:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"baseExpression": {
																	"id": 1508,
																	"name": "ownerSurplusToAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "31279:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1510,
																"indexExpression": {
																	"id": 1509,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "31299:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31279:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31255:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a204f776e657220646f6573206e6f74206861766520656e6f7567682062616c616e6365",
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31317:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098",
																"typeString": "literal_string \"Error: Owner does not have enough balance\""
															},
															"value": "Error: Owner does not have enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098",
																"typeString": "literal_string \"Error: Owner does not have enough balance\""
															}
														],
														"id": 1502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31233:138:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "31233:138:0"
											},
											{
												"expression": {
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1515,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "31382:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1518,
																"indexExpression": {
																	"id": 1516,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "31390:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31382:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1519,
															"indexExpression": {
																"id": 1517,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "31396:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31382:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1258_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ownerSurplus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1255,
														"src": "31382:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1521,
															"name": "ownerSurplusToAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "31415:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1523,
														"indexExpression": {
															"id": 1522,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "31435:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31415:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31382:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "31382:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1529,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "31468:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31468:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1531,
															"name": "AdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "31477:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1532,
																"name": "ownerSurplusToAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "31491:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1534,
															"indexExpression": {
																"id": 1533,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "31511:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31491:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1526,
															"name": "Coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "31449:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Token_$895",
																"typeString": "contract Token"
															}
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "31449:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31449:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "31449:66:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1537,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31526:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "31526:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "31303030303030303030",
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31573:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1000000000"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																}
															],
															"expression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31540:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1541,
																				"name": "ownerSurplusToAdmin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1243,
																				"src": "31544:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1543,
																			"indexExpression": {
																				"id": 1542,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1399,
																				"src": "31564:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "31544:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31540:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "31539:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1114,
															"src": "31539:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31539:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31526:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "31526:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1557,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31621:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "31621:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1553,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "31603:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31603:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31595:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1551,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31595:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31595:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "31595:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31595:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "31595:36:0"
											},
											{
												"expression": {
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1561,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "31642:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1564,
																"indexExpression": {
																	"id": 1562,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "31650:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31642:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1258_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1565,
															"indexExpression": {
																"id": 1563,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "31656:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31642:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1258_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "BNBchargedByAdmin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1257,
														"src": "31642:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1567,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31680:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "31680:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31642:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "31642:47:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1572,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "31730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1573,
															"name": "AdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "31736:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1574,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "31750:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31750:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1571,
														"name": "buyTokenDetailsAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "31705:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31705:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "EmitStatement",
												"src": "31700:58:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1579,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "31804:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1580,
																"name": "burningAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "31825:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1582,
															"indexExpression": {
																"id": 1581,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "31839:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31825:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1583,
																"name": "amountAfterBurning",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "31857:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1585,
															"indexExpression": {
																"id": 1584,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "31876:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31857:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1586,
																"name": "ownerSurplusToAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "31894:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1588,
															"indexExpression": {
																"id": 1587,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "31914:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31894:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1589,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31932:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "31932:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1578,
														"name": "buyTokenDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "31774:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31774:178:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "EmitStatement",
												"src": "31769:183:0"
											}
										]
									},
									"functionSelector": "9134709e",
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "30285:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30302:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "30294:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30318:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "30310:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30293:30:0"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30339:0:0"
									},
									"scope": 1603,
									"src": "30276:1684:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ef4025816e2adaebc6e491a322497e5d2067b2f3aa8a2f9a73bda13ec867f2bf",
									"id": 1602,
									"name": "swapTokenBNB",
									"nameLocation": "31974:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "31995:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "31987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"indexed": false,
												"mutability": "mutable",
												"name": "ownerInitiative",
												"nameLocation": "32009:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "32001:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"indexed": false,
												"mutability": "mutable",
												"name": "BNB",
												"nameLocation": "32034:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "32026:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31986:52:0"
									},
									"src": "31968:71:0"
								}
							],
							"scope": 1604,
							"src": "28390:3652:0",
							"usedErrors": []
						}
					],
					"src": "151:31893:0"
				},
				"id": 0
			}
		}
	}
}