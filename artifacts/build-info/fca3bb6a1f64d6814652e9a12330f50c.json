{
	"id": "fca3bb6a1f64d6814652e9a12330f50c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"smartContract_flat.sol": {
				"content": "\r\n// File: contracts/Token/IERC20.sol\r\n//SPDX-License-Identifier: MIT\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.13;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\n// File: contracts/Token/extensions/IERC20Metadata.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.13;\r\n\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// File: contracts/Token/utils/Context.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.13;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: contracts/Token/ERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.13;\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint256 private _decimal;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(\r\n        string memory name_,\r\n        string memory symbol_,\r\n        uint256 decimal_\r\n    ) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _decimal = decimal_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 9;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(\r\n            currentAllowance >= subtractedValue,\r\n            \"ERC20: decreased allowance below zero\"\r\n        );\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(\r\n            fromBalance >= amount,\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(\r\n                currentAllowance >= amount,\r\n                \"ERC20: insufficient allowance\"\r\n            );\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n// File: contracts/Token/utils/Ownable.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// File: contracts/Token/Token.sol\r\n\r\n\r\n\r\n\r\npragma solidity ^0.8.13;\r\n\r\ncontract Token is Ownable, ERC20 {\r\n    uint256 public _totalSupply;\r\n\r\n    constructor() ERC20(\"COIN\", \"CN\", 9) {\r\n        _totalSupply = 100000000 * (10**9);\r\n        _mint(owner(), _totalSupply);\r\n    }\r\n\r\n    function balance(address account) public view returns (uint256) {\r\n        return balanceOf(account);\r\n    }\r\n\r\n    function transferPrice(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public {\r\n        _transfer(from, to, amount);\r\n    }\r\n\r\n    function mint(address account, uint256 amount) public {\r\n        _mint(account, amount);\r\n    }\r\n\r\n    function burn(address account, uint256 amount) public {\r\n        _burn(account, amount);\r\n    }\r\n}\r\n\r\n// File: contracts/Token/utils/SafeMath.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.13;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (bool, uint256)\r\n    {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n// File: contracts/smartContract.sol\r\n\r\n\r\npragma solidity ^0.8.13;\r\n\r\n\r\n\r\n\r\ncontract smartContract is Ownable {\r\n    using SafeMath for uint256;\r\n    address public AdminAddress;\r\n    Token public Coin;\r\n    uint256 investerID;\r\n    bool public initialized;\r\n\r\n    mapping(address => mapping(uint256 => purchaseInfo)) public buyInfo;\r\n    mapping(address => uint256[]) getIDByAddress;\r\n    mapping(uint256 => uint256) public burningAmount;\r\n    mapping(uint256 => uint256) public amountAfterBurning;\r\n    mapping(uint256 => uint256) public ownerSurplusToAdmin;\r\n\r\n    struct purchaseInfo {\r\n        uint256 ID;\r\n        uint256 buyTime;\r\n        uint256 purchaseToken;\r\n        uint256 burnToken;\r\n        uint256 userGets;\r\n        uint256 ownerSurplus;\r\n        uint256 BNBchargedByAdmin;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(AdminAddress == _msgSender(), \"Error: caller is not the Admin\");\r\n        _;\r\n    }\r\n\r\n    event buyTokenDetailsAddresses(\r\n        address user,\r\n        address AdminAddress,\r\n        address owner\r\n    );\r\n\r\n    event buyTokenDetails(\r\n        uint256 amount,\r\n        uint256 burningAmount,\r\n        uint256 amountAfterBurning\r\n    );\r\n\r\n    function initialize(\r\n        Token _Coin,\r\n        address _adminAddress,\r\n        uint256 amount\r\n    ) public onlyOwner {\r\n        require(initialized != true, \"Already Initialized\");\r\n        Coin = Token(_Coin);\r\n        AdminAddress = address(_adminAddress);\r\n        Coin.transferPrice(owner(), _adminAddress, amount);\r\n        initialized = true;\r\n    }\r\n\r\n    function setAdminAddress(address _admin) public onlyOwner {\r\n        AdminAddress = _admin;\r\n    }\r\n\r\n    function totalInvesters() public view returns (uint256) {\r\n        return investerID;\r\n    }\r\n\r\n    function getIdsOfUser(address user) public view returns (uint256[] memory) {\r\n        return getIDByAddress[user];\r\n    }\r\n\r\n    function buyToken(uint256 amount) public {\r\n        require(\r\n            Coin.balance(AdminAddress) > amount,\r\n            \"Error: Admin does not have enough balance\"\r\n        );\r\n        unchecked {\r\n            investerID++;\r\n        }\r\n        uint256 id = investerID;\r\n        burningAmount[id] = (1 * amount) / 100;\r\n        amountAfterBurning[id] = amount.sub(burningAmount[id]);\r\n        Coin.transferPrice(AdminAddress, msg.sender, amountAfterBurning[id]);\r\n\r\n        buyInfo[msg.sender][id].ID = investerID;\r\n        buyInfo[msg.sender][id].buyTime = block.timestamp;\r\n        buyInfo[msg.sender][id].purchaseToken = amount;\r\n        buyInfo[msg.sender][id].burnToken = burningAmount[id];\r\n        buyInfo[msg.sender][id].userGets = amountAfterBurning[id];\r\n        ownerSurplusToAdmin[id] = amountAfterBurning[id].div(2);\r\n        emit buyTokenDetailsAddresses(msg.sender, AdminAddress, owner());\r\n        emit buyTokenDetails(amount, burningAmount[id], amountAfterBurning[id]);\r\n    }\r\n\r\n    function swapTokenWithBNB(uint256 id, address user) public payable {\r\n        require(msg.sender == AdminAddress, \"Only Admin can Swap\");\r\n        require(\r\n            id == buyInfo[user][id].ID,\r\n            \"Error: Not a valid ID or Please buy some token\"\r\n        );\r\n        require(\r\n            Coin.balance(owner()) > ownerSurplusToAdmin[id],\r\n            \"Error: Owner does not have enough balance\"\r\n        );\r\n        buyInfo[msg.sender][id].ownerSurplus = ownerSurplusToAdmin[id];\r\n        Coin.transferPrice(owner(), AdminAddress, ownerSurplusToAdmin[id]);\r\n        msg.value == (1 * ownerSurplusToAdmin[id]).div(1000000000);\r\n        payable(owner()).transfer(msg.value);\r\n        buyInfo[msg.sender][id].BNBchargedByAdmin = msg.value;\r\n        emit swapTokenBNB(msg.sender, ownerSurplusToAdmin[id], msg.value);\r\n    }\r\n\r\n    event swapTokenBNB(address user, uint256 ownerInitiative, uint256 BNB);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"smartContract_flat.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x09539a5cabd66841a2605d3fa1ef89b588b23af3dc9c322a813bf493a14cc26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54daaa899e33e76d1cd8467d7f4dbf1d921e8b911e33531e4df2fa4fb94fc607\",\"dweb:/ipfs/QmSLtGWkaeZncBWBs3d7fGqvxLBkcmw3HJd9Lvc49XyPfM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "decimal_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smartContract_flat.sol\":5904:17956  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"smartContract_flat.sol\":6529:6727  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"smartContract_flat.sol\":6648:6661  _name = name_ */\n  dup3\n  mload\n  tag_6\n  swap1\n    /* \"smartContract_flat.sol\":6648:6653  _name */\n  0x03\n  swap1\n    /* \"smartContract_flat.sol\":6648:6661  _name = name_ */\n  0x20\n  dup7\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"smartContract_flat.sol\":6672:6689  _symbol = symbol_ */\n  dup2\n  mload\n  tag_8\n  swap1\n    /* \"smartContract_flat.sol\":6672:6679  _symbol */\n  0x04\n  swap1\n    /* \"smartContract_flat.sol\":6672:6689  _symbol = symbol_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"smartContract_flat.sol\":6700:6708  _decimal */\n  0x05\n    /* \"smartContract_flat.sol\":6700:6719  _decimal = decimal_ */\n  sstore\n  pop\n    /* \"smartContract_flat.sol\":5904:17956  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  tag_23\n  swap1\n  pop\n  jump\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1659   */\ntag_3:\n    /* \"#utility.yul\":1144:1150   */\n  0x00\n    /* \"#utility.yul\":1152:1158   */\n  dup1\n    /* \"#utility.yul\":1160:1166   */\n  0x00\n    /* \"#utility.yul\":1213:1215   */\n  0x60\n    /* \"#utility.yul\":1201:1210   */\n  dup5\n    /* \"#utility.yul\":1192:1199   */\n  dup7\n    /* \"#utility.yul\":1188:1211   */\n  sub\n    /* \"#utility.yul\":1184:1216   */\n  slt\n    /* \"#utility.yul\":1181:1233   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1229:1230   */\n  0x00\n    /* \"#utility.yul\":1226:1227   */\n  dup1\n    /* \"#utility.yul\":1219:1231   */\n  revert\n    /* \"#utility.yul\":1181:1233   */\ntag_37:\n    /* \"#utility.yul\":1256:1272   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1321:1335   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1318:1352   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1348:1349   */\n  0x00\n    /* \"#utility.yul\":1345:1346   */\n  dup1\n    /* \"#utility.yul\":1338:1350   */\n  revert\n    /* \"#utility.yul\":1318:1352   */\ntag_38:\n    /* \"#utility.yul\":1371:1432   */\n  tag_39\n    /* \"#utility.yul\":1424:1431   */\n  dup8\n    /* \"#utility.yul\":1415:1421   */\n  dup4\n    /* \"#utility.yul\":1404:1413   */\n  dup9\n    /* \"#utility.yul\":1400:1422   */\n  add\n    /* \"#utility.yul\":1371:1432   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1361:1432   */\n  swap5\n  pop\n    /* \"#utility.yul\":1478:1480   */\n  0x20\n    /* \"#utility.yul\":1467:1476   */\n  dup7\n    /* \"#utility.yul\":1463:1481   */\n  add\n    /* \"#utility.yul\":1457:1482   */\n  mload\n    /* \"#utility.yul\":1441:1482   */\n  swap2\n  pop\n    /* \"#utility.yul\":1507:1509   */\n  dup1\n    /* \"#utility.yul\":1497:1505   */\n  dup3\n    /* \"#utility.yul\":1494:1510   */\n  gt\n    /* \"#utility.yul\":1491:1527   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1523:1524   */\n  0x00\n    /* \"#utility.yul\":1520:1521   */\n  dup1\n    /* \"#utility.yul\":1513:1525   */\n  revert\n    /* \"#utility.yul\":1491:1527   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1546:1609   */\n  tag_41\n    /* \"#utility.yul\":1601:1608   */\n  dup7\n    /* \"#utility.yul\":1590:1598   */\n  dup3\n    /* \"#utility.yul\":1579:1588   */\n  dup8\n    /* \"#utility.yul\":1575:1599   */\n  add\n    /* \"#utility.yul\":1546:1609   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1536:1609   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1649:1651   */\n  0x40\n    /* \"#utility.yul\":1638:1647   */\n  dup5\n    /* \"#utility.yul\":1634:1652   */\n  add\n    /* \"#utility.yul\":1628:1653   */\n  mload\n    /* \"#utility.yul\":1618:1653   */\n  swap1\n  pop\n    /* \"#utility.yul\":1036:1659   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1664:2044   */\ntag_11:\n    /* \"#utility.yul\":1743:1744   */\n  0x01\n    /* \"#utility.yul\":1739:1751   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1786:1798   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1807:1868   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1861:1865   */\n  0x7f\n    /* \"#utility.yul\":1853:1859   */\n  dup3\n    /* \"#utility.yul\":1849:1866   */\n  and\n    /* \"#utility.yul\":1839:1866   */\n  swap2\n  pop\n    /* \"#utility.yul\":1807:1868   */\ntag_43:\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1906:1912   */\n  dup3\n    /* \"#utility.yul\":1903:1917   */\n  lt\n    /* \"#utility.yul\":1883:1901   */\n  dup2\n    /* \"#utility.yul\":1880:1918   */\n  sub\n    /* \"#utility.yul\":1877:2038   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1960:1970   */\n  0x4e487b71\n    /* \"#utility.yul\":1955:1958   */\n  0xe0\n    /* \"#utility.yul\":1951:1971   */\n  shl\n    /* \"#utility.yul\":1948:1949   */\n  0x00\n    /* \"#utility.yul\":1941:1972   */\n  mstore\n    /* \"#utility.yul\":1995:1999   */\n  0x22\n    /* \"#utility.yul\":1992:1993   */\n  0x04\n    /* \"#utility.yul\":1985:2000   */\n  mstore\n    /* \"#utility.yul\":2023:2027   */\n  0x24\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2013:2028   */\n  revert\n    /* \"#utility.yul\":1877:2038   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1664:2044   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"smartContract_flat.sol\":5904:17956  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"smartContract_flat.sol\":5904:17956  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"smartContract_flat.sol\":6797:6897  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smartContract_flat.sol\":9288:9530  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"smartContract_flat.sol\":9288:9530  function approve(address spender, uint256 amount)... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"smartContract_flat.sol\":7916:8024  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"smartContract_flat.sol\":8004:8016  _totalSupply */\n      sload(0x02)\n        /* \"smartContract_flat.sol\":7916:8024  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":7916:8024  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"smartContract_flat.sol\":10110:10405  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"smartContract_flat.sol\":7759:7851  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"smartContract_flat.sol\":7842:7843  9 */\n      0x09\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"smartContract_flat.sol\":7759:7851  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"smartContract_flat.sol\":10814:11084  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"smartContract_flat.sol\":8087:8264  function balanceOf(address account)... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":8238:8256  _balances[account] */\n      and\n        /* \"smartContract_flat.sol\":8206:8213  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":8238:8256  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"smartContract_flat.sol\":8087:8264  function balanceOf(address account)... */\n      jump\n        /* \"smartContract_flat.sol\":7016:7120  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"smartContract_flat.sol\":11587:12092  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"smartContract_flat.sol\":8470:8704  function transfer(address to, uint256 amount)... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"smartContract_flat.sol\":8767:8968  function allowance(address owner, address spender)... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"smartContract_flat.sol\":6797:6897  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"smartContract_flat.sol\":6851:6864  string memory */\n      0x60\n        /* \"smartContract_flat.sol\":6884:6889  _name */\n      0x03\n        /* \"smartContract_flat.sol\":6877:6889  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":6797:6897  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"smartContract_flat.sol\":9288:9530  function approve(address spender, uint256 amount)... */\n    tag_22:\n        /* \"smartContract_flat.sol\":9407:9411  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":9468:9500  _approve(owner, spender, amount) */\n      tag_73\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":9484:9491  spender */\n      dup6\n        /* \"smartContract_flat.sol\":9493:9499  amount */\n      dup6\n        /* \"smartContract_flat.sol\":9468:9476  _approve */\n      tag_74\n        /* \"smartContract_flat.sol\":9468:9500  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"smartContract_flat.sol\":9518:9522  true */\n      0x01\n      swap4\n        /* \"smartContract_flat.sol\":9288:9530  function approve(address spender, uint256 amount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":10110:10405  function transferFrom(... */\n    tag_32:\n        /* \"smartContract_flat.sol\":10241:10245  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":10299:10337  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"smartContract_flat.sol\":10315:10319  from */\n      dup6\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup3\n        /* \"smartContract_flat.sol\":10330:10336  amount */\n      dup6\n        /* \"smartContract_flat.sol\":10299:10314  _spendAllowance */\n      tag_79\n        /* \"smartContract_flat.sol\":10299:10337  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"smartContract_flat.sol\":10348:10375  _transfer(from, to, amount) */\n      tag_80\n        /* \"smartContract_flat.sol\":10358:10362  from */\n      dup6\n        /* \"smartContract_flat.sol\":10364:10366  to */\n      dup6\n        /* \"smartContract_flat.sol\":10368:10374  amount */\n      dup6\n        /* \"smartContract_flat.sol\":10348:10357  _transfer */\n      tag_81\n        /* \"smartContract_flat.sol\":10348:10375  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"smartContract_flat.sol\":10393:10397  true */\n      0x01\n      swap5\n        /* \"smartContract_flat.sol\":10110:10405  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":10814:11084  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_40:\n        /* \"smartContract_flat.sol\":10929:10933  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":10990:11054  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":11006:11013  spender */\n      dup6\n        /* \"smartContract_flat.sol\":11043:11053  addedValue */\n      dup6\n        /* \"smartContract_flat.sol\":11015:11040  allowance(owner, spender) */\n      tag_86\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup4\n        /* \"smartContract_flat.sol\":11006:11013  spender */\n      dup4\n        /* \"smartContract_flat.sol\":11015:11024  allowance */\n      tag_61\n        /* \"smartContract_flat.sol\":11015:11040  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"smartContract_flat.sol\":11015:11053  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"smartContract_flat.sol\":10990:10998  _approve */\n      tag_74\n        /* \"smartContract_flat.sol\":10990:11054  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":7016:7120  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"smartContract_flat.sol\":7072:7085  string memory */\n      0x60\n        /* \"smartContract_flat.sol\":7105:7112  _symbol */\n      0x04\n        /* \"smartContract_flat.sol\":7098:7112  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"smartContract_flat.sol\":11587:12092  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_52:\n        /* \"smartContract_flat.sol\":11707:11711  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":11707:11711  bool */\n      dup2\n        /* \"smartContract_flat.sol\":11795:11820  allowance(owner, spender) */\n      tag_98\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup3\n        /* \"smartContract_flat.sol\":11812:11819  spender */\n      dup7\n        /* \"smartContract_flat.sol\":11795:11804  allowance */\n      tag_61\n        /* \"smartContract_flat.sol\":11795:11820  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"smartContract_flat.sol\":11768:11820  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":11873:11888  subtractedValue */\n      dup4\n        /* \"smartContract_flat.sol\":11853:11869  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":11853:11888  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":11831:11953  require(... */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"smartContract_flat.sol\":11831:11953  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":11831:11953  require(... */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"smartContract_flat.sol\":11989:12049  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"smartContract_flat.sol\":11998:12003  owner */\n      dup3\n        /* \"smartContract_flat.sol\":12005:12012  spender */\n      dup7\n        /* \"smartContract_flat.sol\":12033:12048  subtractedValue */\n      dup7\n        /* \"smartContract_flat.sol\":12014:12030  currentAllowance */\n      dup5\n        /* \"smartContract_flat.sol\":12014:12048  currentAllowance - subtractedValue */\n      sub\n        /* \"smartContract_flat.sol\":11989:11997  _approve */\n      tag_74\n        /* \"smartContract_flat.sol\":11989:12049  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":8470:8704  function transfer(address to, uint256 amount)... */\n    tag_56:\n        /* \"smartContract_flat.sol\":8585:8589  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":8646:8674  _transfer(owner, to, amount) */\n      tag_73\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":8663:8665  to */\n      dup6\n        /* \"smartContract_flat.sol\":8667:8673  amount */\n      dup6\n        /* \"smartContract_flat.sol\":8646:8655  _transfer */\n      tag_81\n        /* \"smartContract_flat.sol\":8646:8674  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":8767:8968  function allowance(address owner, address spender)... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":8933:8951  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"smartContract_flat.sol\":8901:8908  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":8933:8951  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":8933:8944  _allowances */\n      0x01\n        /* \"smartContract_flat.sol\":8933:8951  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":8933:8960  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"smartContract_flat.sol\":8767:8968  function allowance(address owner, address spender)... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":15327:15707  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15463:15482  owner != address(0) */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":15455:15523  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"smartContract_flat.sol\":15455:15523  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":15455:15523  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"smartContract_flat.sol\":15455:15523  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15542:15563  spender != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":15534:15602  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"smartContract_flat.sol\":15534:15602  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":15534:15602  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"smartContract_flat.sol\":15534:15602  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15615:15633  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":15615:15626  _allowances */\n      0x01\n        /* \"smartContract_flat.sol\":15615:15633  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":15615:15642  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":15615:15651  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":15667:15699  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":15667:15699  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":15667:15699  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":15327:15707  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":15998:16500  function _spendAllowance(... */\n    tag_79:\n        /* \"smartContract_flat.sol\":16133:16157  uint256 currentAllowance */\n      0x00\n        /* \"smartContract_flat.sol\":16160:16185  allowance(owner, spender) */\n      tag_117\n        /* \"smartContract_flat.sol\":16170:16175  owner */\n      dup5\n        /* \"smartContract_flat.sol\":16177:16184  spender */\n      dup5\n        /* \"smartContract_flat.sol\":16160:16169  allowance */\n      tag_61\n        /* \"smartContract_flat.sol\":16160:16185  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"smartContract_flat.sol\":16133:16185  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"smartContract_flat.sol\":16200:16216  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":16200:16237  currentAllowance != type(uint256).max */\n      eq\n        /* \"smartContract_flat.sol\":16196:16493  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"smartContract_flat.sol\":16300:16306  amount */\n      dup2\n        /* \"smartContract_flat.sol\":16280:16296  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":16280:16306  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":16254:16371  require(... */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"smartContract_flat.sol\":16254:16371  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":16254:16371  require(... */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"smartContract_flat.sol\":16254:16371  require(... */\n    tag_119:\n        /* \"smartContract_flat.sol\":16415:16466  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"smartContract_flat.sol\":16424:16429  owner */\n      dup5\n        /* \"smartContract_flat.sol\":16431:16438  spender */\n      dup5\n        /* \"smartContract_flat.sol\":16459:16465  amount */\n      dup5\n        /* \"smartContract_flat.sol\":16440:16456  currentAllowance */\n      dup5\n        /* \"smartContract_flat.sol\":16440:16465  currentAllowance - amount */\n      sub\n        /* \"smartContract_flat.sol\":16415:16423  _approve */\n      tag_74\n        /* \"smartContract_flat.sol\":16415:16466  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"smartContract_flat.sol\":16122:16500  {... */\n      pop\n        /* \"smartContract_flat.sol\":15998:16500  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":12571:13279  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12702:12720  from != address(0) */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":12694:12762  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"smartContract_flat.sol\":12694:12762  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12694:12762  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"smartContract_flat.sol\":12694:12762  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12781:12797  to != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":12773:12837  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"smartContract_flat.sol\":12773:12837  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12773:12837  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"smartContract_flat.sol\":12773:12837  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12923:12938  _balances[from] */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":12901:12920  uint256 fromBalance */\n      0x00\n        /* \"smartContract_flat.sol\":12923:12938  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":12971:12992  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":12949:13058  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"smartContract_flat.sol\":12949:13058  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12949:13058  require(... */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"smartContract_flat.sol\":12949:13058  require(... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13094:13109  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"smartContract_flat.sol\":13094:13103  _balances */\n      0x00\n        /* \"smartContract_flat.sol\":13094:13109  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"smartContract_flat.sol\":13112:13132  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"smartContract_flat.sol\":13094:13132  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":13154:13167  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"smartContract_flat.sol\":13154:13177  _balances[to] += amount */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":13126:13132  amount */\n      dup5\n      swap3\n        /* \"smartContract_flat.sol\":13094:13103  _balances */\n      swap1\n        /* \"smartContract_flat.sol\":13154:13177  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"smartContract_flat.sol\":13126:13132  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":13154:13177  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smartContract_flat.sol\":13210:13212  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13195:13221  Transfer(from, to, amount) */\n      and\n        /* \"smartContract_flat.sol\":13204:13208  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13195:13221  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"smartContract_flat.sol\":13214:13220  amount */\n      dup5\n        /* \"smartContract_flat.sol\":13195:13221  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"smartContract_flat.sol\":13195:13221  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":13234:13271  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"smartContract_flat.sol\":17100:17225  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206d7269292cd30716935d340f64d6a4f8e72dae050b33f9a44e8a14a0de5e88d064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_170": {
									"entryPoint": null,
									"id": 170,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"extract_byte_array_length": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2046:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:1"
															},
															"nodeType": "YulIf",
															"src": "921:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1171:488:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1217:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1229:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1219:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1219:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1219:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1192:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1201:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1188:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1184:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:32:1"
															},
															"nodeType": "YulIf",
															"src": "1181:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1242:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1262:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1256:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1246:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1281:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1299:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1303:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1307:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1285:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1336:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1345:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1348:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1338:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1338:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1332:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1321:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:14:1"
															},
															"nodeType": "YulIf",
															"src": "1318:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1361:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1404:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1415:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1424:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1371:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1371:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1361:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1441:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1445:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1511:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1520:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1523:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1513:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1513:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1513:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1497:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1507:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1494:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:16:1"
															},
															"nodeType": "YulIf",
															"src": "1491:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1536:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1579:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1590:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1575:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1601:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1546:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1618:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1649:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1634:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1618:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1121:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1132:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1144:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1152:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1160:6:1",
														"type": ""
													}
												],
												"src": "1036:623:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1743:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1746:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1739:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1760:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1796:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1764:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1837:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1839:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1853:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1849:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1817:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1810:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:26:1"
															},
															"nodeType": "YulIf",
															"src": "1807:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1927:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1948:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1955:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1960:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1951:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1951:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1941:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1941:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1941:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1992:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1995:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1985:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1985:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1985:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2020:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2023:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2013:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2013:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1883:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1906:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1903:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1903:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1880:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:38:1"
															},
															"nodeType": "YulIf",
															"src": "1877:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1699:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1708:6:1",
														"type": ""
													}
												],
												"src": "1664:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b2438038062000b248339810160408190526200003491620001df565b8251620000499060039060208601906200006c565b5081516200005f9060049060208501906200006c565b50600555506200028e9050565b8280546200007a9062000252565b90600052602060002090601f0160209004810192826200009e5760008555620000e9565b82601f10620000b957805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e9578251825591602001919060010190620000cc565b50620000f7929150620000fb565b5090565b5b80821115620000f75760008155600101620000fc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013a57600080fd5b81516001600160401b038082111562000157576200015762000112565b604051601f8301601f19908116603f0116810190828211818310171562000182576200018262000112565b816040528381526020925086838588010111156200019f57600080fd5b600091505b83821015620001c35785820183015181830184015290820190620001a4565b83821115620001d55760008385830101525b9695505050505050565b600080600060608486031215620001f557600080fd5b83516001600160401b03808211156200020d57600080fd5b6200021b8783880162000128565b945060208601519150808211156200023257600080fd5b50620002418682870162000128565b925050604084015190509250925092565b600181811c908216806200026757607f821691505b6020821081036200028857634e487b7160e01b600052602260045260246000fd5b50919050565b610886806200029e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051600981526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212206d7269292cd30716935d340f64d6a4f8e72dae050b33f9a44e8a14a0de5e88d064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB24 CODESIZE SUB DUP1 PUSH3 0xB24 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DF JUMP JUMPDEST DUP3 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP PUSH1 0x5 SSTORE POP PUSH3 0x28E SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7A SWAP1 PUSH3 0x252 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCC JUMP JUMPDEST POP PUSH3 0xF7 SWAP3 SWAP2 POP PUSH3 0xFB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xFC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x157 PUSH3 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x182 JUMPI PUSH3 0x182 PUSH3 0x112 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1C3 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A4 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x21B DUP8 DUP4 DUP9 ADD PUSH3 0x128 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x241 DUP7 DUP3 DUP8 ADD PUSH3 0x128 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x267 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x288 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x886 DUP1 PUSH3 0x29E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x7269292CD30716935D340F64D6A4 0xF8 0xE7 0x2D 0xAE SDIV SIGNEXTEND CALLER 0xF9 LOG4 0x4E DUP11 EQ LOG0 0xDE 0x5E DUP9 0xD0 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "5904:12052:0:-:0;;;6529:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6648:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6672:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;6700:8:0;:19;-1:-1:-1;5904:12052:0;;-1:-1:-1;5904:12052:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5904:12052:0;;;-1:-1:-1;5904:12052:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:1:o;1036:623::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:1;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1536:73;;;1649:2;1638:9;1634:18;1628:25;1618:35;;1036:623;;;;;:::o;1664:380::-;1743:1;1739:12;;;;1786;;;1807:61;;1861:4;1853:6;1849:17;1839:27;;1807:61;1914:2;1906:6;1903:14;1883:18;1880:38;1877:161;;1960:10;1955:3;1951:20;1948:1;1941:31;1995:4;1992:1;1985:15;2023:4;2020:1;2013:15;1877:161;;1664:380;;;:::o;:::-;5904:12052:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_710": {
									"entryPoint": null,
									"id": 710,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_645": {
									"entryPoint": 856,
									"id": 645,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_688": {
									"entryPoint": 1148,
									"id": 688,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_472": {
									"entryPoint": 1270,
									"id": 472,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_267": {
									"entryPoint": 813,
									"id": 267,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_292": {
									"entryPoint": 562,
									"id": 292,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_395": {
									"entryPoint": 671,
									"id": 395,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_354": {
									"entryPoint": 622,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_180": {
									"entryPoint": 416,
									"id": 180,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_190": {
									"entryPoint": 656,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_210": {
									"entryPoint": null,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_325": {
									"entryPoint": 586,
									"id": 325,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_249": {
									"entryPoint": 799,
									"id": 249,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:1"
															},
															"nodeType": "YulIf",
															"src": "2237:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:1",
														"type": ""
													}
												],
												"src": "2140:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:1"
															},
															"nodeType": "YulIf",
															"src": "2548:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:1"
															},
															"nodeType": "YulIf",
															"src": "2618:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													}
												],
												"src": "2405:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:1"
															},
															"nodeType": "YulIf",
															"src": "2848:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:1",
														"type": ""
													}
												],
												"src": "2790:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:1",
														"type": ""
													}
												],
												"src": "3020:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:1",
														"type": ""
													}
												],
												"src": "3426:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:1",
														"type": ""
													}
												],
												"src": "3831:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:1",
														"type": ""
													}
												],
												"src": "4234:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:1",
														"type": ""
													}
												],
												"src": "4592:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:1",
														"type": ""
													}
												],
												"src": "4998:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:1",
														"type": ""
													}
												],
												"src": "5402:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051600981526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212206d7269292cd30716935d340f64d6a4f8e72dae050b33f9a44e8a14a0de5e88d064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x7269292CD30716935D340F64D6A4 0xF8 0xE7 0x2D 0xAE SDIV SIGNEXTEND CALLER 0xF9 LOG4 0x4E DUP11 EQ LOG0 0xDE 0x5E DUP9 0xD0 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "5904:12052:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6797:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9288:242;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;9288:242:0;1053:187:1;7916:108:0;8004:12;;7916:108;;;1391:25:1;;;1379:2;1364:18;7916:108:0;1245:177:1;10110:295:0;;;;;;:::i;:::-;;:::i;7759:92::-;;;7842:1;1902:36:1;;1890:2;1875:18;7759:92:0;1760:184:1;10814:270:0;;;;;;:::i;:::-;;:::i;8087:177::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8238:18:0;8206:7;8238:18;;;;;;;;;;;;8087:177;7016:104;;;:::i;11587:505::-;;;;;;:::i;:::-;;:::i;8470:234::-;;;;;;:::i;:::-;;:::i;8767:201::-;;;;;;:::i;:::-;;:::i;6797:100::-;6851:13;6884:5;6877:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6797:100;:::o;9288:242::-;9407:4;4423:10;9468:32;4423:10;9484:7;9493:6;9468:8;:32::i;:::-;-1:-1:-1;9518:4:0;;9288:242;-1:-1:-1;;;9288:242:0:o;10110:295::-;10241:4;4423:10;10299:38;10315:4;4423:10;10330:6;10299:15;:38::i;:::-;10348:27;10358:4;10364:2;10368:6;10348:9;:27::i;:::-;-1:-1:-1;10393:4:0;;10110:295;-1:-1:-1;;;;10110:295:0:o;10814:270::-;10929:4;4423:10;10990:64;4423:10;11006:7;11043:10;11015:25;4423:10;11006:7;11015:9;:25::i;:::-;:38;;;;:::i;:::-;10990:8;:64::i;7016:104::-;7072:13;7105:7;7098:14;;;;;:::i;11587:505::-;11707:4;4423:10;11707:4;11795:25;4423:10;11812:7;11795:9;:25::i;:::-;11768:52;;11873:15;11853:16;:35;;11831:122;;;;-1:-1:-1;;;11831:122:0;;3222:2:1;11831:122:0;;;3204:21:1;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:1;;;3344:35;3396:19;;11831:122:0;;;;;;;;;11989:60;11998:5;12005:7;12033:15;12014:16;:34;11989:8;:60::i;8470:234::-;8585:4;4423:10;8646:28;4423:10;8663:2;8667:6;8646:9;:28::i;8767:201::-;-1:-1:-1;;;;;8933:18:0;;;8901:7;8933:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8767:201::o;15327:380::-;-1:-1:-1;;;;;15463:19:0;;15455:68;;;;-1:-1:-1;;;15455:68:0;;3628:2:1;15455:68:0;;;3610:21:1;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:1;;;3750:34;3801:19;;15455:68:0;3426:400:1;15455:68:0;-1:-1:-1;;;;;15542:21:0;;15534:68;;;;-1:-1:-1;;;15534:68:0;;4033:2:1;15534:68:0;;;4015:21:1;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:1;;;4155:32;4204:19;;15534:68:0;3831:398:1;15534:68:0;-1:-1:-1;;;;;15615:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15667:32;;1391:25:1;;;15667:32:0;;1364:18:1;15667:32:0;;;;;;;15327:380;;;:::o;15998:502::-;16133:24;16160:25;16170:5;16177:7;16160:9;:25::i;:::-;16133:52;;-1:-1:-1;;16200:16:0;:37;16196:297;;16300:6;16280:16;:26;;16254:117;;;;-1:-1:-1;;;16254:117:0;;4436:2:1;16254:117:0;;;4418:21:1;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;16254:117:0;4234:353:1;16254:117:0;16415:51;16424:5;16431:7;16459:6;16440:16;:25;16415:8;:51::i;:::-;16122:378;15998:502;;;:::o;12571:708::-;-1:-1:-1;;;;;12702:18:0;;12694:68;;;;-1:-1:-1;;;12694:68:0;;4794:2:1;12694:68:0;;;4776:21:1;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:1;;;4916:35;4968:19;;12694:68:0;4592:401:1;12694:68:0;-1:-1:-1;;;;;12781:16:0;;12773:64;;;;-1:-1:-1;;;12773:64:0;;5200:2:1;12773:64:0;;;5182:21:1;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:1;;;5322:33;5372:19;;12773:64:0;4998:399:1;12773:64:0;-1:-1:-1;;;;;12923:15:0;;12901:19;12923:15;;;;;;;;;;;12971:21;;;;12949:109;;;;-1:-1:-1;;;12949:109:0;;5604:2:1;12949:109:0;;;5586:21:1;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:1;;;5726:36;5779:19;;12949:109:0;5402:402:1;12949:109:0;-1:-1:-1;;;;;13094:15:0;;;:9;:15;;;;;;;;;;;13112:20;;;13094:38;;13154:13;;;;;;;;:23;;13126:6;;13094:9;13154:23;;13126:6;;13154:23;:::i;:::-;;;;;;;;13210:2;-1:-1:-1;;;;;13195:26:0;13204:4;-1:-1:-1;;;;;13195:26:0;;13214:6;13195:26;;;;1391:25:1;;1379:2;1364:18;;1245:177;13195:26:0;;;;;;;;13234:37;17100:125;14:597:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:1;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6653,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6648,
									"end": 6653,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6679,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6672,
									"end": 6679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6700,
									"end": 6708,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6700,
									"end": 6719,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1152,
									"end": 1158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1166,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1215,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1201,
									"end": 1210,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1199,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1211,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1184,
									"end": 1216,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1229,
									"end": 1230,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1226,
									"end": 1227,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1272,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 1335,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1335,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1335,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1349,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1350,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1424,
									"end": 1431,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1404,
									"end": 1413,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1400,
									"end": 1422,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1432,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1432,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1478,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1467,
									"end": 1476,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1457,
									"end": 1482,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1482,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1482,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1509,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1505,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1510,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1523,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1525,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1601,
									"end": 1608,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1590,
									"end": 1598,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1588,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1575,
									"end": 1599,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1609,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1649,
									"end": 1651,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1647,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1634,
									"end": 1652,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1628,
									"end": 1653,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1618,
									"end": 1653,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1618,
									"end": 1653,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1744,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1739,
									"end": 1751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1751,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1751,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1786,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1786,
									"end": 1798,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1786,
									"end": 1798,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1807,
									"end": 1868,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1861,
									"end": 1865,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1853,
									"end": 1859,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1849,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1839,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1839,
									"end": 1866,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1868,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1807,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1906,
									"end": 1912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1903,
									"end": 1917,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1901,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1880,
									"end": 1918,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1955,
									"end": 1958,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1951,
									"end": 1971,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1949,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1972,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 1999,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1992,
									"end": 1993,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2000,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2027,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2028,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 2038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1664,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5904,
									"end": 17956,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d7269292cd30716935d340f64d6a4f8e72dae050b33f9a44e8a14a0de5e88d064736f6c634300080d0033",
									".code": [
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 17956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8016,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8004,
											"end": 8016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7843,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6884,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9407,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9491,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9468,
											"end": 9500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9468,
											"end": 9500,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9468,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10299,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10315,
											"end": 10319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10330,
											"end": 10336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10299,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10299,
											"end": 10337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10299,
											"end": 10337,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10299,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10366,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10374,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10348,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10393,
											"end": 10397,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10393,
											"end": 10397,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10929,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10990,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11006,
											"end": 11013,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11006,
											"end": 11013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10990,
											"end": 10998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10990,
											"end": 11054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7072,
											"end": 7085,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7105,
											"end": 7112,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11707,
											"end": 11711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11707,
											"end": 11711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11812,
											"end": 11819,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11795,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11873,
											"end": 11888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11888,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11888,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11989,
											"end": 12049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11998,
											"end": 12003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12005,
											"end": 12012,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12033,
											"end": 12048,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12030,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11989,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11989,
											"end": 12049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8665,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8646,
											"end": 8674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15463,
											"end": 15482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15463,
											"end": 15482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15542,
											"end": 15563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15542,
											"end": 15563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16160,
											"end": 16185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16170,
											"end": 16175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16177,
											"end": 16184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16160,
											"end": 16185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16160,
											"end": 16185,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16160,
											"end": 16185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16200,
											"end": 16216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16200,
											"end": 16237,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16196,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16196,
											"end": 16493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16300,
											"end": 16306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16306,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16424,
											"end": 16429,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16431,
											"end": 16438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16456,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16415,
											"end": 16466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16415,
											"end": 16466,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16415,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16122,
											"end": 16500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12571,
											"end": 13279,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12571,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12781,
											"end": 12797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12901,
											"end": 12920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12992,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13132,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13132,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13132,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13132,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13204,
											"end": 13208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13214,
											"end": 13220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13234,
											"end": 13271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17100,
											"end": 17225,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimal_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x09539a5cabd66841a2605d3fa1ef89b588b23af3dc9c322a813bf493a14cc26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54daaa899e33e76d1cd8467d7f4dbf1d921e8b911e33531e4df2fa4fb94fc607\",\"dweb:/ipfs/QmSLtGWkaeZncBWBs3d7fGqvxLBkcmw3HJd9Lvc49XyPfM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 147,
								"contract": "smartContract_flat.sol:ERC20",
								"label": "_decimal",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x09539a5cabd66841a2605d3fa1ef89b588b23af3dc9c322a813bf493a14cc26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54daaa899e33e76d1cd8467d7f4dbf1d921e8b911e33531e4df2fa4fb94fc607\",\"dweb:/ipfs/QmSLtGWkaeZncBWBs3d7fGqvxLBkcmw3HJd9Lvc49XyPfM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x09539a5cabd66841a2605d3fa1ef89b588b23af3dc9c322a813bf493a14cc26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54daaa899e33e76d1cd8467d7f4dbf1d921e8b911e33531e4df2fa4fb94fc607\",\"dweb:/ipfs/QmSLtGWkaeZncBWBs3d7fGqvxLBkcmw3HJd9Lvc49XyPfM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x09539a5cabd66841a2605d3fa1ef89b588b23af3dc9c322a813bf493a14cc26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54daaa899e33e76d1cd8467d7f4dbf1d921e8b911e33531e4df2fa4fb94fc607\",\"dweb:/ipfs/QmSLtGWkaeZncBWBs3d7fGqvxLBkcmw3HJd9Lvc49XyPfM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 717,
								"contract": "smartContract_flat.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smartContract_flat.sol\":21808:28479  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"smartContract_flat.sol\":21808:28479  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0ec0d348b08251f38fcd3162eaef812597402943685bb423596227864ddb08064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0ec0d348b08251f38fcd3162eaef812597402943685bb423596227864ddb08064736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xEC 0xD CALLVALUE DUP12 ADDMOD 0x25 0x1F CODESIZE 0xFC 0xD3 AND 0x2E 0xAE 0xF8 SLT MSIZE PUSH21 0x2943685BB423596227864DDB08064736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "21808:6671:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;21808:6671:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0ec0d348b08251f38fcd3162eaef812597402943685bb423596227864ddb08064736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xEC 0xD CALLVALUE DUP12 ADDMOD 0x25 0x1F CODESIZE 0xFC 0xD3 AND 0x2E 0xAE 0xF8 SLT MSIZE PUSH21 0x2943685BB423596227864DDB08064736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "21808:6671:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 28479,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0ec0d348b08251f38fcd3162eaef812597402943685bb423596227864ddb08064736f6c634300080d0033",
									".code": [
										{
											"begin": 21808,
											"end": 28479,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 28479,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 28479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 28479,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21808,
											"end": 28479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21808,
											"end": 28479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 28479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 28479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 28479,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x09539a5cabd66841a2605d3fa1ef89b588b23af3dc9c322a813bf493a14cc26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54daaa899e33e76d1cd8467d7f4dbf1d921e8b911e33531e4df2fa4fb94fc607\",\"dweb:/ipfs/QmSLtGWkaeZncBWBs3d7fGqvxLBkcmw3HJd9Lvc49XyPfM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smartContract_flat.sol\":20615:21305  contract Token is Ownable, ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"smartContract_flat.sol\":20691:20820  constructor() ERC20(\"COIN\", \"CN\", 9) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"smartContract_flat.sol\":6529:6727  constructor(... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe1, 0x21a7a4a7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf1, 0x21a7)\n  dup2\n  mstore\n  pop\n    /* \"smartContract_flat.sol\":20725:20726  9 */\n  0x09\n    /* \"smartContract_flat.sol\":18917:18949  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"smartContract_flat.sol\":18936:18948  _msgSender() */\n  tag_7\n    /* \"smartContract_flat.sol\":18936:18946  _msgSender */\n  shl(0x20, tag_8)\n    /* \"smartContract_flat.sol\":18936:18948  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"smartContract_flat.sol\":18917:18935  _transferOwnership */\n  tag_9\n    /* \"smartContract_flat.sol\":18917:18949  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"smartContract_flat.sol\":6648:6661  _name = name_ */\n  dup3\n  mload\n  tag_11\n  swap1\n    /* \"smartContract_flat.sol\":6648:6653  _name */\n  0x04\n  swap1\n    /* \"smartContract_flat.sol\":6648:6661  _name = name_ */\n  0x20\n  dup7\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"smartContract_flat.sol\":6672:6689  _symbol = symbol_ */\n  dup2\n  mload\n  tag_13\n  swap1\n    /* \"smartContract_flat.sol\":6672:6679  _symbol */\n  0x05\n  swap1\n    /* \"smartContract_flat.sol\":6672:6689  _symbol = symbol_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"smartContract_flat.sol\":6700:6708  _decimal */\n  0x06\n    /* \"smartContract_flat.sol\":6700:6719  _decimal = decimal_ */\n  sstore\n  pop\n  pop\n    /* \"smartContract_flat.sol\":20754:20773  100000000 * (10**9) */\n  0x016345785d8a0000\n    /* \"smartContract_flat.sol\":20739:20751  _totalSupply */\n  0x07\n    /* \"smartContract_flat.sol\":20739:20773  _totalSupply = 100000000 * (10**9) */\n  sstore\n    /* \"smartContract_flat.sol\":20784:20812  _mint(owner(), _totalSupply) */\n  tag_15\n    /* \"smartContract_flat.sol\":20790:20797  owner() */\n  tag_16\n    /* \"smartContract_flat.sol\":19084:19091  address */\n  0x00\n    /* \"smartContract_flat.sol\":19111:19117  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n  jump\n    /* \"smartContract_flat.sol\":20790:20797  owner() */\ntag_16:\n    /* \"smartContract_flat.sol\":20799:20811  _totalSupply */\n  sload(0x07)\n    /* \"smartContract_flat.sol\":20784:20789  _mint */\n  tag_18\n    /* \"smartContract_flat.sol\":20784:20812  _mint(owner(), _totalSupply) */\n  jump\t// in\ntag_15:\n    /* \"smartContract_flat.sol\":20615:21305  contract Token is Ownable, ERC20 {... */\n  jump(tag_49)\n    /* \"smartContract_flat.sol\":4343:4441  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n  caller\n  swap1\n    /* \"smartContract_flat.sol\":4343:4441  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"smartContract_flat.sol\":20345:20536  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"smartContract_flat.sol\":20419:20435  address oldOwner */\n  0x00\n    /* \"smartContract_flat.sol\":20438:20444  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":20455:20472  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"smartContract_flat.sol\":20438:20444  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"smartContract_flat.sol\":20419:20435  address oldOwner */\n  swap1\n    /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"smartContract_flat.sol\":20408:20536  {... */\n  pop\n    /* \"smartContract_flat.sol\":20345:20536  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"smartContract_flat.sol\":13566:13965  function _mint(address account, uint256 amount) internal virtual {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":13650:13671  account != address(0) */\n  dup3\n  and\n    /* \"smartContract_flat.sol\":13642:13707  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"smartContract_flat.sol\":13642:13707  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":345:363   */\n  0x64\n  add\n    /* \"smartContract_flat.sol\":13642:13707  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"smartContract_flat.sol\":13798:13804  amount */\n  dup1\n    /* \"smartContract_flat.sol\":13782:13794  _totalSupply */\n  0x03\n  0x00\n    /* \"smartContract_flat.sol\":13782:13804  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":13815:13833  _balances[account] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"smartContract_flat.sol\":13815:13824  _balances */\n  0x01\n    /* \"smartContract_flat.sol\":13815:13833  _balances[account] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"smartContract_flat.sol\":13815:13843  _balances[account] += amount */\n  dup1\n  sload\n    /* \"smartContract_flat.sol\":13837:13843  amount */\n  dup4\n  swap3\n    /* \"smartContract_flat.sol\":13815:13833  _balances[account] */\n  swap1\n    /* \"smartContract_flat.sol\":13815:13843  _balances[account] += amount */\n  tag_31\n  swap1\n    /* \"smartContract_flat.sol\":13837:13843  amount */\n  dup5\n  swap1\n    /* \"smartContract_flat.sol\":13815:13843  _balances[account] += amount */\n  tag_30\n  jump\t// in\ntag_31:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"smartContract_flat.sol\":13859:13896  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":750:775   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":13859:13896  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"smartContract_flat.sol\":13876:13877  0 */\n  0x00\n  swap1\n    /* \"smartContract_flat.sol\":13859:13896  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":738:740   */\n  0x20\n    /* \"#utility.yul\":723:741   */\n  add\n    /* \"smartContract_flat.sol\":13859:13896  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"smartContract_flat.sol\":13566:13965  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"smartContract_flat.sol\":20615:21305  contract Token is Ownable, ERC20 {... */\ntag_12:\n  dup3\n  dup1\n  sload\n  tag_38\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_41\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_44)\ntag_41:\n  dup3\n  0x1f\n  lt\n  tag_42\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_44)\ntag_42:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_44\n  jumpi\n  swap2\n  dup3\n  add\ntag_43:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_44\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_43)\ntag_44:\n  pop\n  tag_45\n  swap3\n  swap2\n  pop\n  tag_46\n  jump\t// in\ntag_45:\n  pop\n  swap1\n  jump\t// out\ntag_46:\ntag_47:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_45\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_47)\n    /* \"#utility.yul\":374:599   */\ntag_30:\n    /* \"#utility.yul\":414:417   */\n  0x00\n    /* \"#utility.yul\":445:446   */\n  dup3\n    /* \"#utility.yul\":441:447   */\n  not\n    /* \"#utility.yul\":438:439   */\n  dup3\n    /* \"#utility.yul\":435:448   */\n  gt\n    /* \"#utility.yul\":432:568   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":490:500   */\n  0x4e487b71\n    /* \"#utility.yul\":485:488   */\n  0xe0\n    /* \"#utility.yul\":481:501   */\n  shl\n    /* \"#utility.yul\":478:479   */\n  0x00\n    /* \"#utility.yul\":471:502   */\n  mstore\n    /* \"#utility.yul\":525:529   */\n  0x11\n    /* \"#utility.yul\":522:523   */\n  0x04\n    /* \"#utility.yul\":515:530   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x24\n    /* \"#utility.yul\":550:551   */\n  0x00\n    /* \"#utility.yul\":543:558   */\n  revert\n    /* \"#utility.yul\":432:568   */\ntag_52:\n  pop\n    /* \"#utility.yul\":584:593   */\n  add\n  swap1\n    /* \"#utility.yul\":374:599   */\n  jump\t// out\n    /* \"#utility.yul\":786:1166   */\ntag_39:\n    /* \"#utility.yul\":865:866   */\n  0x01\n    /* \"#utility.yul\":861:873   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":908:920   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":929:990   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":983:987   */\n  0x7f\n    /* \"#utility.yul\":975:981   */\n  dup3\n    /* \"#utility.yul\":971:988   */\n  and\n    /* \"#utility.yul\":961:988   */\n  swap2\n  pop\n    /* \"#utility.yul\":929:990   */\ntag_55:\n    /* \"#utility.yul\":1036:1038   */\n  0x20\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1025:1039   */\n  lt\n    /* \"#utility.yul\":1005:1023   */\n  dup2\n    /* \"#utility.yul\":1002:1040   */\n  sub\n    /* \"#utility.yul\":999:1160   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1082:1092   */\n  0x4e487b71\n    /* \"#utility.yul\":1077:1080   */\n  0xe0\n    /* \"#utility.yul\":1073:1093   */\n  shl\n    /* \"#utility.yul\":1070:1071   */\n  0x00\n    /* \"#utility.yul\":1063:1094   */\n  mstore\n    /* \"#utility.yul\":1117:1121   */\n  0x22\n    /* \"#utility.yul\":1114:1115   */\n  0x04\n    /* \"#utility.yul\":1107:1122   */\n  mstore\n    /* \"#utility.yul\":1145:1149   */\n  0x24\n    /* \"#utility.yul\":1142:1143   */\n  0x00\n    /* \"#utility.yul\":1135:1150   */\n  revert\n    /* \"#utility.yul\":999:1160   */\ntag_56:\n  pop\n    /* \"#utility.yul\":786:1166   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_49:\n    /* \"smartContract_flat.sol\":20615:21305  contract Token is Ownable, ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"smartContract_flat.sol\":20615:21305  contract Token is Ownable, ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb45ee9ef\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe3d670d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"smartContract_flat.sol\":6797:6897  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smartContract_flat.sol\":9288:9530  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"smartContract_flat.sol\":9288:9530  function approve(address spender, uint256 amount)... */\n      tag_27\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"smartContract_flat.sol\":7916:8024  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"smartContract_flat.sol\":8004:8016  _totalSupply */\n      sload(0x03)\n        /* \"smartContract_flat.sol\":7916:8024  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":7916:8024  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_27\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"smartContract_flat.sol\":10110:10405  function transferFrom(... */\n    tag_6:\n      tag_29\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"smartContract_flat.sol\":7759:7851  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"smartContract_flat.sol\":7842:7843  9 */\n      0x09\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"smartContract_flat.sol\":7759:7851  function decimals() public view virtual override returns (uint8) {... */\n      tag_27\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"smartContract_flat.sol\":10814:11084  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_29\n      tag_49\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"smartContract_flat.sol\":20655:20682  uint256 public _totalSupply */\n    tag_9:\n      tag_35\n      sload(0x07)\n      dup2\n      jump\n        /* \"smartContract_flat.sol\":21104:21199  function mint(address account, uint256 amount) public {... */\n    tag_10:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"smartContract_flat.sol\":8087:8264  function balanceOf(address account)... */\n    tag_11:\n      tag_35\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":8238:8256  _balances[account] */\n      and\n        /* \"smartContract_flat.sol\":8206:8213  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":8238:8256  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":8238:8247  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":8238:8256  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"smartContract_flat.sol\":8087:8264  function balanceOf(address account)... */\n      jump\n        /* \"smartContract_flat.sol\":19689:19792  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_55\n      tag_64\n      jump\t// in\n        /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n        /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2286:2337   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2274:2276   */\n      0x20\n        /* \"#utility.yul\":2259:2277   */\n      add\n        /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":2140:2343   */\n      jump\n        /* \"smartContract_flat.sol\":7016:7120  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_25\n      tag_70\n      jump\t// in\n        /* \"smartContract_flat.sol\":21207:21302  function burn(address account, uint256 amount) public {... */\n    tag_15:\n      tag_55\n      tag_73\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"smartContract_flat.sol\":11587:12092  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_16:\n      tag_29\n      tag_76\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"smartContract_flat.sol\":8470:8704  function transfer(address to, uint256 amount)... */\n    tag_17:\n      tag_29\n      tag_80\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"smartContract_flat.sol\":20944:21096  function transferPrice(... */\n    tag_18:\n      tag_55\n      tag_84\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"smartContract_flat.sol\":8767:8968  function allowance(address owner, address spender)... */\n    tag_19:\n      tag_35\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"smartContract_flat.sol\":19947:20185  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_55\n      tag_96\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"smartContract_flat.sol\":6797:6897  function name() public view virtual override returns (string memory) {... */\n    tag_26:\n        /* \"smartContract_flat.sol\":6851:6864  string memory */\n      0x60\n        /* \"smartContract_flat.sol\":6884:6889  _name */\n      0x04\n        /* \"smartContract_flat.sol\":6877:6889  return _name */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_103\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_102)\n    tag_103:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_104:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_104\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":6797:6897  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"smartContract_flat.sol\":9288:9530  function approve(address spender, uint256 amount)... */\n    tag_32:\n        /* \"smartContract_flat.sol\":9407:9411  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":9468:9500  _approve(owner, spender, amount) */\n      tag_108\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":9484:9491  spender */\n      dup6\n        /* \"smartContract_flat.sol\":9493:9499  amount */\n      dup6\n        /* \"smartContract_flat.sol\":9468:9476  _approve */\n      tag_109\n        /* \"smartContract_flat.sol\":9468:9500  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_108:\n      pop\n        /* \"smartContract_flat.sol\":9518:9522  true */\n      0x01\n      swap4\n        /* \"smartContract_flat.sol\":9288:9530  function approve(address spender, uint256 amount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":10110:10405  function transferFrom(... */\n    tag_42:\n        /* \"smartContract_flat.sol\":10241:10245  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":10299:10337  _spendAllowance(from, spender, amount) */\n      tag_113\n        /* \"smartContract_flat.sol\":10315:10319  from */\n      dup6\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup3\n        /* \"smartContract_flat.sol\":10330:10336  amount */\n      dup6\n        /* \"smartContract_flat.sol\":10299:10314  _spendAllowance */\n      tag_114\n        /* \"smartContract_flat.sol\":10299:10337  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_113:\n        /* \"smartContract_flat.sol\":10348:10375  _transfer(from, to, amount) */\n      tag_115\n        /* \"smartContract_flat.sol\":10358:10362  from */\n      dup6\n        /* \"smartContract_flat.sol\":10364:10366  to */\n      dup6\n        /* \"smartContract_flat.sol\":10368:10374  amount */\n      dup6\n        /* \"smartContract_flat.sol\":10348:10357  _transfer */\n      tag_116\n        /* \"smartContract_flat.sol\":10348:10375  _transfer(from, to, amount) */\n      jump\t// in\n    tag_115:\n      pop\n        /* \"smartContract_flat.sol\":10393:10397  true */\n      0x01\n      swap5\n        /* \"smartContract_flat.sol\":10110:10405  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":10814:11084  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_50:\n        /* \"smartContract_flat.sol\":10929:10933  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":10990:11054  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_108\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":11006:11013  spender */\n      dup6\n        /* \"smartContract_flat.sol\":11043:11053  addedValue */\n      dup6\n        /* \"smartContract_flat.sol\":11015:11040  allowance(owner, spender) */\n      tag_121\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup4\n        /* \"smartContract_flat.sol\":11006:11013  spender */\n      dup4\n        /* \"smartContract_flat.sol\":11015:11024  allowance */\n      tag_89\n        /* \"smartContract_flat.sol\":11015:11040  allowance(owner, spender) */\n      jump\t// in\n    tag_121:\n        /* \"smartContract_flat.sol\":11015:11053  allowance(owner, spender) + addedValue */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"smartContract_flat.sol\":10990:10998  _approve */\n      tag_109\n        /* \"smartContract_flat.sol\":10990:11054  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":21104:21199  function mint(address account, uint256 amount) public {... */\n    tag_57:\n        /* \"smartContract_flat.sol\":21169:21191  _mint(account, amount) */\n      tag_125\n        /* \"smartContract_flat.sol\":21175:21182  account */\n      dup3\n        /* \"smartContract_flat.sol\":21184:21190  amount */\n      dup3\n        /* \"smartContract_flat.sol\":21169:21174  _mint */\n      tag_126\n        /* \"smartContract_flat.sol\":21169:21191  _mint(account, amount) */\n      jump\t// in\n    tag_125:\n        /* \"smartContract_flat.sol\":21104:21199  function mint(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":19689:19792  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19258:19281  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3465:3467   */\n      0x20\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3447:3468   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3484:3502   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3477:3507   */\n      mstore\n        /* \"#utility.yul\":3543:3577   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3523:3541   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3516:3578   */\n      mstore\n        /* \"#utility.yul\":3595:3613   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"smartContract_flat.sol\":19754:19784  _transferOwnership(address(0)) */\n      tag_135\n        /* \"smartContract_flat.sol\":19781:19782  0 */\n      0x00\n        /* \"smartContract_flat.sol\":19754:19772  _transferOwnership */\n      tag_136\n        /* \"smartContract_flat.sol\":19754:19784  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_135:\n        /* \"smartContract_flat.sol\":19689:19792  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":7016:7120  function symbol() public view virtual override returns (string memory) {... */\n    tag_70:\n        /* \"smartContract_flat.sol\":7072:7085  string memory */\n      0x60\n        /* \"smartContract_flat.sol\":7105:7112  _symbol */\n      0x05\n        /* \"smartContract_flat.sol\":7098:7112  return _symbol */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n        /* \"smartContract_flat.sol\":21207:21302  function burn(address account, uint256 amount) public {... */\n    tag_74:\n        /* \"smartContract_flat.sol\":21272:21294  _burn(account, amount) */\n      tag_125\n        /* \"smartContract_flat.sol\":21278:21285  account */\n      dup3\n        /* \"smartContract_flat.sol\":21287:21293  amount */\n      dup3\n        /* \"smartContract_flat.sol\":21272:21277  _burn */\n      tag_146\n        /* \"smartContract_flat.sol\":21272:21294  _burn(account, amount) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":11587:12092  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_77:\n        /* \"smartContract_flat.sol\":11707:11711  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":11707:11711  bool */\n      dup2\n        /* \"smartContract_flat.sol\":11795:11820  allowance(owner, spender) */\n      tag_149\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup3\n        /* \"smartContract_flat.sol\":11812:11819  spender */\n      dup7\n        /* \"smartContract_flat.sol\":11795:11804  allowance */\n      tag_89\n        /* \"smartContract_flat.sol\":11795:11820  allowance(owner, spender) */\n      jump\t// in\n    tag_149:\n        /* \"smartContract_flat.sol\":11768:11820  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":11873:11888  subtractedValue */\n      dup4\n        /* \"smartContract_flat.sol\":11853:11869  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":11853:11888  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":11831:11953  require(... */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3826:3828   */\n      0x20\n        /* \"smartContract_flat.sol\":11831:11953  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3808:3829   */\n      mstore\n        /* \"#utility.yul\":3865:3867   */\n      0x25\n        /* \"#utility.yul\":3845:3863   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3838:3868   */\n      mstore\n        /* \"#utility.yul\":3904:3938   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3884:3902   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3877:3939   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3955:3973   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3948:3983   */\n      mstore\n        /* \"#utility.yul\":4000:4019   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":11831:11953  require(... */\n      tag_132\n        /* \"#utility.yul\":3624:4025   */\n      jump\n        /* \"smartContract_flat.sol\":11831:11953  require(... */\n    tag_150:\n        /* \"smartContract_flat.sol\":11989:12049  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_115\n        /* \"smartContract_flat.sol\":11998:12003  owner */\n      dup3\n        /* \"smartContract_flat.sol\":12005:12012  spender */\n      dup7\n        /* \"smartContract_flat.sol\":12033:12048  subtractedValue */\n      dup7\n        /* \"smartContract_flat.sol\":12014:12030  currentAllowance */\n      dup5\n        /* \"smartContract_flat.sol\":12014:12048  currentAllowance - subtractedValue */\n      sub\n        /* \"smartContract_flat.sol\":11989:11997  _approve */\n      tag_109\n        /* \"smartContract_flat.sol\":11989:12049  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":8470:8704  function transfer(address to, uint256 amount)... */\n    tag_81:\n        /* \"smartContract_flat.sol\":8585:8589  bool */\n      0x00\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":8646:8674  _transfer(owner, to, amount) */\n      tag_108\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      dup2\n        /* \"smartContract_flat.sol\":8663:8665  to */\n      dup6\n        /* \"smartContract_flat.sol\":8667:8673  amount */\n      dup6\n        /* \"smartContract_flat.sol\":8646:8655  _transfer */\n      tag_116\n        /* \"smartContract_flat.sol\":8646:8674  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"smartContract_flat.sol\":20944:21096  function transferPrice(... */\n    tag_85:\n        /* \"smartContract_flat.sol\":21061:21088  _transfer(from, to, amount) */\n      tag_158\n        /* \"smartContract_flat.sol\":21071:21075  from */\n      dup4\n        /* \"smartContract_flat.sol\":21077:21079  to */\n      dup4\n        /* \"smartContract_flat.sol\":21081:21087  amount */\n      dup4\n        /* \"smartContract_flat.sol\":21061:21070  _transfer */\n      tag_116\n        /* \"smartContract_flat.sol\":21061:21088  _transfer(from, to, amount) */\n      jump\t// in\n    tag_158:\n        /* \"smartContract_flat.sol\":20944:21096  function transferPrice(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":8767:8968  function allowance(address owner, address spender)... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":8933:8951  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"smartContract_flat.sol\":8901:8908  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":8933:8951  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":8933:8944  _allowances */\n      0x02\n        /* \"smartContract_flat.sol\":8933:8951  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":8933:8960  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"smartContract_flat.sol\":8767:8968  function allowance(address owner, address spender)... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":19947:20185  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_97:\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19258:19281  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3465:3467   */\n      0x20\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3447:3468   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3484:3502   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3477:3507   */\n      mstore\n        /* \"#utility.yul\":3543:3577   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3523:3541   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3516:3578   */\n      mstore\n        /* \"#utility.yul\":3595:3613   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_132\n        /* \"#utility.yul\":3263:3619   */\n      jump\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":20050:20072  newOwner != address(0) */\n      dup2\n      and\n        /* \"smartContract_flat.sol\":20028:20138  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4232:4234   */\n      0x20\n        /* \"smartContract_flat.sol\":20028:20138  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4214:4235   */\n      mstore\n        /* \"#utility.yul\":4271:4273   */\n      0x26\n        /* \"#utility.yul\":4251:4269   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4244:4274   */\n      mstore\n        /* \"#utility.yul\":4310:4344   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4290:4308   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4283:4345   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4361:4379   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4354:4390   */\n      mstore\n        /* \"#utility.yul\":4407:4426   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":20028:20138  require(... */\n      tag_132\n        /* \"#utility.yul\":4030:4432   */\n      jump\n        /* \"smartContract_flat.sol\":20028:20138  require(... */\n    tag_168:\n        /* \"smartContract_flat.sol\":20149:20177  _transferOwnership(newOwner) */\n      tag_171\n        /* \"smartContract_flat.sol\":20168:20176  newOwner */\n      dup2\n        /* \"smartContract_flat.sol\":20149:20167  _transferOwnership */\n      tag_136\n        /* \"smartContract_flat.sol\":20149:20177  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_171:\n        /* \"smartContract_flat.sol\":19947:20185  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":15327:15707  function _approve(... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15463:15482  owner != address(0) */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":15455:15523  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4639:4641   */\n      0x20\n        /* \"smartContract_flat.sol\":15455:15523  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4621:4642   */\n      mstore\n        /* \"#utility.yul\":4678:4680   */\n      0x24\n        /* \"#utility.yul\":4658:4676   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4651:4681   */\n      mstore\n        /* \"#utility.yul\":4717:4751   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4697:4715   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4690:4752   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4768:4786   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4761:4795   */\n      mstore\n        /* \"#utility.yul\":4812:4831   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":15455:15523  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_132\n        /* \"#utility.yul\":4437:4837   */\n      jump\n        /* \"smartContract_flat.sol\":15455:15523  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15542:15563  spender != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":15534:15602  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5044:5046   */\n      0x20\n        /* \"smartContract_flat.sol\":15534:15602  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5026:5047   */\n      mstore\n        /* \"#utility.yul\":5083:5085   */\n      0x22\n        /* \"#utility.yul\":5063:5081   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5056:5086   */\n      mstore\n        /* \"#utility.yul\":5122:5156   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5102:5120   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5095:5157   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5173:5191   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5166:5198   */\n      mstore\n        /* \"#utility.yul\":5215:5234   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":15534:15602  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_132\n        /* \"#utility.yul\":4842:5240   */\n      jump\n        /* \"smartContract_flat.sol\":15534:15602  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":15615:15633  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":15615:15626  _allowances */\n      0x02\n        /* \"smartContract_flat.sol\":15615:15633  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":15615:15642  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":15615:15651  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":15667:15699  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":15667:15699  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":15667:15699  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":15327:15707  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":15998:16500  function _spendAllowance(... */\n    tag_114:\n        /* \"smartContract_flat.sol\":16133:16157  uint256 currentAllowance */\n      0x00\n        /* \"smartContract_flat.sol\":16160:16185  allowance(owner, spender) */\n      tag_182\n        /* \"smartContract_flat.sol\":16170:16175  owner */\n      dup5\n        /* \"smartContract_flat.sol\":16177:16184  spender */\n      dup5\n        /* \"smartContract_flat.sol\":16160:16169  allowance */\n      tag_89\n        /* \"smartContract_flat.sol\":16160:16185  allowance(owner, spender) */\n      jump\t// in\n    tag_182:\n        /* \"smartContract_flat.sol\":16133:16185  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"smartContract_flat.sol\":16200:16216  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":16200:16237  currentAllowance != type(uint256).max */\n      eq\n        /* \"smartContract_flat.sol\":16196:16493  if (currentAllowance != type(uint256).max) {... */\n      tag_187\n      jumpi\n        /* \"smartContract_flat.sol\":16300:16306  amount */\n      dup2\n        /* \"smartContract_flat.sol\":16280:16296  currentAllowance */\n      dup2\n        /* \"smartContract_flat.sol\":16280:16306  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":16254:16371  require(... */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5447:5449   */\n      0x20\n        /* \"smartContract_flat.sol\":16254:16371  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5429:5450   */\n      mstore\n        /* \"#utility.yul\":5486:5488   */\n      0x1d\n        /* \"#utility.yul\":5466:5484   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5459:5489   */\n      mstore\n        /* \"#utility.yul\":5525:5556   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":5505:5523   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5498:5557   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":16254:16371  require(... */\n      tag_132\n        /* \"#utility.yul\":5245:5598   */\n      jump\n        /* \"smartContract_flat.sol\":16254:16371  require(... */\n    tag_184:\n        /* \"smartContract_flat.sol\":16415:16466  _approve(owner, spender, currentAllowance - amount) */\n      tag_187\n        /* \"smartContract_flat.sol\":16424:16429  owner */\n      dup5\n        /* \"smartContract_flat.sol\":16431:16438  spender */\n      dup5\n        /* \"smartContract_flat.sol\":16459:16465  amount */\n      dup5\n        /* \"smartContract_flat.sol\":16440:16456  currentAllowance */\n      dup5\n        /* \"smartContract_flat.sol\":16440:16465  currentAllowance - amount */\n      sub\n        /* \"smartContract_flat.sol\":16415:16423  _approve */\n      tag_109\n        /* \"smartContract_flat.sol\":16415:16466  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_187:\n        /* \"smartContract_flat.sol\":16122:16500  {... */\n      pop\n        /* \"smartContract_flat.sol\":15998:16500  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":12571:13279  function _transfer(... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12702:12720  from != address(0) */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":12694:12762  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5805:5807   */\n      0x20\n        /* \"smartContract_flat.sol\":12694:12762  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5787:5808   */\n      mstore\n        /* \"#utility.yul\":5844:5846   */\n      0x25\n        /* \"#utility.yul\":5824:5842   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5817:5847   */\n      mstore\n        /* \"#utility.yul\":5883:5917   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5863:5881   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5856:5918   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5934:5952   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5927:5962   */\n      mstore\n        /* \"#utility.yul\":5979:5998   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12694:12762  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_132\n        /* \"#utility.yul\":5603:6004   */\n      jump\n        /* \"smartContract_flat.sol\":12694:12762  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12781:12797  to != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":12773:12837  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6211:6213   */\n      0x20\n        /* \"smartContract_flat.sol\":12773:12837  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6193:6214   */\n      mstore\n        /* \"#utility.yul\":6250:6252   */\n      0x23\n        /* \"#utility.yul\":6230:6248   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6223:6253   */\n      mstore\n        /* \"#utility.yul\":6289:6323   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6269:6287   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6262:6324   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6340:6358   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6333:6366   */\n      mstore\n        /* \"#utility.yul\":6383:6402   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12773:12837  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_132\n        /* \"#utility.yul\":6009:6408   */\n      jump\n        /* \"smartContract_flat.sol\":12773:12837  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":12923:12938  _balances[from] */\n      dup4\n      and\n        /* \"smartContract_flat.sol\":12901:12920  uint256 fromBalance */\n      0x00\n        /* \"smartContract_flat.sol\":12923:12938  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":12923:12932  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":12923:12938  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":12971:12992  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":12949:13058  require(... */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6615:6617   */\n      0x20\n        /* \"smartContract_flat.sol\":12949:13058  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6597:6618   */\n      mstore\n        /* \"#utility.yul\":6654:6656   */\n      0x26\n        /* \"#utility.yul\":6634:6652   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6627:6657   */\n      mstore\n        /* \"#utility.yul\":6693:6727   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6673:6691   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6666:6728   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":6744:6762   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6737:6773   */\n      mstore\n        /* \"#utility.yul\":6790:6809   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":12949:13058  require(... */\n      tag_132\n        /* \"#utility.yul\":6413:6815   */\n      jump\n        /* \"smartContract_flat.sol\":12949:13058  require(... */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13094:13109  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":13094:13103  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":13094:13109  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"smartContract_flat.sol\":13112:13132  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"smartContract_flat.sol\":13094:13132  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":13154:13167  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"smartContract_flat.sol\":13154:13177  _balances[to] += amount */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":13126:13132  amount */\n      dup5\n      swap3\n        /* \"smartContract_flat.sol\":13094:13109  _balances[from] */\n      swap1\n        /* \"smartContract_flat.sol\":13154:13177  _balances[to] += amount */\n      tag_200\n      swap1\n        /* \"smartContract_flat.sol\":13126:13132  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":13154:13177  _balances[to] += amount */\n      tag_123\n      jump\t// in\n    tag_200:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smartContract_flat.sol\":13210:13212  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13195:13221  Transfer(from, to, amount) */\n      and\n        /* \"smartContract_flat.sol\":13204:13208  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13195:13221  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"smartContract_flat.sol\":13214:13220  amount */\n      dup5\n        /* \"smartContract_flat.sol\":13195:13221  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_201\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"smartContract_flat.sol\":13195:13221  Transfer(from, to, amount) */\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":13234:13271  _afterTokenTransfer(from, to, amount) */\n      tag_187\n        /* \"smartContract_flat.sol\":20944:21096  function transferPrice(... */\n      jump\n        /* \"smartContract_flat.sol\":13566:13965  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13650:13671  account != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":13642:13707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7022:7024   */\n      0x20\n        /* \"smartContract_flat.sol\":13642:13707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7004:7025   */\n      mstore\n        /* \"#utility.yul\":7061:7063   */\n      0x1f\n        /* \"#utility.yul\":7041:7059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7034:7064   */\n      mstore\n        /* \"#utility.yul\":7100:7133   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7080:7098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7073:7134   */\n      mstore\n        /* \"#utility.yul\":7151:7169   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":13642:13707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_132\n        /* \"#utility.yul\":6820:7175   */\n      jump\n        /* \"smartContract_flat.sol\":13642:13707  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_205:\n        /* \"smartContract_flat.sol\":13798:13804  amount */\n      dup1\n        /* \"smartContract_flat.sol\":13782:13794  _totalSupply */\n      0x03\n      0x00\n        /* \"smartContract_flat.sol\":13782:13804  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13815:13833  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":13815:13824  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":13815:13833  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"smartContract_flat.sol\":13815:13843  _balances[account] += amount */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":13837:13843  amount */\n      dup4\n      swap3\n        /* \"smartContract_flat.sol\":13815:13833  _balances[account] */\n      swap1\n        /* \"smartContract_flat.sol\":13815:13843  _balances[account] += amount */\n      tag_210\n      swap1\n        /* \"smartContract_flat.sol\":13837:13843  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":13815:13843  _balances[account] += amount */\n      tag_123\n      jump\t// in\n    tag_210:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"smartContract_flat.sol\":13859:13896  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":13859:13896  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"smartContract_flat.sol\":13876:13877  0 */\n      0x00\n      swap1\n        /* \"smartContract_flat.sol\":13859:13896  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":13859:13896  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":21104:21199  function mint(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":20345:20536  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_136:\n        /* \"smartContract_flat.sol\":20419:20435  address oldOwner */\n      0x00\n        /* \"smartContract_flat.sol\":20438:20444  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":20455:20472  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"smartContract_flat.sol\":20438:20444  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"smartContract_flat.sol\":20419:20435  address oldOwner */\n      swap1\n        /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"smartContract_flat.sol\":20408:20536  {... */\n      pop\n        /* \"smartContract_flat.sol\":20345:20536  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":14298:14889  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":14382:14403  account != address(0) */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":14374:14441  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7382:7384   */\n      0x20\n        /* \"smartContract_flat.sol\":14374:14441  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7364:7385   */\n      mstore\n        /* \"#utility.yul\":7421:7423   */\n      0x21\n        /* \"#utility.yul\":7401:7419   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7394:7424   */\n      mstore\n        /* \"#utility.yul\":7460:7494   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":7440:7458   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7433:7495   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7511:7529   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7504:7535   */\n      mstore\n        /* \"#utility.yul\":7552:7571   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":14374:14441  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_132\n        /* \"#utility.yul\":7180:7577   */\n      jump\n        /* \"smartContract_flat.sol\":14374:14441  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":14541:14559  _balances[account] */\n      dup3\n      and\n        /* \"smartContract_flat.sol\":14516:14538  uint256 accountBalance */\n      0x00\n        /* \"smartContract_flat.sol\":14541:14559  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":14541:14550  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":14541:14559  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":14578:14602  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"smartContract_flat.sol\":14570:14641  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7784:7786   */\n      0x20\n        /* \"smartContract_flat.sol\":14570:14641  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7766:7787   */\n      mstore\n        /* \"#utility.yul\":7823:7825   */\n      0x22\n        /* \"#utility.yul\":7803:7821   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7796:7826   */\n      mstore\n        /* \"#utility.yul\":7862:7896   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":7842:7860   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7835:7897   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":7913:7931   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7906:7938   */\n      mstore\n        /* \"#utility.yul\":7955:7974   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":14570:14641  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_132\n        /* \"#utility.yul\":7582:7980   */\n      jump\n        /* \"smartContract_flat.sol\":14570:14641  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":14677:14695  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":14677:14686  _balances */\n      0x01\n        /* \"smartContract_flat.sol\":14677:14695  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"smartContract_flat.sol\":14698:14721  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"smartContract_flat.sol\":14677:14721  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":14743:14755  _totalSupply */\n      0x03\n        /* \"smartContract_flat.sol\":14743:14765  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":14715:14721  amount */\n      dup5\n      swap3\n        /* \"smartContract_flat.sol\":14677:14695  _balances[account] */\n      swap1\n        /* \"smartContract_flat.sol\":14743:14765  _totalSupply -= amount */\n      tag_222\n      swap1\n        /* \"smartContract_flat.sol\":14715:14721  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":14743:14765  _totalSupply -= amount */\n      tag_223\n      jump\t// in\n    tag_222:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"smartContract_flat.sol\":14783:14820  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":14809:14810  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":14783:14820  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"smartContract_flat.sol\":14783:14820  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smartContract_flat.sol\":20944:21096  function transferPrice(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_28:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_232:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_232)\n    tag_234:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_235:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_228:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_237:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_31:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_239:\n        /* \"#utility.yul\":962:991   */\n      tag_240\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_228\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_41:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_244:\n        /* \"#utility.yul\":1612:1641   */\n      tag_245\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_228\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_246\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_228\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_60:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_249:\n        /* \"#utility.yul\":2100:2129   */\n      tag_250\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_228\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2348:2608   */\n    tag_88:\n        /* \"#utility.yul\":2416:2422   */\n      0x00\n        /* \"#utility.yul\":2424:2430   */\n      dup1\n        /* \"#utility.yul\":2477:2479   */\n      0x40\n        /* \"#utility.yul\":2465:2474   */\n      dup4\n        /* \"#utility.yul\":2456:2463   */\n      dup6\n        /* \"#utility.yul\":2452:2475   */\n      sub\n        /* \"#utility.yul\":2448:2480   */\n      slt\n        /* \"#utility.yul\":2445:2497   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2493:2494   */\n      0x00\n        /* \"#utility.yul\":2490:2491   */\n      dup1\n        /* \"#utility.yul\":2483:2495   */\n      revert\n        /* \"#utility.yul\":2445:2497   */\n    tag_253:\n        /* \"#utility.yul\":2516:2545   */\n      tag_254\n        /* \"#utility.yul\":2535:2544   */\n      dup4\n        /* \"#utility.yul\":2516:2545   */\n      tag_228\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2506:2545   */\n      swap2\n      pop\n        /* \"#utility.yul\":2564:2602   */\n      tag_255\n        /* \"#utility.yul\":2598:2600   */\n      0x20\n        /* \"#utility.yul\":2587:2596   */\n      dup5\n        /* \"#utility.yul\":2583:2601   */\n      add\n        /* \"#utility.yul\":2564:2602   */\n      tag_228\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2554:2602   */\n      swap1\n      pop\n        /* \"#utility.yul\":2348:2608   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2613:2993   */\n    tag_100:\n        /* \"#utility.yul\":2692:2693   */\n      0x01\n        /* \"#utility.yul\":2688:2700   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2735:2747   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2756:2817   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2810:2814   */\n      0x7f\n        /* \"#utility.yul\":2802:2808   */\n      dup3\n        /* \"#utility.yul\":2798:2815   */\n      and\n        /* \"#utility.yul\":2788:2815   */\n      swap2\n      pop\n        /* \"#utility.yul\":2756:2817   */\n    tag_257:\n        /* \"#utility.yul\":2863:2865   */\n      0x20\n        /* \"#utility.yul\":2855:2861   */\n      dup3\n        /* \"#utility.yul\":2852:2866   */\n      lt\n        /* \"#utility.yul\":2832:2850   */\n      dup2\n        /* \"#utility.yul\":2829:2867   */\n      sub\n        /* \"#utility.yul\":2826:2987   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2909:2919   */\n      0x4e487b71\n        /* \"#utility.yul\":2904:2907   */\n      0xe0\n        /* \"#utility.yul\":2900:2920   */\n      shl\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2890:2921   */\n      mstore\n        /* \"#utility.yul\":2944:2948   */\n      0x22\n        /* \"#utility.yul\":2941:2942   */\n      0x04\n        /* \"#utility.yul\":2934:2949   */\n      mstore\n        /* \"#utility.yul\":2972:2976   */\n      0x24\n        /* \"#utility.yul\":2969:2970   */\n      0x00\n        /* \"#utility.yul\":2962:2977   */\n      revert\n        /* \"#utility.yul\":2826:2987   */\n    tag_258:\n      pop\n        /* \"#utility.yul\":2613:2993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3125   */\n    tag_229:\n        /* \"#utility.yul\":3059:3069   */\n      0x4e487b71\n        /* \"#utility.yul\":3054:3057   */\n      0xe0\n        /* \"#utility.yul\":3050:3070   */\n      shl\n        /* \"#utility.yul\":3047:3048   */\n      0x00\n        /* \"#utility.yul\":3040:3071   */\n      mstore\n        /* \"#utility.yul\":3090:3094   */\n      0x11\n        /* \"#utility.yul\":3087:3088   */\n      0x04\n        /* \"#utility.yul\":3080:3095   */\n      mstore\n        /* \"#utility.yul\":3114:3118   */\n      0x24\n        /* \"#utility.yul\":3111:3112   */\n      0x00\n        /* \"#utility.yul\":3104:3119   */\n      revert\n        /* \"#utility.yul\":3130:3258   */\n    tag_123:\n        /* \"#utility.yul\":3170:3173   */\n      0x00\n        /* \"#utility.yul\":3201:3202   */\n      dup3\n        /* \"#utility.yul\":3197:3203   */\n      not\n        /* \"#utility.yul\":3194:3195   */\n      dup3\n        /* \"#utility.yul\":3191:3204   */\n      gt\n        /* \"#utility.yul\":3188:3227   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3207:3225   */\n      tag_262\n      tag_229\n      jump\t// in\n    tag_262:\n      pop\n        /* \"#utility.yul\":3243:3252   */\n      add\n      swap1\n        /* \"#utility.yul\":3130:3258   */\n      jump\t// out\n        /* \"#utility.yul\":7985:8110   */\n    tag_223:\n        /* \"#utility.yul\":8025:8029   */\n      0x00\n        /* \"#utility.yul\":8053:8054   */\n      dup3\n        /* \"#utility.yul\":8050:8051   */\n      dup3\n        /* \"#utility.yul\":8047:8055   */\n      lt\n        /* \"#utility.yul\":8044:8078   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":8058:8076   */\n      tag_277\n      tag_229\n      jump\t// in\n    tag_277:\n      pop\n        /* \"#utility.yul\":8095:8104   */\n      sub\n      swap1\n        /* \"#utility.yul\":7985:8110   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a28329a09e84a65f28e27c72c517aef1d7f517cceaf7d2cde30a02b91f2382eb64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_170": {
									"entryPoint": null,
									"id": 170,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_733": {
									"entryPoint": null,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_845": {
									"entryPoint": null,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_710": {
									"entryPoint": null,
									"id": 710,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_528": {
									"entryPoint": 285,
									"id": 528,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 201,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_813": {
									"entryPoint": 205,
									"id": 813,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_742": {
									"entryPoint": null,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1168:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "422:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "457:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "478:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "485:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "490:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "481:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "481:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "471:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "471:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "471:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "515:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "515:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "550:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "553:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "543:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "543:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "438:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "445:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "441:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "441:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "435:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:13:1"
															},
															"nodeType": "YulIf",
															"src": "432:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "577:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "588:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "591:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "584:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "577:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "405:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "408:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "414:3:1",
														"type": ""
													}
												],
												"src": "374:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "705:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "715:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "727:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "723:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "715:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "757:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "768:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "750:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "674:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "685:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "696:4:1",
														"type": ""
													}
												],
												"src": "604:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "841:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "851:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "868:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "851:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "882:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "912:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "886:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "959:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "961:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "975:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "983:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "971:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "939:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:26:1"
															},
															"nodeType": "YulIf",
															"src": "929:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1049:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1070:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1077:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1082:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1073:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1073:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1063:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1063:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1063:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1117:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1107:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1107:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1142:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1145:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1135:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1135:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1135:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1005:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1028:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1025:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1002:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:38:1"
															},
															"nodeType": "YulIf",
															"src": "999:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "821:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "830:6:1",
														"type": ""
													}
												],
												"src": "786:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x21A7A4A7 PUSH1 0xE1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21A7 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH1 0x9 PUSH3 0x66 PUSH3 0x60 PUSH3 0xC9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCD JUMP JUMPDEST DUP3 MLOAD PUSH3 0x7B SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x205 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x91 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x205 JUMP JUMPDEST POP PUSH1 0x6 SSTORE POP POP PUSH8 0x16345785D8A0000 PUSH1 0x7 SSTORE PUSH3 0xC3 PUSH3 0xBA PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH3 0x11D JUMP JUMPDEST PUSH3 0x30E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x178 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x18C SWAP2 SWAP1 PUSH3 0x2AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1BB SWAP1 DUP5 SWAP1 PUSH3 0x2AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x213 SWAP1 PUSH3 0x2D2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x237 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x282 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x252 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x282 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x282 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x265 JUMP JUMPDEST POP PUSH3 0x290 SWAP3 SWAP2 POP PUSH3 0x294 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x290 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x295 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2E7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x308 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6D DUP1 PUSH3 0x31E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xB45EE9EF EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x16B PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x157 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST PUSH2 0x16B PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CD SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x5A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x34A DUP6 DUP3 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x355 DUP6 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x373 DUP4 DUP4 PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x38C DUP3 DUP3 PUSH2 0x90F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F9 PUSH1 0x0 PUSH2 0x9EE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x38C DUP3 DUP3 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x422 DUP3 DUP7 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x355 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4A8 DUP4 DUP4 DUP4 PUSH2 0x741 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x5A0 DUP2 PUSH2 0x9EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D3 DUP5 DUP5 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x73B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x73B DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8B6 SWAP1 DUP5 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x902 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x977 SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9A4 SWAP1 DUP5 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB41 SWAP1 DUP5 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB9D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC19 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC45 DUP5 PUSH2 0xBE1 JUMP JUMPDEST SWAP3 POP PUSH2 0xC53 PUSH1 0x20 DUP6 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7E DUP3 PUSH2 0xBE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA1 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xCAF PUSH1 0x20 DUP5 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCCC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1B PUSH2 0xCF2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xD32 PUSH2 0xCF2 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP4 0x29 LOG0 SWAP15 DUP5 0xA6 0x5F 0x28 0xE2 PUSH29 0x72C517AEF1D7F517CCEAF7D2CDE30A02B91F2382EB64736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "20615:690:0:-:0;;;20691:129;;;;;;;;;;6529:198;;;;;;;;;;;;;-1:-1:-1;;;6529:198:0;;;;;;;;;;;;;;;;-1:-1:-1;;;6529:198:0;;;20725:1;18917:32;18936:12;:10;;;:12;;:::i;:::-;18917:18;:32::i;:::-;6648:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6672:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;6700:8:0;:19;-1:-1:-1;;20754:19:0::1;20739:12;:34:::0;20784:28:::1;20790:7;19084::::0;19111:6;-1:-1:-1;;;;;19111:6:0;;19038:87;20790:7:::1;20799:12;::::0;20784:5:::1;:28::i;:::-;20615:690:::0;;4343:98;4423:10;;4343:98::o;20345:191::-;20419:16;20438:6;;-1:-1:-1;;;;;20455:17:0;;;-1:-1:-1;;;;;;20455:17:0;;;;;;20488:40;;20438:6;;;;;;;20488:40;;20419:16;20488:40;20408:128;20345:191;:::o;13566:399::-;-1:-1:-1;;;;;13650:21:0;;13642:65;;;;-1:-1:-1;;;13642:65:0;;216:2:1;13642:65:0;;;198:21:1;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;13642:65:0;;;;;;;;13798:6;13782:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13815:18:0;;;;;;:9;:18;;;;;:28;;13837:6;;13815:18;:28;;13837:6;;13815:28;:::i;:::-;;;;-1:-1:-1;;13859:37:0;;750:25:1;;;-1:-1:-1;;;;;13859:37:0;;;13876:1;;13859:37;;738:2:1;723:18;13859:37:0;;;;;;;13566:399;;:::o;20615:690::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20615:690:0;;;-1:-1:-1;20615:690:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;374:225:1;414:3;445:1;441:6;438:1;435:13;432:136;;;490:10;485:3;481:20;478:1;471:31;525:4;522:1;515:15;553:4;550:1;543:15;432:136;-1:-1:-1;584:9:1;;374:225::o;786:380::-;865:1;861:12;;;;908;;;929:61;;983:4;975:6;971:17;961:27;;929:61;1036:2;1028:6;1025:14;1005:18;1002:38;999:161;;1082:10;1077:3;1073:20;1070:1;1063:31;1117:4;1114:1;1107:15;1145:4;1142:1;1135:15;999:161;;786:380;;;:::o;:::-;20615:690:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_710": {
									"entryPoint": null,
									"id": 710,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_645": {
									"entryPoint": 1443,
									"id": 645,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_600": {
									"entryPoint": 2622,
									"id": 600,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_528": {
									"entryPoint": 2319,
									"id": 528,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_688": {
									"entryPoint": 1735,
									"id": 688,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_totalSupply_821": {
									"entryPoint": null,
									"id": 821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_813": {
									"entryPoint": 2542,
									"id": 813,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_472": {
									"entryPoint": 1857,
									"id": 472,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_267": {
									"entryPoint": 1197,
									"id": 267,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_292": {
									"entryPoint": 804,
									"id": 292,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balance_857": {
									"entryPoint": null,
									"id": 857,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_899": {
									"entryPoint": 1034,
									"id": 899,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_395": {
									"entryPoint": 1044,
									"id": 395,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_354": {
									"entryPoint": 864,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_886": {
									"entryPoint": 898,
									"id": 886,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_180": {
									"entryPoint": 658,
									"id": 180,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_742": {
									"entryPoint": null,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_770": {
									"entryPoint": 912,
									"id": 770,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_190": {
									"entryPoint": 1019,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_210": {
									"entryPoint": null,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_325": {
									"entryPoint": 828,
									"id": 325,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_793": {
									"entryPoint": 1240,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferPrice_873": {
									"entryPoint": 1181,
									"id": 873,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_249": {
									"entryPoint": 1167,
									"id": 249,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8112:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2241:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2251:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2251:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2293:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2308:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2324:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2329:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2320:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2320:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2333:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2316:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2316:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2210:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2221:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2232:4:1",
														"type": ""
													}
												],
												"src": "2140:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2435:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2481:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2490:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2493:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2483:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2483:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2483:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2456:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2465:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2452:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2452:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2477:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2448:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:32:1"
															},
															"nodeType": "YulIf",
															"src": "2445:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2506:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2535:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2516:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2554:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2587:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2598:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2583:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2564:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2404:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2416:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													}
												],
												"src": "2348:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2668:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2678:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2695:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2678:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2709:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2739:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2745:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2713:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2786:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2788:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2802:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2810:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2798:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2798:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2788:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2766:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2759:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:26:1"
															},
															"nodeType": "YulIf",
															"src": "2756:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2876:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2897:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2904:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2909:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2900:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2900:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2890:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2890:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2890:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2944:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2934:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2934:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2972:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2962:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2962:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2962:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2832:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2855:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2863:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2852:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2852:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2829:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:38:1"
															},
															"nodeType": "YulIf",
															"src": "2826:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2648:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2657:6:1",
														"type": ""
													}
												],
												"src": "2613:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3030:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3047:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3054:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3059:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3040:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3087:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3090:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3080:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3111:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3114:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3104:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2998:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3178:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3205:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3207:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3207:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3207:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3194:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3201:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3197:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3191:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:13:1"
															},
															"nodeType": "YulIf",
															"src": "3188:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3236:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3247:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3250:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3236:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3161:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3164:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3170:3:1",
														"type": ""
													}
												],
												"src": "3130:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3437:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3454:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3465:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3447:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3488:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3499:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3484:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3504:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3477:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3527:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3543:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3516:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3587:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3610:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3595:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3587:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3414:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3428:4:1",
														"type": ""
													}
												],
												"src": "3263:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3798:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3826:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3808:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3808:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3849:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3860:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3845:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3845:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3865:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3838:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3899:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3884:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3884:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3904:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3877:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3877:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3959:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3970:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3955:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3975:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3948:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3948:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3992:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4004:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4015:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3992:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3775:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3789:4:1",
														"type": ""
													}
												],
												"src": "3624:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4204:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4221:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4232:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4214:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4214:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4214:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4255:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4266:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4251:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4244:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4244:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4294:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4305:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4290:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4290:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4310:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4283:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4381:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4399:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4411:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4422:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4399:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4181:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4195:4:1",
														"type": ""
													}
												],
												"src": "4030:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4611:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4628:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4639:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4621:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4662:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4673:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4658:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4658:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4678:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4651:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4651:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4712:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4697:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4717:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4690:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4772:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4783:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4768:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4768:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4788:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4761:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4804:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4816:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4827:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4812:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4804:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4588:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4602:4:1",
														"type": ""
													}
												],
												"src": "4437:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5016:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5033:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5044:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5026:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5067:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5078:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5056:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5056:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5106:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5117:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5102:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5122:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5095:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5095:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5095:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5188:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5173:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5173:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5193:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5166:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5207:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5219:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5207:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4993:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5007:4:1",
														"type": ""
													}
												],
												"src": "4842:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5419:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5436:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5447:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5429:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5429:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5429:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5470:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5466:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5486:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5459:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5520:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5505:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5525:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5498:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5498:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5498:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5566:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5578:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5574:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5574:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5566:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5396:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5410:4:1",
														"type": ""
													}
												],
												"src": "5245:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5794:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5805:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5787:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5828:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5839:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5824:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5844:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5817:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5817:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5867:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5878:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5863:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5863:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5883:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5856:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5856:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5938:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5949:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5934:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5934:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5954:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5927:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5971:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5983:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5979:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5971:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5754:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5768:4:1",
														"type": ""
													}
												],
												"src": "5603:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6200:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6211:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6193:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6193:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6234:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6245:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6230:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6250:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6223:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6223:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6273:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6284:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6269:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6289:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6262:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6262:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6344:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6355:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6340:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6360:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6333:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6333:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6375:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6387:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6398:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6383:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6383:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6375:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6160:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6174:4:1",
														"type": ""
													}
												],
												"src": "6009:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6587:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6604:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6597:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6649:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6627:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6627:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6677:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6688:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6673:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6693:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6666:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6748:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6759:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6744:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6744:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6764:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6737:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6737:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6782:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6794:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6805:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6790:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6782:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6564:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6578:4:1",
														"type": ""
													}
												],
												"src": "6413:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6994:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7011:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7022:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7004:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7056:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7041:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7061:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7034:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7034:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7084:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7095:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7080:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7100:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7073:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7143:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6971:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6985:4:1",
														"type": ""
													}
												],
												"src": "6820:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7354:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7371:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7382:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7364:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7364:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7401:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7421:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7394:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7394:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7455:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7440:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7460:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7433:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7515:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7526:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7511:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7531:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7504:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7504:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7544:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7556:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7567:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7552:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7552:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7544:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7331:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7345:4:1",
														"type": ""
													}
												],
												"src": "7180:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7756:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7773:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7784:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7766:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7766:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7807:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7818:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7803:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7803:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7823:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7796:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7796:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7846:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7857:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7842:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7842:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7862:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7835:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7928:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7913:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7933:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7906:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7906:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7947:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7959:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7970:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7955:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7955:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7947:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7733:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7747:4:1",
														"type": ""
													}
												],
												"src": "7582:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8034:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8056:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8058:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8058:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8058:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8050:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8053:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8047:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:8:1"
															},
															"nodeType": "YulIf",
															"src": "8044:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8087:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8099:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8102:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8095:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8087:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8016:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8019:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8025:4:1",
														"type": ""
													}
												],
												"src": "7985:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb14610246578063b45ee9ef14610259578063dd62ed3e1461026c578063e3d670d7146101cc578063f2fde38b1461027f57600080fd5b8063715018a6146101f55780638da5cb5b146101fd57806395d89b41146102185780639dc29fac14610220578063a457c2d71461023357600080fd5b8063313ce567116100f4578063313ce5671461018c578063395093511461019b5780633eaaf86b146101ae57806340c10f19146101b757806370a08231146101cc57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e610292565b60405161013b9190610b8c565b60405180910390f35b610157610152366004610bfd565b610324565b604051901515815260200161013b565b6003545b60405190815260200161013b565b610157610187366004610c27565b61033c565b6040516009815260200161013b565b6101576101a9366004610bfd565b610360565b61016b60075481565b6101ca6101c5366004610bfd565b610382565b005b61016b6101da366004610c63565b6001600160a01b031660009081526001602052604090205490565b6101ca610390565b6000546040516001600160a01b03909116815260200161013b565b61012e6103fb565b6101ca61022e366004610bfd565b61040a565b610157610241366004610bfd565b610414565b610157610254366004610bfd565b61048f565b6101ca610267366004610c27565b61049d565b61016b61027a366004610c85565b6104ad565b6101ca61028d366004610c63565b6104d8565b6060600480546102a190610cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90610cb8565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b5050505050905090565b6000336103328185856105a3565b5060019392505050565b60003361034a8582856106c7565b610355858585610741565b506001949350505050565b60003361033281858561037383836104ad565b61037d9190610d08565b6105a3565b61038c828261090f565b5050565b6000546001600160a01b031633146103ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6103f960006109ee565b565b6060600580546102a190610cb8565b61038c8282610a3e565b6000338161042282866104ad565b9050838110156104825760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103e6565b61035582868684036105a3565b600033610332818585610741565b6104a8838383610741565b505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000546001600160a01b031633146105325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e6565b6001600160a01b0381166105975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e6565b6105a0816109ee565b50565b6001600160a01b0383166106055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e6565b6001600160a01b0382166106665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106d384846104ad565b9050600019811461073b578181101561072e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e6565b61073b84848484036105a3565b50505050565b6001600160a01b0383166107a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e6565b6001600160a01b0382166108075760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e6565b6001600160a01b0383166000908152600160205260409020548181101561087f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e6565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906108b6908490610d08565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161090291815260200190565b60405180910390a361073b565b6001600160a01b0382166109655760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e6565b80600360008282546109779190610d08565b90915550506001600160a01b038216600090815260016020526040812080548392906109a4908490610d08565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610a9e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103e6565b6001600160a01b03821660009081526001602052604090205481811015610b125760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103e6565b6001600160a01b0383166000908152600160205260408120838303905560038054849290610b41908490610d20565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b81811015610bb957858101830151858201604001528201610b9d565b81811115610bcb576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bf857600080fd5b919050565b60008060408385031215610c1057600080fd5b610c1983610be1565b946020939093013593505050565b600080600060608486031215610c3c57600080fd5b610c4584610be1565b9250610c5360208501610be1565b9150604084013590509250925092565b600060208284031215610c7557600080fd5b610c7e82610be1565b9392505050565b60008060408385031215610c9857600080fd5b610ca183610be1565b9150610caf60208401610be1565b90509250929050565b600181811c90821680610ccc57607f821691505b602082108103610cec57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d1b57610d1b610cf2565b500190565b600082821015610d3257610d32610cf2565b50039056fea2646970667358221220a28329a09e84a65f28e27c72c517aef1d7f517cceaf7d2cde30a02b91f2382eb64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xB45EE9EF EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x16B PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x157 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST PUSH2 0x16B PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CD SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x5A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x34A DUP6 DUP3 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x355 DUP6 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x373 DUP4 DUP4 PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x38C DUP3 DUP3 PUSH2 0x90F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F9 PUSH1 0x0 PUSH2 0x9EE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x38C DUP3 DUP3 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x422 DUP3 DUP7 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x355 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x332 DUP2 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4A8 DUP4 DUP4 DUP4 PUSH2 0x741 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x5A0 DUP2 PUSH2 0x9EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D3 DUP5 DUP5 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x73B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x73B DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8B6 SWAP1 DUP5 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x902 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x977 SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9A4 SWAP1 DUP5 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB41 SWAP1 DUP5 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB9D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC19 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC45 DUP5 PUSH2 0xBE1 JUMP JUMPDEST SWAP3 POP PUSH2 0xC53 PUSH1 0x20 DUP6 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7E DUP3 PUSH2 0xBE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA1 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xCAF PUSH1 0x20 DUP5 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCCC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1B PUSH2 0xCF2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xD32 PUSH2 0xCF2 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP4 0x29 LOG0 SWAP15 DUP5 0xA6 0x5F 0x28 0xE2 PUSH29 0x72C517AEF1D7F517CCEAF7D2CDE30A02B91F2382EB64736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "20615:690:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6797:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9288:242;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;9288:242:0;1053:187:1;7916:108:0;8004:12;;7916:108;;;1391:25:1;;;1379:2;1364:18;7916:108:0;1245:177:1;10110:295:0;;;;;;:::i;:::-;;:::i;7759:92::-;;;7842:1;1902:36:1;;1890:2;1875:18;7759:92:0;1760:184:1;10814:270:0;;;;;;:::i;:::-;;:::i;20655:27::-;;;;;;21104:95;;;;;;:::i;:::-;;:::i;:::-;;8087:177;;;;;;:::i;:::-;-1:-1:-1;;;;;8238:18:0;8206:7;8238:18;;;:9;:18;;;;;;;8087:177;19689:103;;;:::i;19038:87::-;19084:7;19111:6;19038:87;;-1:-1:-1;;;;;19111:6:0;;;2286:51:1;;2274:2;2259:18;19038:87:0;2140:203:1;7016:104:0;;;:::i;21207:95::-;;;;;;:::i;:::-;;:::i;11587:505::-;;;;;;:::i;:::-;;:::i;8470:234::-;;;;;;:::i;:::-;;:::i;20944:152::-;;;;;;:::i;:::-;;:::i;8767:201::-;;;;;;:::i;:::-;;:::i;19947:238::-;;;;;;:::i;:::-;;:::i;6797:100::-;6851:13;6884:5;6877:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6797:100;:::o;9288:242::-;9407:4;4423:10;9468:32;4423:10;9484:7;9493:6;9468:8;:32::i;:::-;-1:-1:-1;9518:4:0;;9288:242;-1:-1:-1;;;9288:242:0:o;10110:295::-;10241:4;4423:10;10299:38;10315:4;4423:10;10330:6;10299:15;:38::i;:::-;10348:27;10358:4;10364:2;10368:6;10348:9;:27::i;:::-;-1:-1:-1;10393:4:0;;10110:295;-1:-1:-1;;;;10110:295:0:o;10814:270::-;10929:4;4423:10;10990:64;4423:10;11006:7;11043:10;11015:25;4423:10;11006:7;11015:9;:25::i;:::-;:38;;;;:::i;:::-;10990:8;:64::i;21104:95::-;21169:22;21175:7;21184:6;21169:5;:22::i;:::-;21104:95;;:::o;19689:103::-;19084:7;19111:6;-1:-1:-1;;;;;19111:6:0;4423:10;19258:23;19250:68;;;;-1:-1:-1;;;19250:68:0;;3465:2:1;19250:68:0;;;3447:21:1;;;3484:18;;;3477:30;3543:34;3523:18;;;3516:62;3595:18;;19250:68:0;;;;;;;;;19754:30:::1;19781:1;19754:18;:30::i;:::-;19689:103::o:0;7016:104::-;7072:13;7105:7;7098:14;;;;;:::i;21207:95::-;21272:22;21278:7;21287:6;21272:5;:22::i;11587:505::-;11707:4;4423:10;11707:4;11795:25;4423:10;11812:7;11795:9;:25::i;:::-;11768:52;;11873:15;11853:16;:35;;11831:122;;;;-1:-1:-1;;;11831:122:0;;3826:2:1;11831:122:0;;;3808:21:1;3865:2;3845:18;;;3838:30;3904:34;3884:18;;;3877:62;-1:-1:-1;;;3955:18:1;;;3948:35;4000:19;;11831:122:0;3624:401:1;11831:122:0;11989:60;11998:5;12005:7;12033:15;12014:16;:34;11989:8;:60::i;8470:234::-;8585:4;4423:10;8646:28;4423:10;8663:2;8667:6;8646:9;:28::i;20944:152::-;21061:27;21071:4;21077:2;21081:6;21061:9;:27::i;:::-;20944:152;;;:::o;8767:201::-;-1:-1:-1;;;;;8933:18:0;;;8901:7;8933:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8767:201::o;19947:238::-;19084:7;19111:6;-1:-1:-1;;;;;19111:6:0;4423:10;19258:23;19250:68;;;;-1:-1:-1;;;19250:68:0;;3465:2:1;19250:68:0;;;3447:21:1;;;3484:18;;;3477:30;3543:34;3523:18;;;3516:62;3595:18;;19250:68:0;3263:356:1;19250:68:0;-1:-1:-1;;;;;20050:22:0;::::1;20028:110;;;::::0;-1:-1:-1;;;20028:110:0;;4232:2:1;20028:110:0::1;::::0;::::1;4214:21:1::0;4271:2;4251:18;;;4244:30;4310:34;4290:18;;;4283:62;-1:-1:-1;;;4361:18:1;;;4354:36;4407:19;;20028:110:0::1;4030:402:1::0;20028:110:0::1;20149:28;20168:8;20149:18;:28::i;:::-;19947:238:::0;:::o;15327:380::-;-1:-1:-1;;;;;15463:19:0;;15455:68;;;;-1:-1:-1;;;15455:68:0;;4639:2:1;15455:68:0;;;4621:21:1;4678:2;4658:18;;;4651:30;4717:34;4697:18;;;4690:62;-1:-1:-1;;;4768:18:1;;;4761:34;4812:19;;15455:68:0;4437:400:1;15455:68:0;-1:-1:-1;;;;;15542:21:0;;15534:68;;;;-1:-1:-1;;;15534:68:0;;5044:2:1;15534:68:0;;;5026:21:1;5083:2;5063:18;;;5056:30;5122:34;5102:18;;;5095:62;-1:-1:-1;;;5173:18:1;;;5166:32;5215:19;;15534:68:0;4842:398:1;15534:68:0;-1:-1:-1;;;;;15615:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15667:32;;1391:25:1;;;15667:32:0;;1364:18:1;15667:32:0;;;;;;;15327:380;;;:::o;15998:502::-;16133:24;16160:25;16170:5;16177:7;16160:9;:25::i;:::-;16133:52;;-1:-1:-1;;16200:16:0;:37;16196:297;;16300:6;16280:16;:26;;16254:117;;;;-1:-1:-1;;;16254:117:0;;5447:2:1;16254:117:0;;;5429:21:1;5486:2;5466:18;;;5459:30;5525:31;5505:18;;;5498:59;5574:18;;16254:117:0;5245:353:1;16254:117:0;16415:51;16424:5;16431:7;16459:6;16440:16;:25;16415:8;:51::i;:::-;16122:378;15998:502;;;:::o;12571:708::-;-1:-1:-1;;;;;12702:18:0;;12694:68;;;;-1:-1:-1;;;12694:68:0;;5805:2:1;12694:68:0;;;5787:21:1;5844:2;5824:18;;;5817:30;5883:34;5863:18;;;5856:62;-1:-1:-1;;;5934:18:1;;;5927:35;5979:19;;12694:68:0;5603:401:1;12694:68:0;-1:-1:-1;;;;;12781:16:0;;12773:64;;;;-1:-1:-1;;;12773:64:0;;6211:2:1;12773:64:0;;;6193:21:1;6250:2;6230:18;;;6223:30;6289:34;6269:18;;;6262:62;-1:-1:-1;;;6340:18:1;;;6333:33;6383:19;;12773:64:0;6009:399:1;12773:64:0;-1:-1:-1;;;;;12923:15:0;;12901:19;12923:15;;;:9;:15;;;;;;12971:21;;;;12949:109;;;;-1:-1:-1;;;12949:109:0;;6615:2:1;12949:109:0;;;6597:21:1;6654:2;6634:18;;;6627:30;6693:34;6673:18;;;6666:62;-1:-1:-1;;;6744:18:1;;;6737:36;6790:19;;12949:109:0;6413:402:1;12949:109:0;-1:-1:-1;;;;;13094:15:0;;;;;;;:9;:15;;;;;;13112:20;;;13094:38;;13154:13;;;;;;;;:23;;13126:6;;13094:15;13154:23;;13126:6;;13154:23;:::i;:::-;;;;;;;;13210:2;-1:-1:-1;;;;;13195:26:0;13204:4;-1:-1:-1;;;;;13195:26:0;;13214:6;13195:26;;;;1391:25:1;;1379:2;1364:18;;1245:177;13195:26:0;;;;;;;;13234:37;20944:152;13566:399;-1:-1:-1;;;;;13650:21:0;;13642:65;;;;-1:-1:-1;;;13642:65:0;;7022:2:1;13642:65:0;;;7004:21:1;7061:2;7041:18;;;7034:30;7100:33;7080:18;;;7073:61;7151:18;;13642:65:0;6820:355:1;13642:65:0;13798:6;13782:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13815:18:0;;;;;;:9;:18;;;;;:28;;13837:6;;13815:18;:28;;13837:6;;13815:28;:::i;:::-;;;;-1:-1:-1;;13859:37:0;;1391:25:1;;;-1:-1:-1;;;;;13859:37:0;;;13876:1;;13859:37;;1379:2:1;1364:18;13859:37:0;;;;;;;21104:95;;:::o;20345:191::-;20419:16;20438:6;;-1:-1:-1;;;;;20455:17:0;;;-1:-1:-1;;;;;;20455:17:0;;;;;;20488:40;;20438:6;;;;;;;20488:40;;20419:16;20488:40;20408:128;20345:191;:::o;14298:591::-;-1:-1:-1;;;;;14382:21:0;;14374:67;;;;-1:-1:-1;;;14374:67:0;;7382:2:1;14374:67:0;;;7364:21:1;7421:2;7401:18;;;7394:30;7460:34;7440:18;;;7433:62;-1:-1:-1;;;7511:18:1;;;7504:31;7552:19;;14374:67:0;7180:397:1;14374:67:0;-1:-1:-1;;;;;14541:18:0;;14516:22;14541:18;;;:9;:18;;;;;;14578:24;;;;14570:71;;;;-1:-1:-1;;;14570:71:0;;7784:2:1;14570:71:0;;;7766:21:1;7823:2;7803:18;;;7796:30;7862:34;7842:18;;;7835:62;-1:-1:-1;;;7913:18:1;;;7906:32;7955:19;;14570:71:0;7582:398:1;14570:71:0;-1:-1:-1;;;;;14677:18:0;;;;;;:9;:18;;;;;14698:23;;;14677:44;;14743:12;:22;;14715:6;;14677:18;14743:22;;14715:6;;14743:22;:::i;:::-;;;;-1:-1:-1;;14783:37:0;;1391:25:1;;;14809:1:0;;-1:-1:-1;;;;;14783:37:0;;;;;1379:2:1;1364:18;14783:37:0;;;;;;;20944:152;;;:::o;14:597:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;2998:127::-;3059:10;3054:3;3050:20;3047:1;3040:31;3090:4;3087:1;3080:15;3114:4;3111:1;3104:15;3130:128;3170:3;3201:1;3197:6;3194:1;3191:13;3188:39;;;3207:18;;:::i;:::-;-1:-1:-1;3243:9:1;;3130:128::o;7985:125::-;8025:4;8053:1;8050;8047:8;8044:34;;;8058:18;;:::i;:::-;-1:-1:-1;8095:9:1;;7985:125::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "687400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_totalSupply()": "2362",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24647",
								"balance(address)": "2625",
								"balanceOf(address)": "2648",
								"burn(address,uint256)": "51037",
								"decimals()": "200",
								"decreaseAllowance(address,uint256)": "27061",
								"increaseAllowance(address,uint256)": "27023",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2346",
								"renounceOwnership()": "28137",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51198",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28419",
								"transferPrice(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20691,
									"end": 20820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "21A7A4A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "21A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 20726,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 18917,
									"end": 18949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 18936,
									"end": 18948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 18936,
									"end": 18946,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 18936,
									"end": 18946,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18936,
									"end": 18946,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18936,
									"end": 18948,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18936,
									"end": 18948,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18936,
									"end": 18948,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18936,
									"end": 18948,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 18936,
									"end": 18948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18917,
									"end": 18935,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 18917,
									"end": 18949,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18917,
									"end": 18949,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 18917,
									"end": 18949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6653,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6648,
									"end": 6653,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6679,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6672,
									"end": 6679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6672,
									"end": 6689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6700,
									"end": 6708,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6700,
									"end": 6719,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20754,
									"end": 20773,
									"name": "PUSH",
									"source": 0,
									"value": "16345785D8A0000"
								},
								{
									"begin": 20739,
									"end": 20751,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20739,
									"end": 20773,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20784,
									"end": 20812,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 20790,
									"end": 20797,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 19084,
									"end": 19091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19111,
									"end": 19117,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 19111,
									"end": 19117,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19111,
									"end": 19117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19038,
									"end": 19125,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20790,
									"end": 20797,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 20790,
									"end": 20797,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20799,
									"end": 20811,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20799,
									"end": 20811,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 20784,
									"end": 20789,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 20784,
									"end": 20812,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20784,
									"end": 20812,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 20784,
									"end": 20812,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4343,
									"end": 4441,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4343,
									"end": 4441,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4423,
									"end": 4433,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4423,
									"end": 4433,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4343,
									"end": 4441,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 20345,
									"end": 20536,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20345,
									"end": 20536,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20419,
									"end": 20435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20419,
									"end": 20435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 20408,
									"end": 20536,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20345,
									"end": 20536,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20345,
									"end": 20536,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 13566,
									"end": 13965,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13566,
									"end": 13965,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13650,
									"end": 13671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13650,
									"end": 13671,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 13642,
									"end": 13707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13798,
									"end": 13804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13782,
									"end": 13794,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13782,
									"end": 13794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13782,
									"end": 13804,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13824,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13837,
									"end": 13843,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13837,
									"end": 13843,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13833,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13837,
									"end": 13843,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13837,
									"end": 13843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13815,
									"end": 13843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 750,
									"end": 775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 750,
									"end": 775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 750,
									"end": 775,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13876,
									"end": 13877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13876,
									"end": 13877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 738,
									"end": 740,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 723,
									"end": 741,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13859,
									"end": 13896,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 13566,
									"end": 13965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13566,
									"end": 13965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13566,
									"end": 13965,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 374,
									"end": 599,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 374,
									"end": 599,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 414,
									"end": 417,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 441,
									"end": 447,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 438,
									"end": 439,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 435,
									"end": 448,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 432,
									"end": 568,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 432,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 432,
									"end": 568,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 490,
									"end": 500,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 485,
									"end": 488,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 481,
									"end": 501,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 478,
									"end": 479,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 502,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 525,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 522,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 515,
									"end": 530,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 550,
									"end": 551,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 558,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 432,
									"end": 568,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 432,
									"end": 568,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 584,
									"end": 593,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 584,
									"end": 593,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 374,
									"end": 599,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 865,
									"end": 866,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 929,
									"end": 990,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 983,
									"end": 987,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 975,
									"end": 981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 971,
									"end": 988,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 961,
									"end": 988,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 961,
									"end": 988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 990,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 929,
									"end": 990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1040,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1092,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1077,
									"end": 1080,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1073,
									"end": 1093,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1094,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1117,
									"end": 1121,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1114,
									"end": 1115,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1107,
									"end": 1122,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1142,
									"end": 1143,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1135,
									"end": 1150,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20615,
									"end": 21305,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a28329a09e84a65f28e27c72c517aef1d7f517cceaf7d2cde30a02b91f2382eb64736f6c634300080d0033",
									".code": [
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "B45EE9EF"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "E3D670D7"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "3EAAF86B"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 21305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8016,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8004,
											"end": 8016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7843,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20655,
											"end": 20682,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 20655,
											"end": 20682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 20655,
											"end": 20682,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20655,
											"end": 20682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20682,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 8264,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2140,
											"end": 2343,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6884,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6897,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9407,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9491,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9468,
											"end": 9500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9468,
											"end": 9500,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9468,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9288,
											"end": 9530,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10299,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10315,
											"end": 10319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10330,
											"end": 10336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10299,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10299,
											"end": 10337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10299,
											"end": 10337,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10299,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10366,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10374,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10348,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10393,
											"end": 10397,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10393,
											"end": 10397,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10110,
											"end": 10405,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10814,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10929,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10990,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11006,
											"end": 11013,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11006,
											"end": 11013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11015,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10990,
											"end": 10998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10990,
											"end": 11054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21175,
											"end": 21182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21184,
											"end": 21190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 21169,
											"end": 21191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21169,
											"end": 21191,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21169,
											"end": 21191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19258,
											"end": 19281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 19781,
											"end": 19782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19754,
											"end": 19772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19754,
											"end": 19784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19754,
											"end": 19784,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 19754,
											"end": 19784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7072,
											"end": 7085,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7105,
											"end": 7112,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7098,
											"end": 7112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 21207,
											"end": 21302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21272,
											"end": 21294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21278,
											"end": 21285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21287,
											"end": 21293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21272,
											"end": 21277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21272,
											"end": 21294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 11587,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11707,
											"end": 11711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11707,
											"end": 11711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11812,
											"end": 11819,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11795,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11873,
											"end": 11888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11888,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11888,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3938,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4019,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4000,
											"end": 4019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3624,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 11831,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11989,
											"end": 12049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11998,
											"end": 12003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12005,
											"end": 12012,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12033,
											"end": 12048,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12030,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11989,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 11989,
											"end": 12049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8470,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8665,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8646,
											"end": 8674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21061,
											"end": 21088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 21071,
											"end": 21075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21077,
											"end": 21079,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21081,
											"end": 21087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21061,
											"end": 21070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 21061,
											"end": 21088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21061,
											"end": 21088,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 21061,
											"end": 21088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8944,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8968,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19258,
											"end": 19281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3263,
											"end": 3619,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20050,
											"end": 20072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4344,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4426,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4407,
											"end": 4426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4030,
											"end": 4432,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 20168,
											"end": 20176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20149,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15463,
											"end": 15482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15463,
											"end": 15482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4680,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4658,
											"end": 4676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4751,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4812,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4437,
											"end": 4837,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15455,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15542,
											"end": 15563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15542,
											"end": 15563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5044,
											"end": 5046,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5234,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5215,
											"end": 5234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4842,
											"end": 5240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 15534,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15626,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15667,
											"end": 15699,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15327,
											"end": 15707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16160,
											"end": 16185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16170,
											"end": 16175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16177,
											"end": 16184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16160,
											"end": 16185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16160,
											"end": 16185,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16160,
											"end": 16185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16200,
											"end": 16216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16200,
											"end": 16237,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16196,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16196,
											"end": 16493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16300,
											"end": 16306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16306,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5429,
											"end": 5450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5488,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5556,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5245,
											"end": 5598,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16254,
											"end": 16371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16424,
											"end": 16429,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16431,
											"end": 16438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16456,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16415,
											"end": 16466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16415,
											"end": 16466,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16415,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16122,
											"end": 16500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16500,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12571,
											"end": 13279,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 12571,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5846,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5824,
											"end": 5842,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5824,
											"end": 5842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5817,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 5917,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 5918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5979,
											"end": 5998,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5979,
											"end": 5998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5603,
											"end": 6004,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12694,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12781,
											"end": 12797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6323,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6009,
											"end": 6408,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12773,
											"end": 12837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12901,
											"end": 12920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12932,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12992,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6597,
											"end": 6618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6656,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6727,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6666,
											"end": 6728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6737,
											"end": 6773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6809,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6790,
											"end": 6809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6413,
											"end": 6815,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12949,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13103,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13132,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13132,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13132,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13132,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13204,
											"end": 13208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13214,
											"end": 13220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13221,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13234,
											"end": 13271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13566,
											"end": 13965,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 13566,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13650,
											"end": 13671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13650,
											"end": 13671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7004,
											"end": 7025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7100,
											"end": 7133,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6820,
											"end": 7175,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13642,
											"end": 13707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13798,
											"end": 13804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13794,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13782,
											"end": 13794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13804,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13843,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13843,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13876,
											"end": 13877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13876,
											"end": 13877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13896,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21104,
											"end": 21199,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20345,
											"end": 20536,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 20345,
											"end": 20536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20419,
											"end": 20435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20419,
											"end": 20435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20408,
											"end": 20536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20345,
											"end": 20536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20345,
											"end": 20536,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14298,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14298,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14382,
											"end": 14403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7423,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7494,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7433,
											"end": 7495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7180,
											"end": 7577,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 14374,
											"end": 14441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14516,
											"end": 14538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14541,
											"end": 14550,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14541,
											"end": 14559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14578,
											"end": 14602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14578,
											"end": 14602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14578,
											"end": 14602,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14578,
											"end": 14602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7825,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7862,
											"end": 7896,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7955,
											"end": 7974,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7955,
											"end": 7974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7582,
											"end": 7980,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14570,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14686,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14698,
											"end": 14721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14698,
											"end": 14721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14698,
											"end": 14721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14721,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14755,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14715,
											"end": 14721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14715,
											"end": 14721,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14715,
											"end": 14721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14715,
											"end": 14721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14809,
											"end": 14810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14820,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2463,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2495,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 2861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2866,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2904,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2900,
											"end": 2920,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2934,
											"end": 2949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2976,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2969,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2998,
											"end": 3125,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2998,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3069,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3087,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3080,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3118,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3111,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3119,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3130,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3188,
											"end": 3227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3258,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8055,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balance(address)": "e3d670d7",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferPrice(address,address,uint256)": "b45ee9ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x09539a5cabd66841a2605d3fa1ef89b588b23af3dc9c322a813bf493a14cc26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54daaa899e33e76d1cd8467d7f4dbf1d921e8b911e33531e4df2fa4fb94fc607\",\"dweb:/ipfs/QmSLtGWkaeZncBWBs3d7fGqvxLBkcmw3HJd9Lvc49XyPfM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 717,
								"contract": "smartContract_flat.sol:Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 133,
								"contract": "smartContract_flat.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "smartContract_flat.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "smartContract_flat.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "smartContract_flat.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "smartContract_flat.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 147,
								"contract": "smartContract_flat.sol:Token",
								"label": "_decimal",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 821,
								"contract": "smartContract_flat.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"smartContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burningAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountAfterBurning",
									"type": "uint256"
								}
							],
							"name": "buyTokenDetails",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "AdminAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "buyTokenDetailsAddresses",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ownerInitiative",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "BNB",
									"type": "uint256"
								}
							],
							"name": "swapTokenBNB",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AdminAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Coin",
							"outputs": [
								{
									"internalType": "contract Token",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "amountAfterBurning",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "burningAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "buyInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "buyTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "purchaseToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "burnToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "userGets",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ownerSurplus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "BNBchargedByAdmin",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getIdsOfUser",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract Token",
									"name": "_Coin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_adminAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ownerSurplusToAdmin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "setAdminAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "swapTokenWithBNB",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalInvesters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smartContract_flat.sol\":28559:32296  contract smartContract is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"smartContract_flat.sol\":18917:18949  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n  caller\n    /* \"smartContract_flat.sol\":18917:18935  _transferOwnership */\n  tag_7\n    /* \"smartContract_flat.sol\":18917:18949  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"smartContract_flat.sol\":28559:32296  contract smartContract is Ownable {... */\n  jump(tag_8)\n    /* \"smartContract_flat.sol\":20345:20536  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"smartContract_flat.sol\":20419:20435  address oldOwner */\n  0x00\n    /* \"smartContract_flat.sol\":20438:20444  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smartContract_flat.sol\":20455:20472  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"smartContract_flat.sol\":20438:20444  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"smartContract_flat.sol\":20419:20435  address oldOwner */\n  swap1\n    /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"smartContract_flat.sol\":20408:20536  {... */\n  pop\n    /* \"smartContract_flat.sol\":20345:20536  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"smartContract_flat.sol\":28559:32296  contract smartContract is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"smartContract_flat.sol\":28559:32296  contract smartContract is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xaf0afec9\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xaf0afec9\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd09bf0e4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xee238506\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8637856d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa77b2e37\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x2c1e816d\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x2c1e816d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2d296bf1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3a84374b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5f4fd1f7\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x158ef93e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1794bb3c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23660bd5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x28f661e3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"smartContract_flat.sol\":28716:28739  bool public initialized */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      sload(0x04)\n      tag_22\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"smartContract_flat.sol\":28716:28739  bool public initialized */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smartContract_flat.sol\":29674:30035  function initialize(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"smartContract_flat.sol\":31382:32214  function swapTokenWithBNB(uint256 id, address user) public payable {... */\n    tag_4:\n      tag_27\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"smartContract_flat.sol\":28633:28660  address public AdminAddress */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      sload(0x01)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1328:1360   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1310:1361   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1298:1300   */\n      0x20\n        /* \"#utility.yul\":1283:1301   */\n      add\n        /* \"smartContract_flat.sol\":28633:28660  address public AdminAddress */\n      tag_24\n        /* \"#utility.yul\":1164:1367   */\n      jump\n        /* \"smartContract_flat.sol\":30043:30141  function setAdminAddress(address _admin) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_27\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"smartContract_flat.sol\":30378:31374  function buyToken(uint256 amount) public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_27\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"smartContract_flat.sol\":28928:28981  mapping(uint256 => uint256) public amountAfterBurning */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_52:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":1962:1987   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1950:1952   */\n      0x20\n        /* \"#utility.yul\":1935:1953   */\n      add\n        /* \"smartContract_flat.sol\":28928:28981  mapping(uint256 => uint256) public amountAfterBurning */\n      tag_24\n        /* \"#utility.yul\":1816:1993   */\n      jump\n        /* \"smartContract_flat.sol\":30249:30370  function getIdsOfUser(address user) public view returns (uint256[] memory) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n        /* \"smartContract_flat.sol\":19689:19792  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_27\n      tag_64\n      jump\t// in\n        /* \"smartContract_flat.sol\":28748:28815  mapping(address => mapping(uint256 => purchaseInfo)) public buyInfo */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      0x05\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      swap6\n      dup6\n      add\n      sload\n      0x06\n      swap1\n      swap6\n      add\n      sload\n      swap4\n      swap6\n      swap3\n      swap5\n      swap2\n      swap4\n      swap1\n      swap3\n      swap2\n      swap1\n      dup8\n      jump\n    tag_66:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3277:3302   */\n      swap8\n      dup9\n      mstore\n        /* \"#utility.yul\":3333:3335   */\n      0x20\n        /* \"#utility.yul\":3318:3336   */\n      dup9\n      add\n        /* \"#utility.yul\":3311:3345   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":3361:3379   */\n      swap5\n      dup7\n      add\n        /* \"#utility.yul\":3354:3388   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3419:3421   */\n      0x60\n        /* \"#utility.yul\":3404:3422   */\n      dup6\n      add\n        /* \"#utility.yul\":3397:3431   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3462:3465   */\n      0x80\n        /* \"#utility.yul\":3447:3466   */\n      dup5\n      add\n        /* \"#utility.yul\":3440:3475   */\n      mstore\n        /* \"#utility.yul\":3506:3509   */\n      0xa0\n        /* \"#utility.yul\":3491:3510   */\n      dup4\n      add\n        /* \"#utility.yul\":3484:3519   */\n      mstore\n        /* \"#utility.yul\":3550:3553   */\n      0xc0\n        /* \"#utility.yul\":3535:3554   */\n      dup3\n      add\n        /* \"#utility.yul\":3528:3563   */\n      mstore\n        /* \"#utility.yul\":3264:3267   */\n      0xe0\n        /* \"#utility.yul\":3249:3268   */\n      add\n        /* \"smartContract_flat.sol\":28748:28815  mapping(address => mapping(uint256 => purchaseInfo)) public buyInfo */\n      tag_24\n        /* \"#utility.yul\":2962:3569   */\n      jump\n        /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"smartContract_flat.sol\":28667:28684  Token public Coin */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      sload(0x02)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"smartContract_flat.sol\":30149:30241  function totalInvesters() public view returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n        /* \"smartContract_flat.sol\":30223:30233  investerID */\n      sload(0x03)\n        /* \"smartContract_flat.sol\":30149:30241  function totalInvesters() public view returns (uint256) {... */\n      jump(tag_51)\n        /* \"smartContract_flat.sol\":28988:29042  mapping(uint256 => uint256) public ownerSurplusToAdmin */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_51\n      tag_87\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_87:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"smartContract_flat.sol\":28873:28921  mapping(uint256 => uint256) public burningAmount */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_51\n      tag_92\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_92:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"smartContract_flat.sol\":19947:20185  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_27\n      tag_97\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"smartContract_flat.sol\":29674:30035  function initialize(... */\n    tag_30:\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19258:19281  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"smartContract_flat.sol\":29816:29827  initialized */\n      and(0xff, sload(0x04))\n        /* \"smartContract_flat.sol\":29816:29835  initialized != true */\n      iszero\n      iszero\n        /* \"smartContract_flat.sol\":29816:29827  initialized */\n      0x01\n        /* \"smartContract_flat.sol\":29816:29835  initialized != true */\n      sub\n        /* \"smartContract_flat.sol\":29808:29859  require(initialized != true, \"Already Initialized\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4358:4360   */\n      0x20\n        /* \"smartContract_flat.sol\":29808:29859  require(initialized != true, \"Already Initialized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4340:4361   */\n      mstore\n        /* \"#utility.yul\":4397:4399   */\n      0x13\n        /* \"#utility.yul\":4377:4395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4370:4400   */\n      mstore\n      shl(0x6a, 0x105b1c9958591e48125b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":4416:4434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4409:4458   */\n      mstore\n        /* \"#utility.yul\":4475:4493   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":29808:29859  require(initialized != true, \"Already Initialized\") */\n      tag_104\n        /* \"#utility.yul\":4156:4499   */\n      jump\n        /* \"smartContract_flat.sol\":29808:29859  require(initialized != true, \"Already Initialized\") */\n    tag_107:\n        /* \"smartContract_flat.sol\":29870:29874  Coin */\n      0x02\n        /* \"smartContract_flat.sol\":29870:29889  Coin = Token(_Coin) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n      0x01\n        /* \"smartContract_flat.sol\":29900:29937  AdminAddress = address(_adminAddress) */\n      dup1\n      sload\n      swap2\n      dup7\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":29948:29966  Coin.transferPrice */\n      0xb45ee9ef\n        /* \"smartContract_flat.sol\":29967:29974  owner() */\n      tag_110\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smartContract_flat.sol\":29967:29974  owner() */\n    tag_110:\n        /* \"smartContract_flat.sol\":29948:29998  Coin.transferPrice(owner(), _adminAddress, amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4762:4777   */\n      swap2\n      dup3\n      and\n        /* \"smartContract_flat.sol\":29948:29998  Coin.transferPrice(owner(), _adminAddress, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4744:4778   */\n      mstore\n        /* \"#utility.yul\":4814:4829   */\n      swap1\n      dup6\n      and\n        /* \"#utility.yul\":4794:4812   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4787:4830   */\n      mstore\n        /* \"#utility.yul\":4846:4864   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4839:4873   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":29948:29998  Coin.transferPrice(owner(), _adminAddress, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n        /* \"smartContract_flat.sol\":30009:30020  initialized */\n      0x04\n        /* \"smartContract_flat.sol\":30009:30027  initialized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"smartContract_flat.sol\":30023:30027  true */\n      0x01\n        /* \"smartContract_flat.sol\":30009:30027  initialized = true */\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"smartContract_flat.sol\":29674:30035  function initialize(... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":31382:32214  function swapTokenWithBNB(uint256 id, address user) public payable {... */\n    tag_34:\n        /* \"smartContract_flat.sol\":31482:31494  AdminAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"smartContract_flat.sol\":31468:31478  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":31468:31494  msg.sender == AdminAddress */\n      eq\n        /* \"smartContract_flat.sol\":31460:31518  require(msg.sender == AdminAddress, \"Only Admin can Swap\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5086:5088   */\n      0x20\n        /* \"smartContract_flat.sol\":31460:31518  require(msg.sender == AdminAddress, \"Only Admin can Swap\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5068:5089   */\n      mstore\n        /* \"#utility.yul\":5125:5127   */\n      0x13\n        /* \"#utility.yul\":5105:5123   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5098:5128   */\n      mstore\n      shl(0x6c, 0x04f6e6c792041646d696e2063616e205377617)\n        /* \"#utility.yul\":5144:5162   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5137:5186   */\n      mstore\n        /* \"#utility.yul\":5203:5221   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":31460:31518  require(msg.sender == AdminAddress, \"Only Admin can Swap\") */\n      tag_104\n        /* \"#utility.yul\":4884:5227   */\n      jump\n        /* \"smartContract_flat.sol\":31460:31518  require(msg.sender == AdminAddress, \"Only Admin can Swap\") */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":31557:31570  buyInfo[user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31557:31564  buyInfo */\n      0x05\n        /* \"smartContract_flat.sol\":31557:31570  buyInfo[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":31557:31574  buyInfo[user][id] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":31557:31577  buyInfo[user][id].ID */\n      sload\n        /* \"smartContract_flat.sol\":31551:31577  id == buyInfo[user][id].ID */\n      dup3\n      eq\n        /* \"smartContract_flat.sol\":31529:31651  require(... */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5434:5436   */\n      0x20\n        /* \"smartContract_flat.sol\":31529:31651  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5416:5437   */\n      mstore\n        /* \"#utility.yul\":5473:5475   */\n      0x2e\n        /* \"#utility.yul\":5453:5471   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5446:5476   */\n      mstore\n        /* \"#utility.yul\":5512:5546   */\n      0x4572726f723a204e6f7420612076616c6964204944206f7220506c6561736520\n        /* \"#utility.yul\":5492:5510   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5485:5547   */\n      mstore\n      shl(0x91, 0x313abc9039b7b6b2903a37b5b2b7)\n        /* \"#utility.yul\":5563:5581   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5556:5600   */\n      mstore\n        /* \"#utility.yul\":5617:5636   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":31529:31651  require(... */\n      tag_104\n        /* \"#utility.yul\":5232:5642   */\n      jump\n        /* \"smartContract_flat.sol\":31529:31651  require(... */\n    tag_120:\n        /* \"smartContract_flat.sol\":31708:31731  ownerSurplusToAdmin[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31708:31727  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31708:31731  ownerSurplusToAdmin[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31684:31688  Coin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"smartContract_flat.sol\":31684:31696  Coin.balance */\n      0xe3d670d7\n        /* \"smartContract_flat.sol\":31697:31704  owner() */\n      tag_123\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smartContract_flat.sol\":31697:31704  owner() */\n    tag_123:\n        /* \"smartContract_flat.sol\":31684:31705  Coin.balance(owner()) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1328:1360   */\n      swap1\n      swap2\n      and\n        /* \"smartContract_flat.sol\":31684:31705  Coin.balance(owner()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1310:1361   */\n      mstore\n        /* \"#utility.yul\":1283:1301   */\n      0x24\n      add\n        /* \"smartContract_flat.sol\":31684:31705  Coin.balance(owner()) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"smartContract_flat.sol\":31684:31731  Coin.balance(owner()) > ownerSurplusToAdmin[id] */\n      gt\n        /* \"smartContract_flat.sol\":31662:31800  require(... */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6038:6040   */\n      0x20\n        /* \"smartContract_flat.sol\":31662:31800  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6020:6041   */\n      mstore\n        /* \"#utility.yul\":6077:6079   */\n      0x29\n        /* \"#utility.yul\":6057:6075   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6050:6080   */\n      mstore\n        /* \"#utility.yul\":6116:6150   */\n      0x4572726f723a204f776e657220646f6573206e6f74206861766520656e6f7567\n        /* \"#utility.yul\":6096:6114   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6089:6151   */\n      mstore\n      shl(0xb8, 0x682062616c616e6365)\n        /* \"#utility.yul\":6167:6185   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6160:6199   */\n      mstore\n        /* \"#utility.yul\":6216:6235   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":31662:31800  require(... */\n      tag_104\n        /* \"#utility.yul\":5836:6241   */\n      jump\n        /* \"smartContract_flat.sol\":31662:31800  require(... */\n    tag_129:\n        /* \"smartContract_flat.sol\":31850:31873  ownerSurplusToAdmin[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31850:31869  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31850:31873  ownerSurplusToAdmin[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31819:31829  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":31811:31830  buyInfo[msg.sender] */\n      dup5\n      mstore\n        /* \"smartContract_flat.sol\":31811:31818  buyInfo */\n      0x05\n        /* \"smartContract_flat.sol\":31811:31830  buyInfo[msg.sender] */\n      dup1\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"smartContract_flat.sol\":31811:31834  buyInfo[msg.sender][id] */\n      dup8\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"smartContract_flat.sol\":31811:31847  buyInfo[msg.sender][id].ownerSurplus */\n      add\n        /* \"smartContract_flat.sol\":31811:31873  buyInfo[msg.sender][id].ownerSurplus = ownerSurplusToAdmin[id] */\n      sstore\n        /* \"smartContract_flat.sol\":31884:31888  Coin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"smartContract_flat.sol\":31884:31902  Coin.transferPrice */\n      0xb45ee9ef\n        /* \"smartContract_flat.sol\":31903:31910  owner() */\n      tag_132\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smartContract_flat.sol\":31903:31910  owner() */\n    tag_132:\n        /* \"smartContract_flat.sol\":31912:31924  AdminAddress */\n      sload(0x01)\n      0x00\n        /* \"smartContract_flat.sol\":31926:31949  ownerSurplusToAdmin[id] */\n      dup7\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31926:31945  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31926:31949  ownerSurplusToAdmin[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31884:31950  Coin.transferPrice(owner(), AdminAddress, ownerSurplusToAdmin[id]) */\n      swap1\n      mload\n      0xe0\n      dup6\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4762:4777   */\n      swap4\n      dup5\n      and\n        /* \"smartContract_flat.sol\":31884:31950  Coin.transferPrice(owner(), AdminAddress, ownerSurplusToAdmin[id]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4744:4778   */\n      mstore\n        /* \"smartContract_flat.sol\":31912:31924  AdminAddress */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4794:4812   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4787:4830   */\n      mstore\n        /* \"#utility.yul\":4846:4864   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4839:4873   */\n      mstore\n        /* \"#utility.yul\":4679:4697   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":31884:31950  Coin.transferPrice(owner(), AdminAddress, ownerSurplusToAdmin[id]) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n        /* \"smartContract_flat.sol\":31979:32002  ownerSurplusToAdmin[id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31979:31998  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31979:32002  ownerSurplusToAdmin[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31974:32019  (1 * ownerSurplusToAdmin[id]).div(1000000000) */\n      tag_137\n      swap2\n      pop\n        /* \"smartContract_flat.sol\":32008:32018  1000000000 */\n      0x3b9aca00\n      swap1\n        /* \"smartContract_flat.sol\":31975:32002  1 * ownerSurplusToAdmin[id] */\n      tag_138\n      swap1\n        /* \"smartContract_flat.sol\":31975:31976  1 */\n      0x01\n        /* \"smartContract_flat.sol\":31975:32002  1 * ownerSurplusToAdmin[id] */\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"smartContract_flat.sol\":31974:32007  (1 * ownerSurplusToAdmin[id]).div */\n      swap1\n      tag_140\n        /* \"smartContract_flat.sol\":31974:32019  (1 * ownerSurplusToAdmin[id]).div(1000000000) */\n      jump\t// in\n    tag_137:\n      pop\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":32030:32066  payable(owner()).transfer(msg.value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"smartContract_flat.sol\":32056:32065  msg.value */\n      callvalue\n        /* \"smartContract_flat.sol\":32030:32066  payable(owner()).transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap3\n        /* \"smartContract_flat.sol\":32056:32065  msg.value */\n      swap1\n      swap2\n        /* \"smartContract_flat.sol\":32030:32066  payable(owner()).transfer(msg.value) */\n      dup2\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      dup2\n        /* \"smartContract_flat.sol\":32030:32066  payable(owner()).transfer(msg.value) */\n      dup2\n        /* \"smartContract_flat.sol\":32056:32065  msg.value */\n      dup6\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      dup9\n        /* \"smartContract_flat.sol\":32030:32066  payable(owner()).transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n        /* \"smartContract_flat.sol\":32085:32095  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":32077:32096  buyInfo[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":32077:32084  buyInfo */\n      0x05\n        /* \"smartContract_flat.sol\":32077:32096  buyInfo[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":32077:32100  buyInfo[msg.sender][id] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":32121:32130  msg.value */\n      callvalue\n        /* \"smartContract_flat.sol\":32077:32118  buyInfo[msg.sender][id].BNBchargedByAdmin */\n      0x06\n      swap1\n      swap2\n      add\n        /* \"smartContract_flat.sol\":32077:32130  buyInfo[msg.sender][id].BNBchargedByAdmin = msg.value */\n      dup2\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":32171:32190  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":32171:32194  ownerSurplusToAdmin[id] */\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":32146:32206  swapTokenBNB(msg.sender, ownerSurplusToAdmin[id], msg.value) */\n      dup2\n      mload\n        /* \"#utility.yul\":6753:6804   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":6820:6838   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":6813:6847   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6863:6881   */\n      dup3\n      add\n        /* \"#utility.yul\":6856:6890   */\n      mstore\n        /* \"smartContract_flat.sol\":32146:32206  swapTokenBNB(msg.sender, ownerSurplusToAdmin[id], msg.value) */\n      0xef4025816e2adaebc6e491a322497e5d2067b2f3aa8a2f9a73bda13ec867f2bf\n      swap1\n        /* \"#utility.yul\":6741:6743   */\n      0x60\n        /* \"#utility.yul\":6726:6744   */\n      add\n        /* \"smartContract_flat.sol\":32146:32206  swapTokenBNB(msg.sender, ownerSurplusToAdmin[id], msg.value) */\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smartContract_flat.sol\":31382:32214  function swapTokenWithBNB(uint256 id, address user) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":30043:30141  function setAdminAddress(address _admin) public onlyOwner {... */\n    tag_44:\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19258:19281  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_149:\n        /* \"smartContract_flat.sol\":30112:30124  AdminAddress */\n      0x01\n        /* \"smartContract_flat.sol\":30112:30133  AdminAddress = _admin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":30043:30141  function setAdminAddress(address _admin) public onlyOwner {... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":30378:31374  function buyToken(uint256 amount) public {... */\n    tag_49:\n        /* \"smartContract_flat.sol\":30452:30456  Coin */\n      sload(0x02)\n      0x01\n        /* \"smartContract_flat.sol\":30465:30477  AdminAddress */\n      sload\n        /* \"smartContract_flat.sol\":30452:30478  Coin.balance(AdminAddress) */\n      mload(0x40)\n      shl(0xe0, 0xe3d670d7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":30465:30477  AdminAddress */\n      swap2\n      dup3\n      and\n        /* \"smartContract_flat.sol\":30452:30478  Coin.balance(AdminAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1310:1361   */\n      mstore\n        /* \"smartContract_flat.sol\":30481:30487  amount */\n      dup4\n      swap3\n        /* \"smartContract_flat.sol\":30452:30456  Coin */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"smartContract_flat.sol\":30452:30464  Coin.balance */\n      0xe3d670d7\n      swap1\n        /* \"#utility.yul\":1283:1301   */\n      0x24\n      add\n        /* \"smartContract_flat.sol\":30452:30478  Coin.balance(AdminAddress) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_156:\n        /* \"smartContract_flat.sol\":30452:30487  Coin.balance(AdminAddress) > amount */\n      gt\n        /* \"smartContract_flat.sol\":30430:30556  require(... */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7103:7105   */\n      0x20\n        /* \"smartContract_flat.sol\":30430:30556  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7085:7106   */\n      mstore\n        /* \"#utility.yul\":7142:7144   */\n      0x29\n        /* \"#utility.yul\":7122:7140   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7115:7145   */\n      mstore\n        /* \"#utility.yul\":7181:7215   */\n      0x4572726f723a2041646d696e20646f6573206e6f74206861766520656e6f7567\n        /* \"#utility.yul\":7161:7179   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7154:7216   */\n      mstore\n      shl(0xb8, 0x682062616c616e6365)\n        /* \"#utility.yul\":7232:7250   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7225:7264   */\n      mstore\n        /* \"#utility.yul\":7281:7300   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":30430:30556  require(... */\n      tag_104\n        /* \"#utility.yul\":6901:7306   */\n      jump\n        /* \"smartContract_flat.sol\":30430:30556  require(... */\n    tag_157:\n        /* \"smartContract_flat.sol\":30592:30602  investerID */\n      0x03\n        /* \"smartContract_flat.sol\":30592:30604  investerID++ */\n      dup1\n      sload\n      0x01\n      swap1\n      dup2\n      add\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":30695:30698  100 */\n      0x64\n      swap1\n        /* \"smartContract_flat.sol\":30681:30691  1 * amount */\n      tag_160\n      swap1\n        /* \"smartContract_flat.sol\":30685:30691  amount */\n      dup5\n      swap1\n        /* \"smartContract_flat.sol\":30681:30691  1 * amount */\n      tag_139\n      jump\t// in\n    tag_160:\n        /* \"smartContract_flat.sol\":30680:30698  (1 * amount) / 100 */\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"smartContract_flat.sol\":30660:30677  burningAmount[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":30660:30673  burningAmount */\n      0x07\n        /* \"smartContract_flat.sol\":30660:30677  burningAmount[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":30660:30698  burningAmount[id] = (1 * amount) / 100 */\n      dup2\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":30734:30763  amount.sub(burningAmount[id]) */\n      tag_163\n      swap1\n        /* \"smartContract_flat.sol\":30734:30740  amount */\n      dup4\n      swap1\n        /* \"smartContract_flat.sol\":30734:30744  amount.sub */\n      tag_164\n        /* \"smartContract_flat.sol\":30734:30763  amount.sub(burningAmount[id]) */\n      jump\t// in\n    tag_163:\n        /* \"smartContract_flat.sol\":30709:30731  amountAfterBurning[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":30709:30727  amountAfterBurning */\n      0x08\n        /* \"smartContract_flat.sol\":30709:30731  amountAfterBurning[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":30709:30763  amountAfterBurning[id] = amount.sub(burningAmount[id]) */\n      dup3\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":30774:30778  Coin */\n      sload(0x02)\n      0x01\n        /* \"smartContract_flat.sol\":30793:30805  AdminAddress */\n      sload\n        /* \"smartContract_flat.sol\":30774:30842  Coin.transferPrice(AdminAddress, msg.sender, amountAfterBurning[id]) */\n      swap2\n      mload\n      shl(0xe0, 0xb45ee9ef)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":30793:30805  AdminAddress */\n      swap3\n      dup4\n      and\n        /* \"smartContract_flat.sol\":30774:30842  Coin.transferPrice(AdminAddress, msg.sender, amountAfterBurning[id]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4744:4778   */\n      mstore\n        /* \"smartContract_flat.sol\":30807:30817  msg.sender */\n      caller\n        /* \"#utility.yul\":4794:4812   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4787:4830   */\n      mstore\n        /* \"#utility.yul\":4846:4864   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4839:4873   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"smartContract_flat.sol\":30774:30778  Coin */\n      and\n      swap1\n        /* \"smartContract_flat.sol\":30774:30792  Coin.transferPrice */\n      0xb45ee9ef\n      swap1\n        /* \"#utility.yul\":4679:4697   */\n      0x64\n      add\n        /* \"smartContract_flat.sol\":30774:30842  Coin.transferPrice(AdminAddress, msg.sender, amountAfterBurning[id]) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n        /* \"smartContract_flat.sol\":30884:30894  investerID */\n      0x03\n      dup1\n      sload\n        /* \"smartContract_flat.sol\":30863:30873  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":30855:30874  buyInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":30855:30862  buyInfo */\n      0x05\n        /* \"smartContract_flat.sol\":30855:30874  buyInfo[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":30855:30878  buyInfo[msg.sender][id] */\n      dup9\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"smartContract_flat.sol\":30855:30894  buyInfo[msg.sender][id].ID = investerID */\n      swap4\n      dup5\n      sstore\n        /* \"smartContract_flat.sol\":30939:30954  block.timestamp */\n      timestamp\n        /* \"smartContract_flat.sol\":30905:30936  buyInfo[msg.sender][id].buyTime */\n      0x01\n      dup6\n      add\n        /* \"smartContract_flat.sol\":30905:30954  buyInfo[msg.sender][id].buyTime = block.timestamp */\n      sstore\n        /* \"smartContract_flat.sol\":30965:31002  buyInfo[msg.sender][id].purchaseToken */\n      0x02\n      dup1\n      dup6\n      add\n        /* \"smartContract_flat.sol\":30965:31011  buyInfo[msg.sender][id].purchaseToken = amount */\n      dup11\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":31058:31071  burningAmount */\n      0x07\n        /* \"smartContract_flat.sol\":31058:31075  burningAmount[id] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31022:31055  buyInfo[msg.sender][id].burnToken */\n      swap6\n      dup6\n      add\n        /* \"smartContract_flat.sol\":31022:31075  buyInfo[msg.sender][id].burnToken = burningAmount[id] */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"smartContract_flat.sol\":31121:31139  amountAfterBurning */\n      0x08\n        /* \"smartContract_flat.sol\":31121:31143  amountAfterBurning[id] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31086:31118  buyInfo[msg.sender][id].userGets */\n      0x04\n      swap1\n      swap2\n      add\n        /* \"smartContract_flat.sol\":31086:31143  buyInfo[msg.sender][id].userGets = amountAfterBurning[id] */\n      dup2\n      swap1\n      sstore\n        /* \"smartContract_flat.sol\":31180:31209  amountAfterBurning[id].div(2) */\n      tag_169\n      swap4\n      pop\n        /* \"smartContract_flat.sol\":31121:31143  amountAfterBurning[id] */\n      swap2\n      pop\n        /* \"smartContract_flat.sol\":31180:31206  amountAfterBurning[id].div */\n      tag_140\n        /* \"smartContract_flat.sol\":31180:31209  amountAfterBurning[id].div(2) */\n      jump\t// in\n    tag_169:\n        /* \"smartContract_flat.sol\":31154:31177  ownerSurplusToAdmin[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31154:31173  ownerSurplusToAdmin */\n      0x09\n        /* \"smartContract_flat.sol\":31154:31177  ownerSurplusToAdmin[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":31154:31209  ownerSurplusToAdmin[id] = amountAfterBurning[id].div(2) */\n      sstore\n        /* \"smartContract_flat.sol\":31262:31274  AdminAddress */\n      sload(0x01)\n        /* \"smartContract_flat.sol\":31225:31284  buyTokenDetailsAddresses(msg.sender, AdminAddress, owner()) */\n      0x200e42c44f4b61e64b8298dd340205f3d4fd26f4018958219ac19fa737a4bc93\n      swap1\n        /* \"smartContract_flat.sol\":31250:31260  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":31262:31274  AdminAddress */\n      and\n        /* \"smartContract_flat.sol\":31276:31283  owner() */\n      tag_170\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"smartContract_flat.sol\":19038:19125  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smartContract_flat.sol\":31276:31283  owner() */\n    tag_170:\n        /* \"smartContract_flat.sol\":31225:31284  buyTokenDetailsAddresses(msg.sender, AdminAddress, owner()) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7791:7806   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":7773:7807   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7843:7858   */\n      swap3\n      dup5\n      and\n        /* \"#utility.yul\":7838:7840   */\n      0x20\n        /* \"#utility.yul\":7823:7841   */\n      dup5\n      add\n        /* \"#utility.yul\":7816:7859   */\n      mstore\n        /* \"#utility.yul\":7895:7910   */\n      swap3\n      and\n        /* \"#utility.yul\":7875:7893   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":7868:7911   */\n      mstore\n        /* \"smartContract_flat.sol\":31225:31284  buyTokenDetailsAddresses(msg.sender, AdminAddress, owner()) */\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":7723:7725   */\n      0x60\n        /* \"smartContract_flat.sol\":31225:31284  buyTokenDetailsAddresses(msg.sender, AdminAddress, owner()) */\n      add\n      swap1\n      log1\n        /* \"smartContract_flat.sol\":31324:31341  burningAmount[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":31324:31337  burningAmount */\n      0x07\n        /* \"smartContract_flat.sol\":31324:31341  burningAmount[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31343:31361  amountAfterBurning */\n      0x08\n        /* \"smartContract_flat.sol\":31343:31365  amountAfterBurning[id] */\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"smartContract_flat.sol\":31300:31366  buyTokenDetails(amount, burningAmount[id], amountAfterBurning[id]) */\n      dup2\n      mload\n        /* \"#utility.yul\":8124:8149   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":8165:8183   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":8158:8192   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":8208:8226   */\n      dup2\n      add\n        /* \"#utility.yul\":8201:8235   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"smartContract_flat.sol\":31300:31366  buyTokenDetails(amount, burningAmount[id], amountAfterBurning[id]) */\n      0xea58cb92b8b20e95b17ad470f6f42aeca8d949d80c763c66664d879df9f65ba7\n      swap1\n        /* \"#utility.yul\":8112:8114   */\n      0x60\n        /* \"#utility.yul\":8097:8115   */\n      add\n        /* \"smartContract_flat.sol\":31300:31366  buyTokenDetails(amount, burningAmount[id], amountAfterBurning[id]) */\n      tag_144\n        /* \"#utility.yul\":7922:8241   */\n      jump\n        /* \"smartContract_flat.sol\":30249:30370  function getIdsOfUser(address user) public view returns (uint256[] memory) {... */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":30342:30362  getIDByAddress[user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smartContract_flat.sol\":30342:30356  getIDByAddress */\n      0x06\n        /* \"smartContract_flat.sol\":30342:30362  getIDByAddress[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"smartContract_flat.sol\":30335:30362  return getIDByAddress[user] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"smartContract_flat.sol\":30306:30322  uint256[] memory */\n      0x60\n      swap4\n        /* \"smartContract_flat.sol\":30335:30362  return getIDByAddress[user] */\n      swap3\n      dup4\n      add\n        /* \"smartContract_flat.sol\":30342:30362  getIDByAddress[user] */\n      dup3\n        /* \"smartContract_flat.sol\":30335:30362  return getIDByAddress[user] */\n      dup3\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_177:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_177\n      jumpi\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"smartContract_flat.sol\":30249:30370  function getIdsOfUser(address user) public view returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":19689:19792  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19258:19281  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_181:\n        /* \"smartContract_flat.sol\":19754:19784  _transferOwnership(address(0)) */\n      tag_184\n        /* \"smartContract_flat.sol\":19781:19782  0 */\n      0x00\n        /* \"smartContract_flat.sol\":19754:19772  _transferOwnership */\n      tag_185\n        /* \"smartContract_flat.sol\":19754:19784  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_184:\n        /* \"smartContract_flat.sol\":19689:19792  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"smartContract_flat.sol\":19947:20185  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"smartContract_flat.sol\":19084:19091  address */\n      0x00\n        /* \"smartContract_flat.sol\":19111:19117  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"smartContract_flat.sol\":4423:4433  msg.sender */\n      caller\n        /* \"smartContract_flat.sol\":19258:19281  owner() == _msgSender() */\n      eq\n        /* \"smartContract_flat.sol\":19250:19318  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":20050:20072  newOwner != address(0) */\n      dup2\n      and\n        /* \"smartContract_flat.sol\":20028:20138  require(... */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8448:8450   */\n      0x20\n        /* \"smartContract_flat.sol\":20028:20138  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8430:8451   */\n      mstore\n        /* \"#utility.yul\":8487:8489   */\n      0x26\n        /* \"#utility.yul\":8467:8485   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8460:8490   */\n      mstore\n        /* \"#utility.yul\":8526:8560   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8506:8524   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8499:8561   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8577:8595   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8570:8606   */\n      mstore\n        /* \"#utility.yul\":8623:8642   */\n      0x84\n      add\n        /* \"smartContract_flat.sol\":20028:20138  require(... */\n      tag_104\n        /* \"#utility.yul\":8246:8648   */\n      jump\n        /* \"smartContract_flat.sol\":20028:20138  require(... */\n    tag_194:\n        /* \"smartContract_flat.sol\":20149:20177  _transferOwnership(newOwner) */\n      tag_197\n        /* \"smartContract_flat.sol\":20168:20176  newOwner */\n      dup2\n        /* \"smartContract_flat.sol\":20149:20167  _transferOwnership */\n      tag_185\n        /* \"smartContract_flat.sol\":20149:20177  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_197:\n        /* \"smartContract_flat.sol\":19947:20185  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":25455:25553  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n        /* \"smartContract_flat.sol\":25513:25520  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":25540:25545  a / b */\n      tag_200\n        /* \"smartContract_flat.sol\":25544:25545  b */\n      dup3\n        /* \"smartContract_flat.sol\":25540:25541  a */\n      dup5\n        /* \"smartContract_flat.sol\":25540:25545  a / b */\n      tag_162\n      jump\t// in\n    tag_200:\n        /* \"smartContract_flat.sol\":25533:25545  return a / b */\n      swap4\n        /* \"smartContract_flat.sol\":25455:25553  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smartContract_flat.sol\":24699:24797  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_164:\n        /* \"smartContract_flat.sol\":24757:24764  uint256 */\n      0x00\n        /* \"smartContract_flat.sol\":24784:24789  a - b */\n      tag_200\n        /* \"smartContract_flat.sol\":24788:24789  b */\n      dup3\n        /* \"smartContract_flat.sol\":24784:24785  a */\n      dup5\n        /* \"smartContract_flat.sol\":24784:24789  a - b */\n      tag_203\n      jump\t// in\n        /* \"smartContract_flat.sol\":20345:20536  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_185:\n        /* \"smartContract_flat.sol\":20419:20435  address oldOwner */\n      0x00\n        /* \"smartContract_flat.sol\":20438:20444  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smartContract_flat.sol\":20455:20472  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"smartContract_flat.sol\":20438:20444  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"smartContract_flat.sol\":20419:20435  address oldOwner */\n      swap1\n        /* \"smartContract_flat.sol\":20488:20528  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"smartContract_flat.sol\":20408:20536  {... */\n      pop\n        /* \"smartContract_flat.sol\":20345:20536  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":206:344   */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":288:319   */\n      dup2\n      and\n        /* \"#utility.yul\":278:320   */\n      dup2\n      eq\n        /* \"#utility.yul\":268:338   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":334:335   */\n      0x00\n        /* \"#utility.yul\":331:332   */\n      dup1\n        /* \"#utility.yul\":324:336   */\n      revert\n        /* \"#utility.yul\":349:832   */\n    tag_29:\n        /* \"#utility.yul\":439:445   */\n      0x00\n        /* \"#utility.yul\":447:453   */\n      dup1\n        /* \"#utility.yul\":455:461   */\n      0x00\n        /* \"#utility.yul\":508:510   */\n      0x60\n        /* \"#utility.yul\":496:505   */\n      dup5\n        /* \"#utility.yul\":487:494   */\n      dup7\n        /* \"#utility.yul\":483:506   */\n      sub\n        /* \"#utility.yul\":479:511   */\n      slt\n        /* \"#utility.yul\":476:528   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":524:525   */\n      0x00\n        /* \"#utility.yul\":521:522   */\n      dup1\n        /* \"#utility.yul\":514:526   */\n      revert\n        /* \"#utility.yul\":476:528   */\n    tag_212:\n        /* \"#utility.yul\":563:572   */\n      dup4\n        /* \"#utility.yul\":550:573   */\n      calldataload\n        /* \"#utility.yul\":582:620   */\n      tag_213\n        /* \"#utility.yul\":614:619   */\n      dup2\n        /* \"#utility.yul\":582:620   */\n      tag_205\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":639:644   */\n      swap3\n      pop\n        /* \"#utility.yul\":696:698   */\n      0x20\n        /* \"#utility.yul\":681:699   */\n      dup5\n      add\n        /* \"#utility.yul\":668:700   */\n      calldataload\n        /* \"#utility.yul\":709:749   */\n      tag_214\n        /* \"#utility.yul\":668:700   */\n      dup2\n        /* \"#utility.yul\":709:749   */\n      tag_205\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":349:832   */\n      swap3\n      swap6\n        /* \"#utility.yul\":768:775   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":822:824   */\n      0x40\n        /* \"#utility.yul\":807:825   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":794:826   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":349:832   */\n      jump\t// out\n        /* \"#utility.yul\":837:1159   */\n    tag_33:\n        /* \"#utility.yul\":905:911   */\n      0x00\n        /* \"#utility.yul\":913:919   */\n      dup1\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":954:963   */\n      dup4\n        /* \"#utility.yul\":945:952   */\n      dup6\n        /* \"#utility.yul\":941:964   */\n      sub\n        /* \"#utility.yul\":937:969   */\n      slt\n        /* \"#utility.yul\":934:986   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":982:983   */\n      0x00\n        /* \"#utility.yul\":979:980   */\n      dup1\n        /* \"#utility.yul\":972:984   */\n      revert\n        /* \"#utility.yul\":934:986   */\n    tag_216:\n        /* \"#utility.yul\":1018:1027   */\n      dup3\n        /* \"#utility.yul\":1005:1028   */\n      calldataload\n        /* \"#utility.yul\":995:1028   */\n      swap2\n      pop\n        /* \"#utility.yul\":1078:1080   */\n      0x20\n        /* \"#utility.yul\":1067:1076   */\n      dup4\n        /* \"#utility.yul\":1063:1081   */\n      add\n        /* \"#utility.yul\":1050:1082   */\n      calldataload\n        /* \"#utility.yul\":1091:1129   */\n      tag_217\n        /* \"#utility.yul\":1123:1128   */\n      dup2\n        /* \"#utility.yul\":1091:1129   */\n      tag_205\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1148:1153   */\n      dup1\n        /* \"#utility.yul\":1138:1153   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":837:1159   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1372:1626   */\n    tag_43:\n        /* \"#utility.yul\":1431:1437   */\n      0x00\n        /* \"#utility.yul\":1484:1486   */\n      0x20\n        /* \"#utility.yul\":1472:1481   */\n      dup3\n        /* \"#utility.yul\":1463:1470   */\n      dup5\n        /* \"#utility.yul\":1459:1482   */\n      sub\n        /* \"#utility.yul\":1455:1487   */\n      slt\n        /* \"#utility.yul\":1452:1504   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":1500:1501   */\n      0x00\n        /* \"#utility.yul\":1497:1498   */\n      dup1\n        /* \"#utility.yul\":1490:1502   */\n      revert\n        /* \"#utility.yul\":1452:1504   */\n    tag_220:\n        /* \"#utility.yul\":1539:1548   */\n      dup2\n        /* \"#utility.yul\":1526:1549   */\n      calldataload\n        /* \"#utility.yul\":1558:1596   */\n      tag_200\n        /* \"#utility.yul\":1590:1595   */\n      dup2\n        /* \"#utility.yul\":1558:1596   */\n      tag_205\n      jump\t// in\n        /* \"#utility.yul\":1631:1811   */\n    tag_48:\n        /* \"#utility.yul\":1690:1696   */\n      0x00\n        /* \"#utility.yul\":1743:1745   */\n      0x20\n        /* \"#utility.yul\":1731:1740   */\n      dup3\n        /* \"#utility.yul\":1722:1729   */\n      dup5\n        /* \"#utility.yul\":1718:1741   */\n      sub\n        /* \"#utility.yul\":1714:1746   */\n      slt\n        /* \"#utility.yul\":1711:1763   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1759:1760   */\n      0x00\n        /* \"#utility.yul\":1756:1757   */\n      dup1\n        /* \"#utility.yul\":1749:1761   */\n      revert\n        /* \"#utility.yul\":1711:1763   */\n    tag_223:\n      pop\n        /* \"#utility.yul\":1782:1805   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1631:1811   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1998:2630   */\n    tag_61:\n        /* \"#utility.yul\":2169:2171   */\n      0x20\n        /* \"#utility.yul\":2221:2242   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2291:2304   */\n      dup3\n      mload\n        /* \"#utility.yul\":2194:2212   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2313:2335   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2140:2144   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2169:2171   */\n      swap1\n        /* \"#utility.yul\":2392:2407   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2366:2368   */\n      0x40\n        /* \"#utility.yul\":2351:2369   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2140:2144   */\n      dup5\n        /* \"#utility.yul\":2435:2604   */\n    tag_226:\n        /* \"#utility.yul\":2449:2455   */\n      dup2\n        /* \"#utility.yul\":2446:2447   */\n      dup2\n        /* \"#utility.yul\":2443:2456   */\n      lt\n        /* \"#utility.yul\":2435:2604   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2510:2523   */\n      dup4\n      mload\n        /* \"#utility.yul\":2498:2524   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2579:2594   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2544:2556   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2471:2472   */\n      0x01\n        /* \"#utility.yul\":2464:2473   */\n      add\n        /* \"#utility.yul\":2435:2604   */\n      jump(tag_226)\n    tag_228:\n      pop\n        /* \"#utility.yul\":2621:2624   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1998:2630   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2635:2957   */\n    tag_68:\n        /* \"#utility.yul\":2703:2709   */\n      0x00\n        /* \"#utility.yul\":2711:2717   */\n      dup1\n        /* \"#utility.yul\":2764:2766   */\n      0x40\n        /* \"#utility.yul\":2752:2761   */\n      dup4\n        /* \"#utility.yul\":2743:2750   */\n      dup6\n        /* \"#utility.yul\":2739:2762   */\n      sub\n        /* \"#utility.yul\":2735:2767   */\n      slt\n        /* \"#utility.yul\":2732:2784   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2777:2778   */\n      dup1\n        /* \"#utility.yul\":2770:2782   */\n      revert\n        /* \"#utility.yul\":2732:2784   */\n    tag_230:\n        /* \"#utility.yul\":2819:2828   */\n      dup3\n        /* \"#utility.yul\":2806:2829   */\n      calldataload\n        /* \"#utility.yul\":2838:2876   */\n      tag_231\n        /* \"#utility.yul\":2870:2875   */\n      dup2\n        /* \"#utility.yul\":2838:2876   */\n      tag_205\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2895:2900   */\n      swap5\n        /* \"#utility.yul\":2947:2949   */\n      0x20\n        /* \"#utility.yul\":2932:2950   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2919:2951   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2635:2957   */\n      jump\t// out\n        /* \"#utility.yul\":3795:4151   */\n    tag_105:\n        /* \"#utility.yul\":3997:3999   */\n      0x20\n        /* \"#utility.yul\":3979:4000   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4016:4034   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4009:4039   */\n      mstore\n        /* \"#utility.yul\":4075:4109   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4070:4072   */\n      0x40\n        /* \"#utility.yul\":4055:4073   */\n      dup3\n      add\n        /* \"#utility.yul\":4048:4110   */\n      mstore\n        /* \"#utility.yul\":4142:4144   */\n      0x60\n        /* \"#utility.yul\":4127:4145   */\n      add\n      swap1\n        /* \"#utility.yul\":3795:4151   */\n      jump\t// out\n        /* \"#utility.yul\":5647:5831   */\n    tag_128:\n        /* \"#utility.yul\":5717:5723   */\n      0x00\n        /* \"#utility.yul\":5770:5772   */\n      0x20\n        /* \"#utility.yul\":5758:5767   */\n      dup3\n        /* \"#utility.yul\":5749:5756   */\n      dup5\n        /* \"#utility.yul\":5745:5768   */\n      sub\n        /* \"#utility.yul\":5741:5773   */\n      slt\n        /* \"#utility.yul\":5738:5790   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":5786:5787   */\n      0x00\n        /* \"#utility.yul\":5783:5784   */\n      dup1\n        /* \"#utility.yul\":5776:5788   */\n      revert\n        /* \"#utility.yul\":5738:5790   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":5809:5825   */\n      mload\n      swap2\n        /* \"#utility.yul\":5647:5831   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6246:6373   */\n    tag_206:\n        /* \"#utility.yul\":6307:6317   */\n      0x4e487b71\n        /* \"#utility.yul\":6302:6305   */\n      0xe0\n        /* \"#utility.yul\":6298:6318   */\n      shl\n        /* \"#utility.yul\":6295:6296   */\n      0x00\n        /* \"#utility.yul\":6288:6319   */\n      mstore\n        /* \"#utility.yul\":6338:6342   */\n      0x11\n        /* \"#utility.yul\":6335:6336   */\n      0x04\n        /* \"#utility.yul\":6328:6343   */\n      mstore\n        /* \"#utility.yul\":6362:6366   */\n      0x24\n        /* \"#utility.yul\":6359:6360   */\n      0x00\n        /* \"#utility.yul\":6352:6367   */\n      revert\n        /* \"#utility.yul\":6378:6546   */\n    tag_139:\n        /* \"#utility.yul\":6418:6425   */\n      0x00\n        /* \"#utility.yul\":6484:6485   */\n      dup2\n        /* \"#utility.yul\":6480:6481   */\n      0x00\n        /* \"#utility.yul\":6476:6482   */\n      not\n        /* \"#utility.yul\":6472:6486   */\n      div\n        /* \"#utility.yul\":6469:6470   */\n      dup4\n        /* \"#utility.yul\":6466:6487   */\n      gt\n        /* \"#utility.yul\":6461:6462   */\n      dup3\n        /* \"#utility.yul\":6454:6463   */\n      iszero\n        /* \"#utility.yul\":6447:6464   */\n      iszero\n        /* \"#utility.yul\":6443:6488   */\n      and\n        /* \"#utility.yul\":6440:6511   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":6491:6509   */\n      tag_245\n      tag_206\n      jump\t// in\n    tag_245:\n      pop\n        /* \"#utility.yul\":6531:6540   */\n      mul\n      swap1\n        /* \"#utility.yul\":6378:6546   */\n      jump\t// out\n        /* \"#utility.yul\":7311:7528   */\n    tag_162:\n        /* \"#utility.yul\":7351:7352   */\n      0x00\n        /* \"#utility.yul\":7377:7378   */\n      dup3\n        /* \"#utility.yul\":7367:7499   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":7421:7431   */\n      0x4e487b71\n        /* \"#utility.yul\":7416:7419   */\n      0xe0\n        /* \"#utility.yul\":7412:7432   */\n      shl\n        /* \"#utility.yul\":7409:7410   */\n      0x00\n        /* \"#utility.yul\":7402:7433   */\n      mstore\n        /* \"#utility.yul\":7456:7460   */\n      0x12\n        /* \"#utility.yul\":7453:7454   */\n      0x04\n        /* \"#utility.yul\":7446:7461   */\n      mstore\n        /* \"#utility.yul\":7484:7488   */\n      0x24\n        /* \"#utility.yul\":7481:7482   */\n      0x00\n        /* \"#utility.yul\":7474:7489   */\n      revert\n        /* \"#utility.yul\":7367:7499   */\n    tag_249:\n      pop\n        /* \"#utility.yul\":7513:7522   */\n      div\n      swap1\n        /* \"#utility.yul\":7311:7528   */\n      jump\t// out\n        /* \"#utility.yul\":8653:8778   */\n    tag_203:\n        /* \"#utility.yul\":8693:8697   */\n      0x00\n        /* \"#utility.yul\":8721:8722   */\n      dup3\n        /* \"#utility.yul\":8718:8719   */\n      dup3\n        /* \"#utility.yul\":8715:8723   */\n      lt\n        /* \"#utility.yul\":8712:8746   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":8726:8744   */\n      tag_255\n      tag_206\n      jump\t// in\n    tag_255:\n      pop\n        /* \"#utility.yul\":8763:8772   */\n      sub\n      swap1\n        /* \"#utility.yul\":8653:8778   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d954b4ac9af40bf75580df01c36b305865c06aaea7a6b55a40109873802d09ef64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_733": {
									"entryPoint": null,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_813": {
									"entryPoint": 31,
									"id": 813,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF30 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAF0AFEC9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAF0AFEC9 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xD09BF0E4 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xEE238506 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x8637856D EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xA77B2E37 EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C1E816D GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x2C1E816D EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x2D296BF1 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3A84374B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x5F4FD1F7 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x158EF93E EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x23660BD5 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x28F661E3 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x112 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x147 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xD68 JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x17C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xDCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0xBD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP6 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x11E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x17C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x201 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E48125B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH4 0xB45EE9EF PUSH2 0x479 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4F6E6C792041646D696E2063616E205377617 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 EQ PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A204E6F7420612076616C6964204944206F7220506C6561736520 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x313ABC9039B7B6B2903A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE3D670D7 PUSH2 0x5FE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x642 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0xE73 JUMP JUMPDEST GT PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A204F776E657220646F6573206E6F74206861766520656E6F7567 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x682062616C616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD CALLER DUP5 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP8 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 ADD SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB45EE9EF PUSH2 0x70F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x785 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B3 SWAP2 POP PUSH4 0x3B9ACA00 SWAP1 PUSH2 0x7AD SWAP1 PUSH1 0x1 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 PUSH2 0xCA3 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 CALLVALUE PUSH1 0x6 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH1 0x9 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD MSTORE PUSH32 0xEF4025816E2ADAEBC6E491A322497E5D2067B2F3AA8A2F9A73BDA13EC867F2BF SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3D670D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE3D670D7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xE73 JUMP JUMPDEST GT PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A2041646D696E20646F6573206E6F74206861766520656E6F7567 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x682062616C616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x996 SWAP1 DUP5 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x9BC SWAP1 DUP4 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SWAP2 MLOAD PUSH4 0xB45EE9EF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE AND SWAP1 PUSH4 0xB45EE9EF SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP5 SSTORE TIMESTAMP PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD DUP11 SWAP1 SSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP6 DUP6 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH2 0xA94 SWAP4 POP SWAP2 POP PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH32 0x200E42C44F4B61E64B8298DD340205F3D4FD26F4018958219AC19FA737A4BC93 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAE5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x8 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD DUP7 DUP2 MSTORE SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xEA58CB92B8B20E95B17AD470F6F42AECA8D949D80C763C66664D879DF9F65BA7 SWAP1 PUSH1 0x60 ADD PUSH2 0x850 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBB2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0xC06 PUSH1 0x0 PUSH2 0xCC2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH2 0xCA0 DUP2 PUSH2 0xCC2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAF DUP3 DUP5 PUSH2 0xEC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAF DUP3 DUP5 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xD47 DUP2 PUSH2 0xD12 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xD57 DUP2 PUSH2 0xD12 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xD8D DUP2 PUSH2 0xD12 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAF DUP2 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE06 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDEA JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE30 DUP2 PUSH2 0xD12 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEBC JUMPI PUSH2 0xEBC PUSH2 0xE8C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEDE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEF5 JUMPI PUSH2 0xEF5 PUSH2 0xE8C JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SLOAD 0xB4 0xAC SWAP11 DELEGATECALL SIGNEXTEND 0xF7 SSTORE DUP1 0xDF ADD 0xC3 PUSH12 0x305865C06AAEA7A6B55A4010 SWAP9 PUSH20 0x802D09EF64736F6C634300080D00330000000000 ",
							"sourceMap": "28559:3737:0:-:0;;;;;;;;;;;;-1:-1:-1;18917:32:0;4423:10;18917:18;:32::i;:::-;28559:3737;;20345:191;20419:16;20438:6;;-1:-1:-1;;;;;20455:17:0;;;-1:-1:-1;;;;;;20455:17:0;;;;;;20488:40;;20438:6;;;;;;;20488:40;;20419:16;20488:40;20408:128;20345:191;:::o;28559:3737::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AdminAddress_1219": {
									"entryPoint": null,
									"id": 1219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Coin_1222": {
									"entryPoint": null,
									"id": 1222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_813": {
									"entryPoint": 3266,
									"id": 813,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@amountAfterBurning_1246": {
									"entryPoint": null,
									"id": 1246,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burningAmount_1242": {
									"entryPoint": null,
									"id": 1242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyInfo_1233": {
									"entryPoint": null,
									"id": 1233,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyToken_1513": {
									"entryPoint": 2216,
									"id": 1513,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_1120": {
									"entryPoint": 3235,
									"id": 1120,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getIdsOfUser_1372": {
									"entryPoint": 2918,
									"id": 1372,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_1339": {
									"entryPoint": 948,
									"id": 1339,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@initialized_1226": {
									"entryPoint": null,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerSurplusToAdmin_1250": {
									"entryPoint": null,
									"id": 1250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_742": {
									"entryPoint": null,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_770": {
									"entryPoint": 3026,
									"id": 770,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAdminAddress_1351": {
									"entryPoint": 2140,
									"id": 1351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1090": {
									"entryPoint": 3254,
									"id": 1090,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapTokenWithBNB_1622": {
									"entryPoint": 1267,
									"id": 1622,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@totalInvesters_1359": {
									"entryPoint": null,
									"id": 1359,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_793": {
									"entryPoint": 3080,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_Token_$900t_addresst_uint256": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 3432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Token_$900__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a83764174c827403df7000bbb07579f7f3c17a5b004ab66455a8f2b7ccea5ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e337f72354e030c1ede5b0b51321b9727668b85fa6b6511b472b1588800c131__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_Token": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8780:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "154:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "78:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "89:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "100:4:1",
														"type": ""
													}
												],
												"src": "14:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "258:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "322:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "331:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "324:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "324:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "324:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "281:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "292:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "307:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "312:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "303:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "303:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "316:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "299:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "299:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "288:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "288:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "278:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "278:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:50:1"
															},
															"nodeType": "YulIf",
															"src": "268:70:1"
														}
													]
												},
												"name": "validator_revert_contract_Token",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "247:5:1",
														"type": ""
													}
												],
												"src": "206:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "466:366:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "521:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "524:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "514:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "514:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "514:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "487:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "496:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "483:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "479:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:32:1"
															},
															"nodeType": "YulIf",
															"src": "476:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "537:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "550:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "550:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "541:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "614:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "582:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "582:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "629:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "639:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "629:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "653:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "696:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "657:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "741:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "709:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "709:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "709:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "758:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "768:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "784:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "811:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "822:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "794:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "794:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_Token_$900t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "416:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "427:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "439:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "455:6:1",
														"type": ""
													}
												],
												"src": "349:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:235:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "970:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "979:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "982:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "972:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "972:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "972:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "945:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "954:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "941:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "966:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "937:32:1"
															},
															"nodeType": "YulIf",
															"src": "934:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "995:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1018:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1005:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1005:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1037:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1067:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1078:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1063:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1050:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1041:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1123:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "1091:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1091:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1138:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1148:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1138:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "882:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "893:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "905:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "913:6:1",
														"type": ""
													}
												],
												"src": "837:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1265:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1275:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1287:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1298:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1283:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1317:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1348:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1353:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1344:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1344:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1357:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1340:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1340:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1328:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1310:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1234:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1245:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1256:4:1",
														"type": ""
													}
												],
												"src": "1164:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1442:184:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1488:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1497:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1500:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1490:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1490:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1490:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1463:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1472:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1459:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1455:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:32:1"
															},
															"nodeType": "YulIf",
															"src": "1452:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1513:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1539:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1526:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1517:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1590:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "1558:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1558:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1558:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1605:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1615:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1605:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1408:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1419:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1431:6:1",
														"type": ""
													}
												],
												"src": "1372:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1747:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1756:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1759:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1749:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1749:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1749:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1731:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1718:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:32:1"
															},
															"nodeType": "YulIf",
															"src": "1711:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1772:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1795:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1782:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1772:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1667:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1678:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1690:6:1",
														"type": ""
													}
												],
												"src": "1631:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1927:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1939:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1950:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1927:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1969:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1980:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1886:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1897:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1908:4:1",
														"type": ""
													}
												],
												"src": "1816:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2149:481:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2159:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2169:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2163:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2180:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2198:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2209:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2194:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2184:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2228:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2239:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2221:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2251:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2262:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2255:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2277:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2291:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2281:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2328:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2313:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2313:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2344:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2355:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2366:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2351:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2378:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2396:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2404:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2392:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2382:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2416:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2425:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2420:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2484:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2505:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "2516:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2510:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2510:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2498:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2498:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2498:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2537:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2548:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2553:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2544:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2544:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2537:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2569:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2583:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2591:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2579:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2579:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2446:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2449:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2443:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2457:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2459:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2468:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2471:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2464:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2464:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2459:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2439:3:1",
																"statements": []
															},
															"src": "2435:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2613:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2621:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2613:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2118:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2129:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2140:4:1",
														"type": ""
													}
												],
												"src": "1998:632:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2722:235:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2768:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2777:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2780:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2770:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2770:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2743:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2752:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2739:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2739:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2764:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:32:1"
															},
															"nodeType": "YulIf",
															"src": "2732:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2793:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2819:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2806:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2797:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2870:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Token",
																	"nodeType": "YulIdentifier",
																	"src": "2838:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2838:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2885:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2885:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2909:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2936:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2947:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2932:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2932:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2919:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2919:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2909:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2680:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2691:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2703:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2711:6:1",
														"type": ""
													}
												],
												"src": "2635:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3231:338:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3241:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3253:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3264:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3249:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3249:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3241:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3284:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3295:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3277:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3277:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3322:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3333:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3318:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3318:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3338:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3311:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3311:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3311:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3365:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3376:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3361:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3381:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3354:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3354:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3354:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3408:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3404:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3424:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3397:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3397:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3462:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3447:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3468:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3440:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3506:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3491:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "3512:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3484:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3539:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3550:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3535:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3535:19:1"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "3556:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3528:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3528:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3152:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3163:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3171:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3179:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3187:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3195:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3203:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3211:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3222:4:1",
														"type": ""
													}
												],
												"src": "2962:607:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3688:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3698:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3710:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3721:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3698:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3740:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3755:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3771:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3776:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3767:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3767:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3780:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3763:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3763:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3751:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3733:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Token_$900__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3657:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3668:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3679:4:1",
														"type": ""
													}
												],
												"src": "3574:216:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3969:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3979:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4020:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4031:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4016:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4016:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4009:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4070:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4055:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4075:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4048:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4048:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4142:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4119:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3946:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3960:4:1",
														"type": ""
													}
												],
												"src": "3795:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4330:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4347:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4358:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4340:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4340:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4340:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4397:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4370:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4431:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4416:18:1"
																	},
																	{
																		"hexValue": "416c726561647920496e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4436:21:1",
																		"type": "",
																		"value": "Already Initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4409:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4409:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4467:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4475:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4475:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4467:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4307:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4321:4:1",
														"type": ""
													}
												],
												"src": "4156:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4661:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4671:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4683:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4679:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4671:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4706:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4724:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4729:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4720:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4720:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4733:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4716:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4710:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4766:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4774:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4762:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4744:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4818:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4826:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4850:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4861:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4846:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4846:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4866:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4839:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4839:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4625:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4633:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4641:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4652:4:1",
														"type": ""
													}
												],
												"src": "4504:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5058:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5075:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5086:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5068:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5109:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5120:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5105:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5105:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5125:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5098:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5098:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5148:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5159:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:18:1"
																	},
																	{
																		"hexValue": "4f6e6c792041646d696e2063616e2053776170",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5164:21:1",
																		"type": "",
																		"value": "Only Admin can Swap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5137:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5137:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5195:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5207:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5218:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5203:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5195:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a83764174c827403df7000bbb07579f7f3c17a5b004ab66455a8f2b7ccea5ac__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5035:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5049:4:1",
														"type": ""
													}
												],
												"src": "4884:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5406:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5423:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5434:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5416:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5416:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5457:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5468:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5453:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5453:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5473:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5446:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5446:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:1"
																	},
																	{
																		"hexValue": "4572726f723a204e6f7420612076616c6964204944206f7220506c6561736520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5512:34:1",
																		"type": "",
																		"value": "Error: Not a valid ID or Please "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5567:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5578:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5563:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5563:18:1"
																	},
																	{
																		"hexValue": "62757920736f6d6520746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5583:16:1",
																		"type": "",
																		"value": "buy some token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5556:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5609:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5621:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5632:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5617:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5609:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e337f72354e030c1ede5b0b51321b9727668b85fa6b6511b472b1588800c131__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5383:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5397:4:1",
														"type": ""
													}
												],
												"src": "5232:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5728:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5774:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5786:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5776:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5776:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5776:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5749:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5758:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5745:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5770:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5741:32:1"
															},
															"nodeType": "YulIf",
															"src": "5738:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5799:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5815:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5809:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5809:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5799:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5694:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5705:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5717:6:1",
														"type": ""
													}
												],
												"src": "5647:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6010:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6038:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6020:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6072:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6057:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6050:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6050:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6100:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6111:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6096:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6096:18:1"
																	},
																	{
																		"hexValue": "4572726f723a204f776e657220646f6573206e6f74206861766520656e6f7567",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6116:34:1",
																		"type": "",
																		"value": "Error: Owner does not have enoug"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6089:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6089:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6182:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6167:18:1"
																	},
																	{
																		"hexValue": "682062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6187:11:1",
																		"type": "",
																		"value": "h balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6160:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6208:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6220:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6231:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6216:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6208:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5987:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6001:4:1",
														"type": ""
													}
												],
												"src": "5836:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6278:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6295:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6302:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6307:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6298:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6288:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6288:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6335:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6338:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6328:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6328:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6359:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6362:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6352:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6352:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6246:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6430:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6489:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6491:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6491:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6491:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6461:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6454:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6454:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6447:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6447:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6469:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6480:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6476:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6476:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6484:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6472:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6472:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6466:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6443:45:1"
															},
															"nodeType": "YulIf",
															"src": "6440:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6520:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6535:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6538:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6531:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6520:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6409:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6412:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6418:7:1",
														"type": ""
													}
												],
												"src": "6378:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6708:188:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6718:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6726:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6726:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6718:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6760:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6775:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6791:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6796:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6787:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6787:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6800:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6783:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6783:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6771:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6771:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6753:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6824:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6835:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6820:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6820:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6840:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6813:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6813:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6813:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6867:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6878:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6863:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6863:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6883:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6856:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6856:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6661:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6672:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6680:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6688:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6699:4:1",
														"type": ""
													}
												],
												"src": "6551:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7075:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7092:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7103:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7085:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7085:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7126:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7137:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7122:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7142:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7115:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7165:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7176:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7161:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7161:18:1"
																	},
																	{
																		"hexValue": "4572726f723a2041646d696e20646f6573206e6f74206861766520656e6f7567",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7181:34:1",
																		"type": "",
																		"value": "Error: Admin does not have enoug"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7154:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7154:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7236:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7247:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7232:18:1"
																	},
																	{
																		"hexValue": "682062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7252:11:1",
																		"type": "",
																		"value": "h balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7225:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7225:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7273:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7285:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7281:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7281:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7273:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7052:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7066:4:1",
														"type": ""
													}
												],
												"src": "6901:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7357:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7388:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7409:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7416:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7421:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7412:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7412:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7402:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7402:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7402:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7453:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7456:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7446:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7446:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7446:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7481:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7484:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7474:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7474:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7474:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7377:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7370:9:1"
															},
															"nodeType": "YulIf",
															"src": "7367:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7508:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7517:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7513:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7508:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7342:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7345:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7351:1:1",
														"type": ""
													}
												],
												"src": "7311:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7690:227:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7712:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7723:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7708:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7700:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7735:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7753:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7758:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7749:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7762:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7745:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7745:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7739:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7780:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7795:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7803:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7791:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7791:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7773:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7773:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7827:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7838:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7823:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7847:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7855:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7816:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7879:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7890:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7875:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7875:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "7899:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7907:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7895:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7868:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7868:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7643:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7654:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7662:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7670:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7681:4:1",
														"type": ""
													}
												],
												"src": "7533:384:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8079:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8089:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8101:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8112:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8089:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8131:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8142:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8124:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8124:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8169:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8180:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8165:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8165:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8185:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8158:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8158:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8158:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8223:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8208:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8228:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8201:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8201:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8032:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8043:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8051:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8059:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8070:4:1",
														"type": ""
													}
												],
												"src": "7922:319:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8420:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8437:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8448:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8430:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8471:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8482:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8467:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8467:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8487:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8460:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8460:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8510:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8521:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8506:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8526:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8499:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8499:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8499:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8581:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8592:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8577:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8597:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8570:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8615:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8627:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8638:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8623:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8615:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8397:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8411:4:1",
														"type": ""
													}
												],
												"src": "8246:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8702:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8724:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8726:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8726:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8726:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8718:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8721:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8715:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:8:1"
															},
															"nodeType": "YulIf",
															"src": "8712:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8755:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8767:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8770:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8763:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8755:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8684:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8687:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8693:4:1",
														"type": ""
													}
												],
												"src": "8653:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_contract_Token(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_Token_$900t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Token(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_Token(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_Token(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Token(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Token(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_contract$_Token_$900__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already Initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_4a83764174c827403df7000bbb07579f7f3c17a5b004ab66455a8f2b7ccea5ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Only Admin can Swap\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e337f72354e030c1ede5b0b51321b9727668b85fa6b6511b472b1588800c131__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Error: Not a valid ID or Please \")\n        mstore(add(headStart, 96), \"buy some token\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Error: Owner does not have enoug\")\n        mstore(add(headStart, 96), \"h balance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Error: Admin does not have enoug\")\n        mstore(add(headStart, 96), \"h balance\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f35760003560e01c8063715018a61161008a578063af0afec911610059578063af0afec914610325578063d09bf0e41461033a578063ee23850614610367578063f2fde38b1461039457600080fd5b8063715018a61461023c5780638637856d146102515780638da5cb5b146102e7578063a77b2e371461030557600080fd5b80632c1e816d116100c65780632c1e816d146101945780632d296bf1146101b45780633a84374b146101d45780635f4fd1f71461020f57600080fd5b8063158ef93e146100f85780631794bb3c1461012757806323660bd51461014957806328f661e31461015c575b600080fd5b34801561010457600080fd5b506004546101129060ff1681565b60405190151581526020015b60405180910390f35b34801561013357600080fd5b50610147610142366004610d27565b6103b4565b005b610147610157366004610d68565b6104f3565b34801561016857600080fd5b5060015461017c906001600160a01b031681565b6040516001600160a01b03909116815260200161011e565b3480156101a057600080fd5b506101476101af366004610d98565b61085c565b3480156101c057600080fd5b506101476101cf366004610db5565b6108a8565b3480156101e057600080fd5b506102016101ef366004610db5565b60086020526000908152604090205481565b60405190815260200161011e565b34801561021b57600080fd5b5061022f61022a366004610d98565b610b66565b60405161011e9190610dce565b34801561024857600080fd5b50610147610bd2565b34801561025d57600080fd5b506102b261026c366004610e12565b6005602081815260009384526040808520909152918352912080546001820154600283015460038401546004850154958501546006909501549395929491939092919087565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e00161011e565b3480156102f357600080fd5b506000546001600160a01b031661017c565b34801561031157600080fd5b5060025461017c906001600160a01b031681565b34801561033157600080fd5b50600354610201565b34801561034657600080fd5b50610201610355366004610db5565b60096020526000908152604090205481565b34801561037357600080fd5b50610201610382366004610db5565b60076020526000908152604090205481565b3480156103a057600080fd5b506101476103af366004610d98565b610c08565b6000546001600160a01b031633146103e75760405162461bcd60e51b81526004016103de90610e3e565b60405180910390fd5b60045460ff1615156001036104345760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e48125b9a5d1a585b1a5e9959606a1b60448201526064016103de565b600280546001600160a01b038086166001600160a01b03199283168117909355600180549186169190921617905563b45ee9ef6104796000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908516602482015260448101849052606401600060405180830381600087803b1580156104c957600080fd5b505af11580156104dd573d6000803e3d6000fd5b50506004805460ff191660011790555050505050565b6001546001600160a01b031633146105435760405162461bcd60e51b815260206004820152601360248201527204f6e6c792041646d696e2063616e205377617606c1b60448201526064016103de565b6001600160a01b038116600090815260056020908152604080832085845290915290205482146105cc5760405162461bcd60e51b815260206004820152602e60248201527f4572726f723a204e6f7420612076616c6964204944206f7220506c656173652060448201526d313abc9039b7b6b2903a37b5b2b760911b60648201526084016103de565b6000828152600960205260409020546002546001600160a01b031663e3d670d76105fe6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106669190610e73565b116106c55760405162461bcd60e51b815260206004820152602960248201527f4572726f723a204f776e657220646f6573206e6f74206861766520656e6f7567604482015268682062616c616e636560b81b60648201526084016103de565b6000828152600960209081526040808320543384526005808452828520878652909352922001556002546001600160a01b031663b45ee9ef61070f6000546001600160a01b031690565b6001546000868152600960205260409081902054905160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561077157600080fd5b505af1158015610785573d6000803e3d6000fd5b5050506000838152600960205260409020546107b39150633b9aca00906107ad906001610ea2565b90610ca3565b50600080546040516001600160a01b03909116913480156108fc02929091818181858888f193505050501580156107ee573d6000803e3d6000fd5b5033600081815260056020908152604080832086845282528083203460069091018190556009835292819020548151948552918401919091528201527fef4025816e2adaebc6e491a322497e5d2067b2f3aa8a2f9a73bda13ec867f2bf906060015b60405180910390a15050565b6000546001600160a01b031633146108865760405162461bcd60e51b81526004016103de90610e3e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60025460015460405163e3d670d760e01b81526001600160a01b0391821660048201528392919091169063e3d670d790602401602060405180830381865afa1580156108f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091c9190610e73565b1161097b5760405162461bcd60e51b815260206004820152602960248201527f4572726f723a2041646d696e20646f6573206e6f74206861766520656e6f7567604482015268682062616c616e636560b81b60648201526084016103de565b60038054600190810191829055606490610996908490610ea2565b6109a09190610ec1565b60008281526007602052604090208190556109bc908390610cb6565b60008281526008602052604090819020829055600254600154915163b45ee9ef60e01b81526001600160a01b0392831660048201523360248201526044810193909352169063b45ee9ef90606401600060405180830381600087803b158015610a2457600080fd5b505af1158015610a38573d6000803e3d6000fd5b505060038054336000908152600560209081526040808320888452825280832093845542600185015560028085018a905560078352818420549585019590955560089091529020546004909101819055610a9493509150610ca3565b6000828152600960205260409020556001547f200e42c44f4b61e64b8298dd340205f3d4fd26f4018958219ac19fa737a4bc939033906001600160a01b0316610ae56000546001600160a01b031690565b604080516001600160a01b039485168152928416602084015292168183015290519081900360600190a16000818152600760209081526040808320546008835292819020548151868152928301939093528101919091527fea58cb92b8b20e95b17ad470f6f42aeca8d949d80c763c66664d879df9f65ba790606001610850565b6001600160a01b038116600090815260066020908152604091829020805483518184028101840190945280845260609392830182828015610bc657602002820191906000526020600020905b815481526020019060010190808311610bb2575b50505050509050919050565b6000546001600160a01b03163314610bfc5760405162461bcd60e51b81526004016103de90610e3e565b610c066000610cc2565b565b6000546001600160a01b03163314610c325760405162461bcd60e51b81526004016103de90610e3e565b6001600160a01b038116610c975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103de565b610ca081610cc2565b50565b6000610caf8284610ec1565b9392505050565b6000610caf8284610ee3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610ca057600080fd5b600080600060608486031215610d3c57600080fd5b8335610d4781610d12565b92506020840135610d5781610d12565b929592945050506040919091013590565b60008060408385031215610d7b57600080fd5b823591506020830135610d8d81610d12565b809150509250929050565b600060208284031215610daa57600080fd5b8135610caf81610d12565b600060208284031215610dc757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610e0657835183529284019291840191600101610dea565b50909695505050505050565b60008060408385031215610e2557600080fd5b8235610e3081610d12565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610e8557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610ebc57610ebc610e8c565b500290565b600082610ede57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610ef557610ef5610e8c565b50039056fea2646970667358221220d954b4ac9af40bf75580df01c36b305865c06aaea7a6b55a40109873802d09ef64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAF0AFEC9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAF0AFEC9 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xD09BF0E4 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xEE238506 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x8637856D EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xA77B2E37 EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C1E816D GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x2C1E816D EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x2D296BF1 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3A84374B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x5F4FD1F7 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x158EF93E EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x23660BD5 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x28F661E3 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x112 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x147 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xD68 JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x17C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xDCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0xBD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP6 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x11E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x17C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x201 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E48125B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH4 0xB45EE9EF PUSH2 0x479 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4F6E6C792041646D696E2063616E205377617 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 EQ PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A204E6F7420612076616C6964204944206F7220506C6561736520 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x313ABC9039B7B6B2903A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE3D670D7 PUSH2 0x5FE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x642 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0xE73 JUMP JUMPDEST GT PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A204F776E657220646F6573206E6F74206861766520656E6F7567 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x682062616C616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD CALLER DUP5 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP8 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 ADD SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB45EE9EF PUSH2 0x70F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x785 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B3 SWAP2 POP PUSH4 0x3B9ACA00 SWAP1 PUSH2 0x7AD SWAP1 PUSH1 0x1 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 PUSH2 0xCA3 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 CALLVALUE PUSH1 0x6 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH1 0x9 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD MSTORE PUSH32 0xEF4025816E2ADAEBC6E491A322497E5D2067B2F3AA8A2F9A73BDA13EC867F2BF SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3D670D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE3D670D7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xE73 JUMP JUMPDEST GT PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A2041646D696E20646F6573206E6F74206861766520656E6F7567 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x682062616C616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x996 SWAP1 DUP5 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x9BC SWAP1 DUP4 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SWAP2 MLOAD PUSH4 0xB45EE9EF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE AND SWAP1 PUSH4 0xB45EE9EF SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP5 SSTORE TIMESTAMP PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD DUP11 SWAP1 SSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP6 DUP6 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH2 0xA94 SWAP4 POP SWAP2 POP PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH32 0x200E42C44F4B61E64B8298DD340205F3D4FD26F4018958219AC19FA737A4BC93 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAE5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x8 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD DUP7 DUP2 MSTORE SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xEA58CB92B8B20E95B17AD470F6F42AECA8D949D80C763C66664D879DF9F65BA7 SWAP1 PUSH1 0x60 ADD PUSH2 0x850 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBB2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0xC06 PUSH1 0x0 PUSH2 0xCC2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DE JUMP JUMPDEST PUSH2 0xCA0 DUP2 PUSH2 0xCC2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAF DUP3 DUP5 PUSH2 0xEC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAF DUP3 DUP5 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xD47 DUP2 PUSH2 0xD12 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xD57 DUP2 PUSH2 0xD12 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xD8D DUP2 PUSH2 0xD12 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAF DUP2 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE06 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDEA JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE30 DUP2 PUSH2 0xD12 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEBC JUMPI PUSH2 0xEBC PUSH2 0xE8C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEDE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEF5 JUMPI PUSH2 0xEF5 PUSH2 0xE8C JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SLOAD 0xB4 0xAC SWAP11 DELEGATECALL SIGNEXTEND 0xF7 SSTORE DUP1 0xDF ADD 0xC3 PUSH12 0x305865C06AAEA7A6B55A4010 SWAP9 PUSH20 0x802D09EF64736F6C634300080D00330000000000 ",
							"sourceMap": "28559:3737:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28716:23;;;;;;;;;;-1:-1:-1;28716:23:0;;;;;;;;;;;179:14:1;;172:22;154:41;;142:2;127:18;28716:23:0;;;;;;;;29674:361;;;;;;;;;;-1:-1:-1;29674:361:0;;;;;:::i;:::-;;:::i;:::-;;31382:832;;;;;;:::i;:::-;;:::i;28633:27::-;;;;;;;;;;-1:-1:-1;28633:27:0;;;;-1:-1:-1;;;;;28633:27:0;;;;;;-1:-1:-1;;;;;1328:32:1;;;1310:51;;1298:2;1283:18;28633:27:0;1164:203:1;30043:98:0;;;;;;;;;;-1:-1:-1;30043:98:0;;;;;:::i;:::-;;:::i;30378:996::-;;;;;;;;;;-1:-1:-1;30378:996:0;;;;;:::i;:::-;;:::i;28928:53::-;;;;;;;;;;-1:-1:-1;28928:53:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1962:25:1;;;1950:2;1935:18;28928:53:0;1816:177:1;30249:121:0;;;;;;;;;;-1:-1:-1;30249:121:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;19689:103::-;;;;;;;;;;;;;:::i;28748:67::-;;;;;;;;;;-1:-1:-1;28748:67:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3277:25:1;;;3333:2;3318:18;;3311:34;;;;3361:18;;;3354:34;;;;3419:2;3404:18;;3397:34;;;;3462:3;3447:19;;3440:35;3506:3;3491:19;;3484:35;3550:3;3535:19;;3528:35;3264:3;3249:19;28748:67:0;2962:607:1;19038:87:0;;;;;;;;;;-1:-1:-1;19084:7:0;19111:6;-1:-1:-1;;;;;19111:6:0;19038:87;;28667:17;;;;;;;;;;-1:-1:-1;28667:17:0;;;;-1:-1:-1;;;;;28667:17:0;;;30149:92;;;;;;;;;;-1:-1:-1;30223:10:0;;30149:92;;28988:54;;;;;;;;;;-1:-1:-1;28988:54:0;;;;;:::i;:::-;;;;;;;;;;;;;;28873:48;;;;;;;;;;-1:-1:-1;28873:48:0;;;;;:::i;:::-;;;;;;;;;;;;;;19947:238;;;;;;;;;;-1:-1:-1;19947:238:0;;;;;:::i;:::-;;:::i;29674:361::-;19084:7;19111:6;-1:-1:-1;;;;;19111:6:0;4423:10;19258:23;19250:68;;;;-1:-1:-1;;;19250:68:0;;;;;;;:::i;:::-;;;;;;;;;29816:11:::1;::::0;::::1;;:19;;:11:::0;:19;29808:51:::1;;;::::0;-1:-1:-1;;;29808:51:0;;4358:2:1;29808:51:0::1;::::0;::::1;4340:21:1::0;4397:2;4377:18;;;4370:30;-1:-1:-1;;;4416:18:1;;;4409:49;4475:18;;29808:51:0::1;4156:343:1::0;29808:51:0::1;29870:4;:19:::0;;-1:-1:-1;;;;;29870:19:0;;::::1;-1:-1:-1::0;;;;;;29870:19:0;;::::1;::::0;::::1;::::0;;;;29900:37;;;;::::1;::::0;;;::::1;;::::0;;29948:18:::1;29967:7;19084::::0;19111:6;-1:-1:-1;;;;;19111:6:0;;19038:87;29967:7:::1;29948:50;::::0;-1:-1:-1;;;;;;29948:50:0::1;::::0;;;;;;-1:-1:-1;;;;;4762:15:1;;;29948:50:0::1;::::0;::::1;4744:34:1::0;4814:15;;;4794:18;;;4787:43;4846:18;;;4839:34;;;4679:18;;29948:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;30009:11:0::1;:18:::0;;-1:-1:-1;;30009:18:0::1;30023:4;30009:18;::::0;;-1:-1:-1;;;;;29674:361:0:o;31382:832::-;31482:12;;-1:-1:-1;;;;;31482:12:0;31468:10;:26;31460:58;;;;-1:-1:-1;;;31460:58:0;;5086:2:1;31460:58:0;;;5068:21:1;5125:2;5105:18;;;5098:30;-1:-1:-1;;;5144:18:1;;;5137:49;5203:18;;31460:58:0;4884:343:1;31460:58:0;-1:-1:-1;;;;;31557:13:0;;;;;;:7;:13;;;;;;;;:17;;;;;;;;:20;31551:26;;31529:122;;;;-1:-1:-1;;;31529:122:0;;5434:2:1;31529:122:0;;;5416:21:1;5473:2;5453:18;;;5446:30;5512:34;5492:18;;;5485:62;-1:-1:-1;;;5563:18:1;;;5556:44;5617:19;;31529:122:0;5232:410:1;31529:122:0;31708:23;;;;:19;:23;;;;;;31684:4;;-1:-1:-1;;;;;31684:4:0;:12;31697:7;19084;19111:6;-1:-1:-1;;;;;19111:6:0;;19038:87;31697:7;31684:21;;-1:-1:-1;;;;;;31684:21:0;;;;;;;-1:-1:-1;;;;;1328:32:1;;;31684:21:0;;;1310:51:1;1283:18;;31684:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;31662:138;;;;-1:-1:-1;;;31662:138:0;;6038:2:1;31662:138:0;;;6020:21:1;6077:2;6057:18;;;6050:30;6116:34;6096:18;;;6089:62;-1:-1:-1;;;6167:18:1;;;6160:39;6216:19;;31662:138:0;5836:405:1;31662:138:0;31850:23;;;;:19;:23;;;;;;;;;31819:10;31811:19;;:7;:19;;;;;;:23;;;;;;;;:36;:62;31884:4;;-1:-1:-1;;;;;31884:4:0;:18;31903:7;19084;19111:6;-1:-1:-1;;;;;19111:6:0;;19038:87;31903:7;31912:12;;;31926:23;;;:19;:23;;;;;;;;31884:66;;;;;;-1:-1:-1;;;;;;31884:66:0;;;-1:-1:-1;;;;;4762:15:1;;;31884:66:0;;;4744:34:1;31912:12:0;;;;4794:18:1;;;4787:43;4846:18;;;4839:34;4679:18;;31884:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;31979:23:0;;;;:19;:23;;;;;;31974:45;;-1:-1:-1;32008:10:0;;31975:27;;:1;:27;:::i;:::-;31974:33;;:45::i;:::-;-1:-1:-1;19084:7:0;19111:6;;32030:36;;-1:-1:-1;;;;;19111:6:0;;;;32056:9;32030:36;;;;;32056:9;;32030:36;19084:7;32030:36;32056:9;19111:6;32030:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32085:10:0;32077:19;;;;:7;:19;;;;;;;;:23;;;;;;;;32121:9;32077:41;;;;:53;;;32171:19;:23;;;;;;;32146:60;;6753:51:1;;;6820:18;;;6813:34;;;;6863:18;;6856:34;32146:60:0;;6741:2:1;6726:18;32146:60:0;;;;;;;;31382:832;;:::o;30043:98::-;19084:7;19111:6;-1:-1:-1;;;;;19111:6:0;4423:10;19258:23;19250:68;;;;-1:-1:-1;;;19250:68:0;;;;;;;:::i;:::-;30112:12:::1;:21:::0;;-1:-1:-1;;;;;;30112:21:0::1;-1:-1:-1::0;;;;;30112:21:0;;;::::1;::::0;;;::::1;::::0;;30043:98::o;30378:996::-;30452:4;;;30465:12;30452:26;;-1:-1:-1;;;30452:26:0;;-1:-1:-1;;;;;30465:12:0;;;30452:26;;;1310:51:1;30481:6:0;;30452:4;;;;;:12;;1283:18:1;;30452:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;30430:126;;;;-1:-1:-1;;;30430:126:0;;7103:2:1;30430:126:0;;;7085:21:1;7142:2;7122:18;;;7115:30;7181:34;7161:18;;;7154:62;-1:-1:-1;;;7232:18:1;;;7225:39;7281:19;;30430:126:0;6901:405:1;30430:126:0;30592:10;:12;;;;;;;;;;30695:3;;30681:10;;30685:6;;30681:10;:::i;:::-;30680:18;;;;:::i;:::-;30660:17;;;;:13;:17;;;;;:38;;;30734:29;;:6;;:10;:29::i;:::-;30709:22;;;;:18;:22;;;;;;;:54;;;30774:4;;;30793:12;30774:68;;-1:-1:-1;;;30774:68:0;;-1:-1:-1;;;;;30793:12:0;;;30774:68;;;4744:34:1;30807:10:0;4794:18:1;;;4787:43;4846:18;;;4839:34;;;;30774:4:0;;:18;;4679::1;;30774:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;30884:10:0;;;30863;30855:19;;;;:7;:19;;;;;;;;:23;;;;;;;;:39;;;30939:15;30905:31;;;:49;30965:37;;;;:46;;;31058:13;:17;;;;;;31022:33;;;:53;;;;31121:18;:22;;;;;;31086:32;;;;:57;;;31180:29;;-1:-1:-1;31121:22:0;-1:-1:-1;31180:26:0;:29::i;:::-;31154:23;;;;:19;:23;;;;;:55;31262:12;;31225:59;;31250:10;;-1:-1:-1;;;;;31262:12:0;31276:7;19084;19111:6;-1:-1:-1;;;;;19111:6:0;;19038:87;31276:7;31225:59;;;-1:-1:-1;;;;;7791:15:1;;;7773:34;;7843:15;;;7838:2;7823:18;;7816:43;7895:15;;7875:18;;;7868:43;31225:59:0;;;;;;7723:2:1;31225:59:0;;;31324:17;;;;:13;:17;;;;;;;;;31343:18;:22;;;;;;;31300:66;;8124:25:1;;;8165:18;;;8158:34;;;;8208:18;;8201:34;;;;31300:66:0;;8112:2:1;8097:18;31300:66:0;7922:319:1;30249:121:0;-1:-1:-1;;;;;30342:20:0;;;;;;:14;:20;;;;;;;;;30335:27;;;;;;;;;;;;;;;;;30306:16;;30335:27;;;30342:20;30335:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30249:121;;;:::o;19689:103::-;19084:7;19111:6;-1:-1:-1;;;;;19111:6:0;4423:10;19258:23;19250:68;;;;-1:-1:-1;;;19250:68:0;;;;;;;:::i;:::-;19754:30:::1;19781:1;19754:18;:30::i;:::-;19689:103::o:0;19947:238::-;19084:7;19111:6;-1:-1:-1;;;;;19111:6:0;4423:10;19258:23;19250:68;;;;-1:-1:-1;;;19250:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;20050:22:0;::::1;20028:110;;;::::0;-1:-1:-1;;;20028:110:0;;8448:2:1;20028:110:0::1;::::0;::::1;8430:21:1::0;8487:2;8467:18;;;8460:30;8526:34;8506:18;;;8499:62;-1:-1:-1;;;8577:18:1;;;8570:36;8623:19;;20028:110:0::1;8246:402:1::0;20028:110:0::1;20149:28;20168:8;20149:18;:28::i;:::-;19947:238:::0;:::o;25455:98::-;25513:7;25540:5;25544:1;25540;:5;:::i;:::-;25533:12;25455:98;-1:-1:-1;;;25455:98:0:o;24699:::-;24757:7;24784:5;24788:1;24784;:5;:::i;20345:191::-;20419:16;20438:6;;-1:-1:-1;;;;;20455:17:0;;;-1:-1:-1;;;;;;20455:17:0;;;;;;20488:40;;20438:6;;;;;;;20488:40;;20419:16;20488:40;20408:128;20345:191;:::o;206:138:1:-;-1:-1:-1;;;;;288:31:1;;278:42;;268:70;;334:1;331;324:12;349:483;439:6;447;455;508:2;496:9;487:7;483:23;479:32;476:52;;;524:1;521;514:12;476:52;563:9;550:23;582:38;614:5;582:38;:::i;:::-;639:5;-1:-1:-1;696:2:1;681:18;;668:32;709:40;668:32;709:40;:::i;:::-;349:483;;768:7;;-1:-1:-1;;;822:2:1;807:18;;;;794:32;;349:483::o;837:322::-;905:6;913;966:2;954:9;945:7;941:23;937:32;934:52;;;982:1;979;972:12;934:52;1018:9;1005:23;995:33;;1078:2;1067:9;1063:18;1050:32;1091:38;1123:5;1091:38;:::i;:::-;1148:5;1138:15;;;837:322;;;;;:::o;1372:254::-;1431:6;1484:2;1472:9;1463:7;1459:23;1455:32;1452:52;;;1500:1;1497;1490:12;1452:52;1539:9;1526:23;1558:38;1590:5;1558:38;:::i;1631:180::-;1690:6;1743:2;1731:9;1722:7;1718:23;1714:32;1711:52;;;1759:1;1756;1749:12;1711:52;-1:-1:-1;1782:23:1;;1631:180;-1:-1:-1;1631:180:1:o;1998:632::-;2169:2;2221:21;;;2291:13;;2194:18;;;2313:22;;;2140:4;;2169:2;2392:15;;;;2366:2;2351:18;;;2140:4;2435:169;2449:6;2446:1;2443:13;2435:169;;;2510:13;;2498:26;;2579:15;;;;2544:12;;;;2471:1;2464:9;2435:169;;;-1:-1:-1;2621:3:1;;1998:632;-1:-1:-1;;;;;;1998:632:1:o;2635:322::-;2703:6;2711;2764:2;2752:9;2743:7;2739:23;2735:32;2732:52;;;2780:1;2777;2770:12;2732:52;2819:9;2806:23;2838:38;2870:5;2838:38;:::i;:::-;2895:5;2947:2;2932:18;;;;2919:32;;-1:-1:-1;;;2635:322:1:o;3795:356::-;3997:2;3979:21;;;4016:18;;;4009:30;4075:34;4070:2;4055:18;;4048:62;4142:2;4127:18;;3795:356::o;5647:184::-;5717:6;5770:2;5758:9;5749:7;5745:23;5741:32;5738:52;;;5786:1;5783;5776:12;5738:52;-1:-1:-1;5809:16:1;;5647:184;-1:-1:-1;5647:184:1:o;6246:127::-;6307:10;6302:3;6298:20;6295:1;6288:31;6338:4;6335:1;6328:15;6362:4;6359:1;6352:15;6378:168;6418:7;6484:1;6480;6476:6;6472:14;6469:1;6466:21;6461:1;6454:9;6447:17;6443:45;6440:71;;;6491:18;;:::i;:::-;-1:-1:-1;6531:9:1;;6378:168::o;7311:217::-;7351:1;7377;7367:132;;7421:10;7416:3;7412:20;7409:1;7402:31;7456:4;7453:1;7446:15;7484:4;7481:1;7474:15;7367:132;-1:-1:-1;7513:9:1;;7311:217::o;8653:125::-;8693:4;8721:1;8718;8715:8;8712:34;;;8726:18;;:::i;:::-;-1:-1:-1;8763:9:1;;8653:125::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "777600",
								"executionCost": "26653",
								"totalCost": "804253"
							},
							"external": {
								"AdminAddress()": "2427",
								"Coin()": "2426",
								"amountAfterBurning(uint256)": "2505",
								"burningAmount(uint256)": "2504",
								"buyInfo(address,uint256)": "15461",
								"buyToken(uint256)": "infinite",
								"getIdsOfUser(address)": "infinite",
								"initialize(address,address,uint256)": "infinite",
								"initialized()": "2323",
								"owner()": "2398",
								"ownerSurplusToAdmin(uint256)": "2482",
								"renounceOwnership()": "28137",
								"setAdminAddress(address)": "26728",
								"swapTokenWithBNB(uint256,address)": "infinite",
								"totalInvesters()": "2314",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28559,
									"end": 32296,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18917,
									"end": 18949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4423,
									"end": 4433,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 18917,
									"end": 18935,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 18917,
									"end": 18949,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18917,
									"end": 18949,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18917,
									"end": 18949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20345,
									"end": 20536,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20345,
									"end": 20536,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20419,
									"end": 20435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20455,
									"end": 20472,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20438,
									"end": 20444,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20419,
									"end": 20435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20488,
									"end": 20528,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 20408,
									"end": 20536,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20345,
									"end": 20536,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20345,
									"end": 20536,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28559,
									"end": 32296,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d954b4ac9af40bf75580df01c36b305865c06aaea7a6b55a40109873802d09ef64736f6c634300080d0033",
									".code": [
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "AF0AFEC9"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "AF0AFEC9"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "D09BF0E4"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "EE238506"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "8637856D"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "A77B2E37"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "2C1E816D"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "2C1E816D"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "2D296BF1"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "3A84374B"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "5F4FD1F7"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "158EF93E"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "1794BB3C"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "23660BD5"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "28F661E3"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28559,
											"end": 32296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28739,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28633,
											"end": 28660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1164,
											"end": 1367,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 1953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28928,
											"end": 28981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1816,
											"end": 1993,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3345,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3345,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3388,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3388,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3465,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3447,
											"end": 3466,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3509,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3491,
											"end": 3510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3535,
											"end": 3554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3267,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3249,
											"end": 3268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28748,
											"end": 28815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 3569,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30223,
											"end": 30233,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30223,
											"end": 30233,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30149,
											"end": 30241,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 29042,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 28921,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19258,
											"end": 19281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29816,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29816,
											"end": 29827,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29816,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29816,
											"end": 29827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29816,
											"end": 29835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29816,
											"end": 29835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29816,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29816,
											"end": 29835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4358,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4340,
											"end": 4361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E48125B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4156,
											"end": 4499,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 29808,
											"end": 29859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29874,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29870,
											"end": 29889,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29937,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29966,
											"name": "PUSH",
											"source": 0,
											"value": "B45EE9EF"
										},
										{
											"begin": 29967,
											"end": 29974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29967,
											"end": 29974,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29967,
											"end": 29974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29948,
											"end": 29998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30009,
											"end": 30020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30009,
											"end": 30027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30027,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30009,
											"end": 30027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30023,
											"end": 30027,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30009,
											"end": 30027,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30027,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29674,
											"end": 30035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31494,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31482,
											"end": 31494,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31482,
											"end": 31494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31468,
											"end": 31478,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31468,
											"end": 31494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F6E6C792041646D696E2063616E205377617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4884,
											"end": 5227,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31460,
											"end": 31518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31564,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31574,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31557,
											"end": 31577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31577,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5416,
											"end": 5437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 5453,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5453,
											"end": 5471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F723A204E6F7420612076616C6964204944206F7220506C6561736520"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313ABC9039B7B6B2903A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5232,
											"end": 5642,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31529,
											"end": 31651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31727,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31688,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31684,
											"end": 31688,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31684,
											"end": 31688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31696,
											"name": "PUSH",
											"source": 0,
											"value": "E3D670D7"
										},
										{
											"begin": 31697,
											"end": 31704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31697,
											"end": 31704,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 31697,
											"end": 31704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31684,
											"end": 31705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31684,
											"end": 31731,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F723A204F776E657220646F6573206E6F74206861766520656E6F7567"
										},
										{
											"begin": 6096,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6096,
											"end": 6114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6096,
											"end": 6114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "682062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6167,
											"end": 6185,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6167,
											"end": 6185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6167,
											"end": 6185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6216,
											"end": 6235,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6216,
											"end": 6235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5836,
											"end": 6241,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31662,
											"end": 31800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 31829,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31818,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31811,
											"end": 31830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31830,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31834,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31834,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31834,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31834,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31811,
											"end": 31873,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31888,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31884,
											"end": 31888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31884,
											"end": 31888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31902,
											"name": "PUSH",
											"source": 0,
											"value": "B45EE9EF"
										},
										{
											"begin": 31903,
											"end": 31910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31903,
											"end": 31910,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 31903,
											"end": 31910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31912,
											"end": 31924,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31912,
											"end": 31924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31912,
											"end": 31924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31926,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31926,
											"end": 31949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31912,
											"end": 31924,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31912,
											"end": 31924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31912,
											"end": 31924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31912,
											"end": 31924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31884,
											"end": 31950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 31998,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31974,
											"end": 32019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31974,
											"end": 32019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32008,
											"end": 32018,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 32008,
											"end": 32018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31975,
											"end": 32002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31975,
											"end": 32002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31975,
											"end": 31976,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31975,
											"end": 32002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 31975,
											"end": 32002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31975,
											"end": 32002,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31975,
											"end": 32002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31974,
											"end": 32007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31974,
											"end": 32007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 31974,
											"end": 32019,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31974,
											"end": 32019,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31974,
											"end": 32019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32056,
											"end": 32065,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32056,
											"end": 32065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32056,
											"end": 32065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32056,
											"end": 32065,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 32030,
											"end": 32066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32085,
											"end": 32095,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32084,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32100,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32100,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32100,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32121,
											"end": 32130,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32118,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32077,
											"end": 32118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32130,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32190,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32171,
											"end": 32194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32194,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 6804,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6813,
											"end": 6847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6813,
											"end": 6847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6813,
											"end": 6847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6813,
											"end": 6847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6863,
											"end": 6881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6863,
											"end": 6881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6856,
											"end": 6890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "PUSH",
											"source": 0,
											"value": "EF4025816E2ADAEBC6E491A322497E5D2067B2F3AA8A2F9A73BDA13EC867F2BF"
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6743,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32206,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 32214,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19258,
											"end": 19281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30124,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30112,
											"end": 30133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30043,
											"end": 30141,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 30378,
											"end": 31374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30456,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30452,
											"end": 30456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30456,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30465,
											"end": 30477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3D670D7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30465,
											"end": 30477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30465,
											"end": 30477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30465,
											"end": 30477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30481,
											"end": 30487,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30487,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30464,
											"name": "PUSH",
											"source": 0,
											"value": "E3D670D7"
										},
										{
											"begin": 30452,
											"end": 30464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 30452,
											"end": 30478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30487,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7144,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7215,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F723A2041646D696E20646F6573206E6F74206861766520656E6F7567"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7154,
											"end": 7216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "682062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7300,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7281,
											"end": 7300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6901,
											"end": 7306,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 30430,
											"end": 30556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30592,
											"end": 30602,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30592,
											"end": 30604,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30695,
											"end": 30698,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30695,
											"end": 30698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30681,
											"end": 30691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 30681,
											"end": 30691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30685,
											"end": 30691,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30685,
											"end": 30691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30681,
											"end": 30691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 30681,
											"end": 30691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30681,
											"end": 30691,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 30681,
											"end": 30691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30680,
											"end": 30698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 30680,
											"end": 30698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30680,
											"end": 30698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30680,
											"end": 30698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 30680,
											"end": 30698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30680,
											"end": 30698,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 30680,
											"end": 30698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30660,
											"end": 30677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30673,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30660,
											"end": 30677,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30660,
											"end": 30677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30660,
											"end": 30677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30677,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 30763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 30734,
											"end": 30763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 30740,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 30740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 30744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 30734,
											"end": 30763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30734,
											"end": 30763,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 30734,
											"end": 30763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30727,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30731,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30778,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30774,
											"end": 30778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30778,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30793,
											"end": 30805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B45EE9EF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30793,
											"end": 30805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30807,
											"end": 30817,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30774,
											"end": 30778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30792,
											"name": "PUSH",
											"source": 0,
											"value": "B45EE9EF"
										},
										{
											"begin": 30774,
											"end": 30792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 30774,
											"end": 30842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30884,
											"end": 30894,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30884,
											"end": 30894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30884,
											"end": 30894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30863,
											"end": 30873,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30862,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30878,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30894,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30894,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30939,
											"end": 30954,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30905,
											"end": 30936,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30905,
											"end": 30936,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30905,
											"end": 30936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30905,
											"end": 30954,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31002,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30965,
											"end": 31002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31002,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31011,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31011,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31058,
											"end": 31071,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31058,
											"end": 31075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31058,
											"end": 31075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31058,
											"end": 31075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31058,
											"end": 31075,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31058,
											"end": 31075,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31058,
											"end": 31075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31055,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31055,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31075,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31075,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31075,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31121,
											"end": 31139,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31121,
											"end": 31143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31121,
											"end": 31143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31121,
											"end": 31143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31121,
											"end": 31143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31121,
											"end": 31143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31121,
											"end": 31143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31086,
											"end": 31118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31086,
											"end": 31118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31086,
											"end": 31118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31086,
											"end": 31118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31086,
											"end": 31143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31086,
											"end": 31143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31086,
											"end": 31143,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31180,
											"end": 31209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 31180,
											"end": 31209,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31121,
											"end": 31143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31180,
											"end": 31206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 31180,
											"end": 31209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31180,
											"end": 31209,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 31180,
											"end": 31209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31154,
											"end": 31177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31154,
											"end": 31177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31154,
											"end": 31177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31154,
											"end": 31177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31154,
											"end": 31173,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31154,
											"end": 31177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31154,
											"end": 31177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31154,
											"end": 31177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31154,
											"end": 31177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31154,
											"end": 31177,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31154,
											"end": 31209,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31262,
											"end": 31274,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31262,
											"end": 31274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "200E42C44F4B61E64B8298DD340205F3D4FD26F4018958219AC19FA737A4BC93"
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31250,
											"end": 31260,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31250,
											"end": 31260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31262,
											"end": 31274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31276,
											"end": 31283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31276,
											"end": 31283,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 31276,
											"end": 31283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7806,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7858,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7858,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 7911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7725,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31284,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31337,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31324,
											"end": 31341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31361,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31343,
											"end": 31365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31365,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31300,
											"end": 31366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31300,
											"end": 31366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8192,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8192,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31300,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "EA58CB92B8B20E95B17AD470F6F42AECA8D949D80C763C66664D879DF9F65BA7"
										},
										{
											"begin": 31300,
											"end": 31366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8114,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8097,
											"end": 8115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31300,
											"end": 31366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7922,
											"end": 8241,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30356,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30306,
											"end": 30322,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30306,
											"end": 30322,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30249,
											"end": 30370,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19258,
											"end": 19281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19781,
											"end": 19782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19754,
											"end": 19772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 19754,
											"end": 19784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19754,
											"end": 19784,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19754,
											"end": 19784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19792,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19258,
											"end": 19281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 19250,
											"end": 19318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20050,
											"end": 20072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8448,
											"end": 8450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8489,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8526,
											"end": 8560,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8506,
											"end": 8524,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8506,
											"end": 8524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8506,
											"end": 8524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8577,
											"end": 8595,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8577,
											"end": 8595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8642,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8623,
											"end": 8642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 8246,
											"end": 8648,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 20028,
											"end": 20138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 20168,
											"end": 20176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20149,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 20185,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25455,
											"end": 25553,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 25455,
											"end": 25553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25513,
											"end": 25520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25540,
											"end": 25545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 25544,
											"end": 25545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25540,
											"end": 25541,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25540,
											"end": 25545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 25540,
											"end": 25545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25540,
											"end": 25545,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 25540,
											"end": 25545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25533,
											"end": 25545,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25553,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25455,
											"end": 25553,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24699,
											"end": 24797,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24699,
											"end": 24797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24757,
											"end": 24764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24784,
											"end": 24789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 24788,
											"end": 24789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24785,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 24784,
											"end": 24789,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20345,
											"end": 20536,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20345,
											"end": 20536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20419,
											"end": 20435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20455,
											"end": 20472,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20419,
											"end": 20435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20528,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20408,
											"end": 20536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20345,
											"end": 20536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20345,
											"end": 20536,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 206,
											"end": 344,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 206,
											"end": 344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 288,
											"end": 319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 288,
											"end": 319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 278,
											"end": 320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 278,
											"end": 320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 334,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 324,
											"end": 336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 349,
											"end": 832,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 349,
											"end": 832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 455,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 496,
											"end": 505,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 487,
											"end": 494,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 479,
											"end": 511,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 476,
											"end": 528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 476,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 476,
											"end": 528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 524,
											"end": 525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 476,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 476,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 550,
											"end": 573,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 582,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 582,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 696,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 681,
											"end": 699,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 681,
											"end": 699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 668,
											"end": 700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 709,
											"end": 749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 709,
											"end": 749,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 709,
											"end": 749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 349,
											"end": 832,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 349,
											"end": 832,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 826,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 832,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 837,
											"end": 1159,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 837,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 905,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 941,
											"end": 964,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 934,
											"end": 986,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 934,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 934,
											"end": 986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 982,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 972,
											"end": 984,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 934,
											"end": 986,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 934,
											"end": 986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1082,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 837,
											"end": 1159,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 837,
											"end": 1159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 837,
											"end": 1159,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 837,
											"end": 1159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 837,
											"end": 1159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 837,
											"end": 1159,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1372,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1372,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1470,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1487,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1452,
											"end": 1504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1504,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1452,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1549,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1590,
											"end": 1595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 1558,
											"end": 1596,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1631,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1729,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1741,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1746,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1761,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 1805,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1631,
											"end": 1811,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1998,
											"end": 2630,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1998,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2221,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2144,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2435,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2456,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2435,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2594,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2594,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2464,
											"end": 2473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2435,
											"end": 2604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2435,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2621,
											"end": 2624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2624,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2630,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2635,
											"end": 2957,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2635,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2750,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2767,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2784,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2732,
											"end": 2784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2784,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2732,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2829,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2870,
											"end": 2875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2838,
											"end": 2876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2838,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2838,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2900,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 2950,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2950,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2951,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2635,
											"end": 2957,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3795,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3795,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 3999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4070,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 4151,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5647,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5647,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5758,
											"end": 5767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5756,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5768,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5790,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5738,
											"end": 5790,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5786,
											"end": 5787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5790,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5738,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5647,
											"end": 5831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6246,
											"end": 6373,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6246,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6317,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6298,
											"end": 6318,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6338,
											"end": 6342,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6335,
											"end": 6336,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6328,
											"end": 6343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6359,
											"end": 6360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6546,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6378,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6418,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6480,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6482,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6486,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6470,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6487,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6488,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6511,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6440,
											"end": 6511,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6531,
											"end": 6540,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6546,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7311,
											"end": 7528,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 7311,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7378,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7367,
											"end": 7499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7431,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7416,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7412,
											"end": 7432,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7460,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7453,
											"end": 7454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7446,
											"end": 7461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7481,
											"end": 7482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7489,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7499,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7367,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7513,
											"end": 7522,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7528,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8653,
											"end": 8778,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8653,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8718,
											"end": 8719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8723,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8712,
											"end": 8746,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8712,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 8712,
											"end": 8746,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 8726,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8726,
											"end": 8744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8726,
											"end": 8744,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 8726,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8763,
											"end": 8772,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8763,
											"end": 8772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8653,
											"end": 8778,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"AdminAddress()": "28f661e3",
							"Coin()": "a77b2e37",
							"amountAfterBurning(uint256)": "3a84374b",
							"burningAmount(uint256)": "ee238506",
							"buyInfo(address,uint256)": "8637856d",
							"buyToken(uint256)": "2d296bf1",
							"getIdsOfUser(address)": "5f4fd1f7",
							"initialize(address,address,uint256)": "1794bb3c",
							"initialized()": "158ef93e",
							"owner()": "8da5cb5b",
							"ownerSurplusToAdmin(uint256)": "d09bf0e4",
							"renounceOwnership()": "715018a6",
							"setAdminAddress(address)": "2c1e816d",
							"swapTokenWithBNB(uint256,address)": "23660bd5",
							"totalInvesters()": "af0afec9",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burningAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountAfterBurning\",\"type\":\"uint256\"}],\"name\":\"buyTokenDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"AdminAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"buyTokenDetailsAddresses\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerInitiative\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"BNB\",\"type\":\"uint256\"}],\"name\":\"swapTokenBNB\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AdminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Coin\",\"outputs\":[{\"internalType\":\"contract Token\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amountAfterBurning\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"burningAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buyInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchaseToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userGets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ownerSurplus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"BNBchargedByAdmin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getIdsOfUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Token\",\"name\":\"_Coin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerSurplusToAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdminAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"swapTokenWithBNB\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInvesters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smartContract_flat.sol\":\"smartContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"smartContract_flat.sol\":{\"keccak256\":\"0x09539a5cabd66841a2605d3fa1ef89b588b23af3dc9c322a813bf493a14cc26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54daaa899e33e76d1cd8467d7f4dbf1d921e8b911e33531e4df2fa4fb94fc607\",\"dweb:/ipfs/QmSLtGWkaeZncBWBs3d7fGqvxLBkcmw3HJd9Lvc49XyPfM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 717,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1219,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "AdminAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1222,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "Coin",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(Token)900"
							},
							{
								"astId": 1224,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "investerID",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1226,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "initialized",
								"offset": 0,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 1233,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "buyInfo",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(purchaseInfo)1265_storage))"
							},
							{
								"astId": 1238,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "getIDByAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1242,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "burningAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1246,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "amountAfterBurning",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1250,
								"contract": "smartContract_flat.sol:smartContract",
								"label": "ownerSurplusToAdmin",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(Token)900": {
								"encoding": "inplace",
								"label": "contract Token",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(purchaseInfo)1265_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(purchaseInfo)1265_storage)"
							},
							"t_mapping(t_uint256,t_struct(purchaseInfo)1265_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct smartContract.purchaseInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(purchaseInfo)1265_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(purchaseInfo)1265_storage": {
								"encoding": "inplace",
								"label": "struct smartContract.purchaseInfo",
								"members": [
									{
										"astId": 1252,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "ID",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1254,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "buyTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1256,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "purchaseToken",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1258,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "burnToken",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1260,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "userGets",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1262,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "ownerSurplus",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1264,
										"contract": "smartContract_flat.sol:smartContract",
										"label": "BNBchargedByAdmin",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"smartContract_flat.sol": {
				"ast": {
					"absolutePath": "smartContract_flat.sol",
					"exportedSymbols": {
						"Context": [
							121
						],
						"ERC20": [
							711
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							100
						],
						"Ownable": [
							814
						],
						"SafeMath": [
							1211
						],
						"Token": [
							900
						],
						"smartContract": [
							1631
						]
					},
					"id": 1632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "151:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "179:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "263:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "277:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "452:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "461:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "499:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "483:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "511:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "503:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:57:0"
									},
									"src": "446:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "526:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "689:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "724:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "708:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "756:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "740:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "774:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:97:0"
									},
									"src": "683:112:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "803:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "886:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "897:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "923:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:9:0"
									},
									"scope": 77,
									"src": "877:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "940:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1029:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1079:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:9:0"
									},
									"scope": 77,
									"src": "1020:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1096:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1319:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1336:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1328:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1348:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1340:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:6:0"
									},
									"scope": 77,
									"src": "1310:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1388:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1673:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1706:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1698:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1765:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:9:0"
									},
									"scope": 77,
									"src": "1664:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1782:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2452:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2468:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2460:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2485:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2477:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2511:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2511:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:6:0"
									},
									"scope": 77,
									"src": "2443:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2525:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2835:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2866:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2858:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2889:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2881:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2910:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2902:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2847:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2942:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2942:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2941:6:0"
									},
									"scope": 77,
									"src": "2826:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1632,
							"src": "253:2698:0",
							"usedErrors": []
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "3095:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3275:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3275:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3125:120:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3257:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3289:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3360:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3364:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3390:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3389:15:0"
									},
									"scope": 100,
									"src": "3351:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3413:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3486:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3492:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3518:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:15:0"
									},
									"scope": 100,
									"src": "3477:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3541:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3623:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3631:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3657:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:7:0"
									},
									"scope": 100,
									"src": "3614:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1632,
							"src": "3247:420:0",
							"usedErrors": []
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "3775:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3803:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "4328:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4405:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4423:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4423:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4416:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4352:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4362:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4395:9:0"
									},
									"scope": 121,
									"src": "4343:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4516:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4534:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4534:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4527:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4458:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4466:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4500:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4500:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:16:0"
									},
									"scope": 121,
									"src": "4449:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1632,
							"src": "4310:243:0",
							"usedErrors": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "4672:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5922:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "5922:7:0"
								},
								{
									"baseName": {
										"id": 126,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "5931:6:0"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "5931:6:0"
								},
								{
									"baseName": {
										"id": 128,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "5939:14:0"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "5939:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "4706:1196:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711,
								100,
								77,
								121
							],
							"name": "ERC20",
							"nameLocation": "5913:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5997:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "5961:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5969:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5961:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5980:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "6071:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "6015:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6023:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6015:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 137,
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6042:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "6034:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6053:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "6107:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "6091:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6091:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "6143:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "6128:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6128:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "6170:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "6155:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6155:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "_decimal",
									"nameLocation": "6200:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "6184:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6184:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "6637:90:0",
										"statements": [
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "6648:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6656:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6648:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "6648:13:0"
											},
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "6672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "6682:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6672:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "6672:17:0"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "_decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "6700:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 166,
														"name": "decimal_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "6711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6700:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "6700:19:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "6217:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 170,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "6551:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6595:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "6581:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6581:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "decimal_",
												"nameLocation": "6621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "6613:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6540:96:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6637:0:0"
									},
									"scope": 711,
									"src": "6529:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "6866:31:0",
										"statements": [
											{
												"expression": {
													"id": 177,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "6884:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 176,
												"id": 178,
												"nodeType": "Return",
												"src": "6877:12:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "6735:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6806:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6833:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6810:2:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "6851:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6851:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6850:15:0"
									},
									"scope": 711,
									"src": "6797:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "7087:33:0",
										"statements": [
											{
												"expression": {
													"id": 187,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "7105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 186,
												"id": 188,
												"nodeType": "Return",
												"src": "7098:14:0"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "6905:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7025:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 183,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7054:8:0"
									},
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7031:2:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7072:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 184,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7071:15:0"
									},
									"scope": 711,
									"src": "7016:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "7824:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "39",
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7842:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												},
												"functionReturnParameters": 196,
												"id": 198,
												"nodeType": "Return",
												"src": "7835:8:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7128:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7768:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7799:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7776:2:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7817:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 194,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7817:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7816:7:0"
									},
									"scope": 711,
									"src": "7759:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "7986:38:0",
										"statements": [
											{
												"expression": {
													"id": 207,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "8004:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 208,
												"nodeType": "Return",
												"src": "7997:19:0"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7859:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7925:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7959:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7936:2:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7977:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:9:0"
									},
									"scope": 711,
									"src": "7916:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "8220:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 219,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "8238:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 221,
													"indexExpression": {
														"id": 220,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "8248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8238:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 218,
												"id": 222,
												"nodeType": "Return",
												"src": "8231:25:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "8032:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8096:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 215,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8179:8:0"
									},
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8114:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "8106:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8105:17:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "8206:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8205:9:0"
									},
									"scope": 711,
									"src": "8087:177:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "8596:108:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8615:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "8607:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 235,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 239,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 237,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "8623:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8623:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "8656:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 242,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "8663:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "8667:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 240,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "8646:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8646:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "8646:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8692:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 234,
												"id": 247,
												"nodeType": "Return",
												"src": "8685:11:0"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "8272:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8479:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 231,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8558:8:0"
									},
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8496:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8488:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8508:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8500:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8487:28:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8585:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8585:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8584:6:0"
									},
									"scope": 711,
									"src": "8470:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "8915:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 260,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "8933:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 262,
														"indexExpression": {
															"id": 261,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8945:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8933:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 264,
													"indexExpression": {
														"id": 263,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "8952:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8933:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 259,
												"id": 265,
												"nodeType": "Return",
												"src": "8926:34:0"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "8712:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8776:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 256,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8874:8:0"
									},
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8794:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "8786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8809:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "8801:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8785:32:0"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "8901:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8900:9:0"
									},
									"scope": 711,
									"src": "8767:201:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "9418:112:0",
										"statements": [
											{
												"assignments": [
													279
												],
												"declarations": [
													{
														"constant": false,
														"id": 279,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9437:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 291,
														"src": "9429:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 278,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9429:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 282,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 280,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "9445:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9445:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9429:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9477:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "9484:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "9493:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 283,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "9468:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9468:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "9468:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9518:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 277,
												"id": 290,
												"nodeType": "Return",
												"src": "9511:11:0"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "8976:306:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9297:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 274,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9380:8:0"
									},
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9313:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "9305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9330:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "9322:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9304:33:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "9407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9406:6:0"
									},
									"scope": 711,
									"src": "9288:242:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "10247:158:0",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "10266:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "10258:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 305,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10258:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 309,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 307,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "10276:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10276:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10258:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 311,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "10315:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 312,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "10321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "10330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 310,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "10299:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10299:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "10299:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "10358:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 318,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "10364:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "10368:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 316,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "10348:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10348:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "10348:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10393:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 304,
												"id": 323,
												"nodeType": "Return",
												"src": "10386:11:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "9538:566:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10119:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 301,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10223:8:0"
									},
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10150:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "10142:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10173:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "10165:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10194:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "10186:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10131:76:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "10241:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10241:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10240:6:0"
									},
									"scope": 711,
									"src": "10110:295:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "10940:144:0",
										"statements": [
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10959:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 353,
														"src": "10951:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 335,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10951:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 339,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 337,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "10967:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10967:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10951:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10999:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "11006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 344,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "11025:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 345,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "11032:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "11015:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11015:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 347,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "11043:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11015:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 340,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "10990:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10990:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "10990:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11072:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 334,
												"id": 352,
												"nodeType": "Return",
												"src": "11065:11:0"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "10413:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10823:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "10841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "10866:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "10858:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10840:37:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "10929:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10929:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10928:6:0"
									},
									"scope": 711,
									"src": "10814:270:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "11718:374:0",
										"statements": [
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11737:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "11729:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 364,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11729:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 366,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "11745:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11745:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11729:28:0"
											},
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11776:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "11768:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 369,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 372,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "11805:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11812:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 371,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "11795:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11795:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11768:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 377,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "11853:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 378,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "11873:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11853:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11903:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11831:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "11831:122:0"
											},
											{
												"id": 391,
												"nodeType": "UncheckedBlock",
												"src": "11964:97:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 384,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "11998:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 385,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "12005:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "12014:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 387,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "12033:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12014:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 383,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "11989:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11989:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "11989:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12080:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 363,
												"id": 393,
												"nodeType": "Return",
												"src": "12073:11:0"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "11092:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "11596:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11622:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "11614:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "11639:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "11631:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11613:42:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "11707:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11707:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11706:6:0"
									},
									"scope": 711,
									"src": "11587:505:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "12683:596:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "12702:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12718:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12710:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 407,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12710:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12710:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12702:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12722:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12694:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12694:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "12694:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 416,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "12781:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12795:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12787:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12787:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12787:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12781:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12799:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12773:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12773:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "12773:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "12871:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "12877:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "12881:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 425,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "12850:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12850:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "12850:38:0"
											},
											{
												"assignments": [
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "12909:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "12901:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12901:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 436,
												"initialValue": {
													"baseExpression": {
														"id": 433,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "12923:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 435,
													"indexExpression": {
														"id": 434,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "12933:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12923:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12901:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 438,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "12971:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 439,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "12986:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12971:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13007:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12949:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12949:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "12949:109:0"
											},
											{
												"id": 452,
												"nodeType": "UncheckedBlock",
												"src": "13069:75:0",
												"statements": [
													{
														"expression": {
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 444,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "13094:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"id": 445,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "13104:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13094:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 447,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "13112:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 448,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "13126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13112:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13094:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 451,
														"nodeType": "ExpressionStatement",
														"src": "13094:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 453,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "13154:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 455,
														"indexExpression": {
															"id": 454,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "13164:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13154:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 456,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "13171:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13154:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "13154:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 460,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "13204:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "13210:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "13214:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13195:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "EmitStatement",
												"src": "13190:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "13254:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "13260:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "13264:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "13234:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13234:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "13234:37:0"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "12100:465:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12580:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12608:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "12600:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12631:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "12623:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12652:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "12644:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12589:76:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12683:0:0"
									},
									"scope": 711,
									"src": "12571:708:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "13631:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "13650:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13669:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13661:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 482,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13661:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13661:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13650:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13673:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13642:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13642:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "13642:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13749:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13741:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13741:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13741:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "13753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "13762:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "13720:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13720:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "13720:49:0"
											},
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 499,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13782:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 500,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "13798:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13782:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "13782:22:0"
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 503,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "13815:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 505,
														"indexExpression": {
															"id": 504,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "13825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13815:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 506,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "13837:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13815:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "13815:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13876:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13868:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 510,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13868:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13868:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "13880:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "13889:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 509,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13859:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13859:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "13854:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13937:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13929:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 519,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13929:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13929:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "13941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "13950:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "13909:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13909:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "13909:48:0"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "13287:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "13575:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "13581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "13598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13580:33:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13631:0:0"
									},
									"scope": 711,
									"src": "13566:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "14363:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 537,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "14382:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14401:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14393:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14393:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14393:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14382:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14405:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14374:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14374:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "14374:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "14475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14492:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14484:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14484:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "14496:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "14454:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14454:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "14454:49:0"
											},
											{
												"assignments": [
													556
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "14524:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 599,
														"src": "14516:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 555,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14516:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"baseExpression": {
														"id": 557,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "14541:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 559,
													"indexExpression": {
														"id": 558,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "14551:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14541:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14516:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 562,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "14578:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 563,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "14596:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14578:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14604:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14570:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "14570:71:0"
											},
											{
												"id": 576,
												"nodeType": "UncheckedBlock",
												"src": "14652:81:0",
												"statements": [
													{
														"expression": {
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 568,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "14677:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 570,
																"indexExpression": {
																	"id": 569,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "14687:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14677:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 571,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "14698:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 572,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "14715:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14698:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14677:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 575,
														"nodeType": "ExpressionStatement",
														"src": "14677:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 577,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "14743:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 578,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "14759:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14743:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "14743:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 582,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "14792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14809:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14801:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 583,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14801:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14801:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "14813:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "14783:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14783:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "EmitStatement",
												"src": "14778:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "14853:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14870:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14862:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 592,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14862:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14862:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 596,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "14874:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "14833:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14833:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "14833:48:0"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "13973:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "14307:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14321:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "14313:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14338:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "14330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14312:33:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14363:0:0"
									},
									"scope": 711,
									"src": "14298:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "15444:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 611,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "15463:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15480:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15472:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 612,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15472:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15472:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15463:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15484:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15455:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "15455:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 621,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "15542:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15561:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15553:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 622,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15553:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15553:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15542:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15565:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15534:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "15534:68:0"
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 630,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "15615:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 633,
															"indexExpression": {
																"id": 631,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "15627:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15615:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 634,
														"indexExpression": {
															"id": 632,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "15634:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15615:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 635,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "15645:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15615:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "15615:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 639,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "15676:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "15683:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "15692:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 638,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "15667:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15667:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "EmitStatement",
												"src": "15662:37:0"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "14897:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15336:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15363:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "15355:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15387:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "15379:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "15405:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15344:82:0"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15444:0:0"
									},
									"scope": 711,
									"src": "15327:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "16122:378:0",
										"statements": [
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "16141:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 687,
														"src": "16133:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 658,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "16170:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "16177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 657,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "16160:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16160:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16133:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "16200:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16225:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 664,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16225:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 663,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16220:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16220:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16220:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16200:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "16196:297:0",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "16239:254:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 670,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 656,
																			"src": "16280:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 671,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 652,
																			"src": "16300:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16280:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16325:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 669,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16254:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16254:117:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 675,
															"nodeType": "ExpressionStatement",
															"src": "16254:117:0"
														},
														{
															"id": 684,
															"nodeType": "UncheckedBlock",
															"src": "16386:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 677,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 648,
																				"src": "16424:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 678,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "16431:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 679,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 656,
																					"src": "16440:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 680,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "16459:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16440:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 676,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "16415:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16415:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "16415:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "15715:277:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "16007:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "16033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "16057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16091:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "16083:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16022:82:0"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16122:0:0"
									},
									"scope": 711,
									"src": "15998:502:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "17223:2:0",
										"statements": []
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "16508:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "17109:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17148:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17140:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17171:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17192:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17184:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17129:76:0"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17223:0:0"
									},
									"scope": 711,
									"src": "17100:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17951:2:0",
										"statements": []
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "17233:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "17838:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17876:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17868:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17899:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17891:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17920:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17912:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17857:76:0"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17951:0:0"
									},
									"scope": 711,
									"src": "17829:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1632,
							"src": "5904:12052:0",
							"usedErrors": []
						},
						{
							"id": 712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18065:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 714,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "18630:7:0"
									},
									"id": 715,
									"nodeType": "InheritanceSpecifier",
									"src": "18630:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 713,
								"nodeType": "StructuredDocumentation",
								"src": "18094:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 814,
							"linearizedBaseContracts": [
								814,
								121
							],
							"name": "Ownable",
							"nameLocation": "18619:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 717,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "18661:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 814,
									"src": "18645:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 716,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18645:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 723,
									"name": "OwnershipTransferred",
									"nameLocation": "18682:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "18729:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "18713:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "18769:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "18753:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18702:82:0"
									},
									"src": "18676:109:0"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "18906:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 728,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "18936:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18936:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "18917:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18917:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "18917:32:0"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "18793:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 733,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18903:2:0"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18906:0:0"
									},
									"scope": 814,
									"src": "18892:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "19093:32:0",
										"statements": [
											{
												"expression": {
													"id": 739,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "19111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 738,
												"id": 740,
												"nodeType": "Return",
												"src": "19104:13:0"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "18965:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "19047:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19052:2:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "19084:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19083:9:0"
									},
									"scope": 814,
									"src": "19038:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "19239:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 746,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "19258:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19258:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 748,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "19269:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19269:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19258:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19283:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19250:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19250:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "19250:68:0"
											},
											{
												"id": 754,
												"nodeType": "PlaceholderStatement",
												"src": "19329:1:0"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "19133:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 756,
									"name": "onlyOwner",
									"nameLocation": "19227:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19236:2:0"
									},
									"src": "19218:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "19743:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19781:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19773:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 763,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19773:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19773:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "19754:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19754:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "19754:30:0"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "19346:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 759,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 756,
												"src": "19733:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19733:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "19698:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19715:2:0"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19743:0:0"
									},
									"scope": 814,
									"src": "19689:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "20017:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "20050:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20070:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20062:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 780,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20062:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20062:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20050:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20087:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20028:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "20028:110:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "20168:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 788,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "20149:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20149:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "20149:28:0"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "19800:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 776,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 775,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 756,
												"src": "20007:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20007:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "19956:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19982:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "19974:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19973:18:0"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20017:0:0"
									},
									"scope": 814,
									"src": "19947:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "20408:128:0",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "20427:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "20419:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20419:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"id": 801,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "20438:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20419:25:0"
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 803,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "20455:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 804,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "20464:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20455:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "20455:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 808,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "20509:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "20519:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 807,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "20488:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20488:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "EmitStatement",
												"src": "20483:45:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "20193:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "20354:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "20381:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "20373:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20372:18:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20408:0:0"
									},
									"scope": 814,
									"src": "20345:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1632,
							"src": "18601:1938:0",
							"usedErrors": []
						},
						{
							"id": 815,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "20587:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 816,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 814,
										"src": "20633:7:0"
									},
									"id": 817,
									"nodeType": "InheritanceSpecifier",
									"src": "20633:7:0"
								},
								{
									"baseName": {
										"id": 818,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "20642:5:0"
									},
									"id": 819,
									"nodeType": "InheritanceSpecifier",
									"src": "20642:5:0"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 900,
							"linearizedBaseContracts": [
								900,
								711,
								100,
								77,
								814,
								121
							],
							"name": "Token",
							"nameLocation": "20624:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3eaaf86b",
									"id": 821,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "20670:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "20655:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20655:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20728:92:0",
										"statements": [
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 829,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "20739:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313030303030303030",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20754:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000_by_1",
																"typeString": "int_const 100000000"
															},
															"value": "100000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000_by_1",
																		"typeString": "int_const 1000000000"
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20767:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "39",
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20771:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_9_by_1",
																			"typeString": "int_const 9"
																		},
																		"value": "9"
																	},
																	"src": "20767:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000_by_1",
																		"typeString": "int_const 1000000000"
																	}
																}
															],
															"id": 834,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														},
														"src": "20754:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														}
													},
													"src": "20739:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "20739:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 839,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "20790:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20790:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "20799:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "20784:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20784:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "20784:28:0"
											}
										]
									},
									"id": 845,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "434f494e",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20711:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_94d28cfe178ae84130ce540d5dadabd088b301735941a744d121b4926572ece0",
														"typeString": "literal_string \"COIN\""
													},
													"value": "COIN"
												},
												{
													"hexValue": "434e",
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20719:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f8609dc9e17ae3d389c9f285ef4a3418632c9ba23251295f985500bcfc7f3ee5",
														"typeString": "literal_string \"CN\""
													},
													"value": "CN"
												},
												{
													"hexValue": "39",
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20725:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												}
											],
											"id": 827,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 823,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 711,
												"src": "20705:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20705:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20702:2:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20728:0:0"
									},
									"scope": 900,
									"src": "20691:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "20892:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "20920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 852,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "20910:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20910:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 851,
												"id": 855,
												"nodeType": "Return",
												"src": "20903:25:0"
											}
										]
									},
									"functionSelector": "e3d670d7",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "20837:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20853:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "20845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20844:17:0"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "20883:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20882:9:0"
									},
									"scope": 900,
									"src": "20828:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "21050:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "21071:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "21077:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "21081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "21061:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21061:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "21061:27:0"
											}
										]
									},
									"functionSelector": "b45ee9ef",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferPrice",
									"nameLocation": "20953:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20985:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "20977:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21008:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "21000:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21029:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "21021:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20966:76:0"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21050:0:0"
									},
									"scope": 900,
									"src": "20944:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "21158:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "21175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "21184:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 880,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "21169:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21169:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "21169:22:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "21113:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21126:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "21118:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "21135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21117:33:0"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21158:0:0"
									},
									"scope": 900,
									"src": "21104:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "21261:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "21278:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "21287:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "21272:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21272:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "21272:22:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "21216:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21229:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "21221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21246:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "21238:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21220:33:0"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21261:0:0"
									},
									"scope": 900,
									"src": "21207:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1632,
							"src": "20615:690:0",
							"usedErrors": []
						},
						{
							"id": 901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "21420:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 902,
								"nodeType": "StructuredDocumentation",
								"src": "21605:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1211,
							"linearizedBaseContracts": [
								1211
							],
							"name": "SafeMath",
							"nameLocation": "21816:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "22081:146:0",
										"statements": [
											{
												"id": 932,
												"nodeType": "UncheckedBlock",
												"src": "22092:128:0",
												"statements": [
													{
														"assignments": [
															915
														],
														"declarations": [
															{
																"constant": false,
																"id": 915,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "22125:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 932,
																"src": "22117:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 914,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22117:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 919,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 916,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "22129:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 917,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "22133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22117:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 920,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "22153:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 921,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "22157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22153:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 927,
														"nodeType": "IfStatement",
														"src": "22149:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22168:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22175:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 925,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22167:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 913,
															"id": 926,
															"nodeType": "Return",
															"src": "22160:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22200:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 929,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "22206:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 930,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "22199:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 913,
														"id": 931,
														"nodeType": "Return",
														"src": "22192:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "21832:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "21982:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21997:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "21989:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "22000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21988:22:0"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "22061:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22061:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "22067:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22060:15:0"
									},
									"scope": 1211,
									"src": "21973:254:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "22487:118:0",
										"statements": [
											{
												"id": 960,
												"nodeType": "UncheckedBlock",
												"src": "22498:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 946,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "22527:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 947,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "22531:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22527:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 953,
														"nodeType": "IfStatement",
														"src": "22523:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22542:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22549:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22541:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 945,
															"id": 952,
															"nodeType": "Return",
															"src": "22534:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22574:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 955,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "22580:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 956,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "22584:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22580:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 958,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "22573:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 945,
														"id": 959,
														"nodeType": "Return",
														"src": "22566:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "22235:138:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "22388:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22403:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "22395:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22414:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "22406:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22394:22:0"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "22467:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 941,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "22473:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22466:15:0"
									},
									"scope": 1211,
									"src": "22379:226:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "22868:427:0",
										"statements": [
											{
												"id": 1002,
												"nodeType": "UncheckedBlock",
												"src": "22879:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 974,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "23141:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23146:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23141:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 981,
														"nodeType": "IfStatement",
														"src": "23137:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23157:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23163:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23156:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 973,
															"id": 980,
															"nodeType": "Return",
															"src": "23149:16:0"
														}
													},
													{
														"assignments": [
															983
														],
														"declarations": [
															{
																"constant": false,
																"id": 983,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "23188:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1002,
																"src": "23180:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 982,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23180:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 987,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "23192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 985,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "23196:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23192:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23180:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 988,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "23216:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 989,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "23220:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23216:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 991,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "23225:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23216:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 997,
														"nodeType": "IfStatement",
														"src": "23212:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23236:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23243:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23235:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 973,
															"id": 996,
															"nodeType": "Return",
															"src": "23228:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23268:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 999,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "23274:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1000,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "23267:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 973,
														"id": 1001,
														"nodeType": "Return",
														"src": "23260:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "22613:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "22769:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22784:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "22776:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22795:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "22787:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22775:22:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "22848:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22848:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "22854:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22847:15:0"
									},
									"scope": 1211,
									"src": "22760:535:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "23559:119:0",
										"statements": [
											{
												"id": 1030,
												"nodeType": "UncheckedBlock",
												"src": "23570:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "23599:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23604:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23599:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1023,
														"nodeType": "IfStatement",
														"src": "23595:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23615:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23622:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1021,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23614:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1015,
															"id": 1022,
															"nodeType": "Return",
															"src": "23607:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23647:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1025,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "23653:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1026,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "23657:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23653:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1028,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "23646:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1015,
														"id": 1029,
														"nodeType": "Return",
														"src": "23639:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "23303:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "23460:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23475:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "23467:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "23478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23466:22:0"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "23539:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1011,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "23545:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23538:15:0"
									},
									"scope": 1211,
									"src": "23451:227:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "23952:119:0",
										"statements": [
											{
												"id": 1058,
												"nodeType": "UncheckedBlock",
												"src": "23963:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1044,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "23992:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23997:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23992:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1051,
														"nodeType": "IfStatement",
														"src": "23988:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24008:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24015:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24007:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1043,
															"id": 1050,
															"nodeType": "Return",
															"src": "24000:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24040:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "24046:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1054,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "24050:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "24046:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1056,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "24039:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1043,
														"id": 1057,
														"nodeType": "Return",
														"src": "24032:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "23686:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "23853:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "23860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23879:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "23871:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23859:22:0"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "23932:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "23938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23931:15:0"
									},
									"scope": 1211,
									"src": "23844:227:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "24385:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1070,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "24403:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1071,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "24407:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24403:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1073,
												"nodeType": "Return",
												"src": "24396:12:0"
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "24079:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "24327:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24339:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "24331:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24350:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "24342:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24330:22:0"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "24376:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24375:9:0"
									},
									"scope": 1211,
									"src": "24318:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "24766:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1085,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "24784:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1086,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "24788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24784:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1088,
												"nodeType": "Return",
												"src": "24777:12:0"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "24424:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "24708:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24720:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "24712:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24731:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "24723:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24711:22:0"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "24757:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24756:9:0"
									},
									"scope": 1211,
									"src": "24699:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "25123:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1100,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "25141:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "25145:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25141:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1103,
												"nodeType": "Return",
												"src": "25134:12:0"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "24805:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "25065:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25077:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "25069:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25088:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "25080:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25068:22:0"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "25114:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25113:9:0"
									},
									"scope": 1211,
									"src": "25056:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "25522:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1115,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "25540:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1116,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "25544:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25540:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1114,
												"id": 1118,
												"nodeType": "Return",
												"src": "25533:12:0"
											}
										]
									},
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "25162:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "25464:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25476:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "25468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "25479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25467:22:0"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "25513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25512:9:0"
									},
									"scope": 1211,
									"src": "25455:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "26087:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1130,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "26105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1131,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "26109:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26105:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1133,
												"nodeType": "Return",
												"src": "26098:12:0"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "25561:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "26029:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "26041:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "26033:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "26052:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "26044:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26032:22:0"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "26078:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26077:9:0"
									},
									"scope": 1211,
									"src": "26020:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "26726:111:0",
										"statements": [
											{
												"id": 1158,
												"nodeType": "UncheckedBlock",
												"src": "26737:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1148,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "26770:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1149,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1138,
																		"src": "26775:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26770:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1151,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "26778:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1147,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "26762:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26762:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1153,
														"nodeType": "ExpressionStatement",
														"src": "26762:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1154,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "26813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1155,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "26817:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26813:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1146,
														"id": 1157,
														"nodeType": "Return",
														"src": "26806:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "26126:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "26606:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "26628:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "26620:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "26648:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "26640:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "26674:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "26660:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26660:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26609:84:0"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "26717:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26716:9:0"
									},
									"scope": 1211,
									"src": "26597:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "27464:110:0",
										"statements": [
											{
												"id": 1183,
												"nodeType": "UncheckedBlock",
												"src": "27475:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1173,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "27508:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27512:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "27508:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1176,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "27515:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1172,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "27500:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27500:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1178,
														"nodeType": "ExpressionStatement",
														"src": "27500:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1179,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "27550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1180,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "27554:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1171,
														"id": 1182,
														"nodeType": "Return",
														"src": "27543:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "26845:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "27344:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "27366:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "27358:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "27386:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "27378:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "27412:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "27398:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27398:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27347:84:0"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "27455:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27454:9:0"
									},
									"scope": 1211,
									"src": "27335:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "28366:110:0",
										"statements": [
											{
												"id": 1208,
												"nodeType": "UncheckedBlock",
												"src": "28377:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1198,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "28410:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28414:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "28410:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1201,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "28417:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1197,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "28402:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28402:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1203,
														"nodeType": "ExpressionStatement",
														"src": "28402:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1204,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "28452:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1205,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "28456:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28452:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1196,
														"id": 1207,
														"nodeType": "Return",
														"src": "28445:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "27582:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "28246:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "28268:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "28260:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "28288:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "28280:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "28314:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "28300:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28249:84:0"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "28357:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28356:9:0"
									},
									"scope": 1211,
									"src": "28237:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1632,
							"src": "21808:6671:0",
							"usedErrors": []
						},
						{
							"id": 1212,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "28525:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1213,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 814,
										"src": "28585:7:0"
									},
									"id": 1214,
									"nodeType": "InheritanceSpecifier",
									"src": "28585:7:0"
								}
							],
							"canonicalName": "smartContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1631,
							"linearizedBaseContracts": [
								1631,
								814,
								121
							],
							"name": "smartContract",
							"nameLocation": "28568:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1217,
									"libraryName": {
										"id": 1215,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1211,
										"src": "28606:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28600:27:0",
									"typeName": {
										"id": 1216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28619:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "28f661e3",
									"id": 1219,
									"mutability": "mutable",
									"name": "AdminAddress",
									"nameLocation": "28648:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "28633:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1218,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28633:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a77b2e37",
									"id": 1222,
									"mutability": "mutable",
									"name": "Coin",
									"nameLocation": "28680:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "28667:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Token_$900",
										"typeString": "contract Token"
									},
									"typeName": {
										"id": 1221,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1220,
											"name": "Token",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 900,
											"src": "28667:5:0"
										},
										"referencedDeclaration": 900,
										"src": "28667:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Token_$900",
											"typeString": "contract Token"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1224,
									"mutability": "mutable",
									"name": "investerID",
									"nameLocation": "28699:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "28691:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1223,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28691:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 1226,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "28728:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "28716:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1225,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "28716:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8637856d",
									"id": 1233,
									"mutability": "mutable",
									"name": "buyInfo",
									"nameLocation": "28808:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "28748:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo))"
									},
									"typeName": {
										"id": 1232,
										"keyType": {
											"id": 1227,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28756:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28748:52:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo))"
										},
										"valueType": {
											"id": 1231,
											"keyType": {
												"id": 1228,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28775:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "28767:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$",
												"typeString": "mapping(uint256 => struct smartContract.purchaseInfo)"
											},
											"valueType": {
												"id": 1230,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1229,
													"name": "purchaseInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1265,
													"src": "28786:12:0"
												},
												"referencedDeclaration": 1265,
												"src": "28786:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_purchaseInfo_$1265_storage_ptr",
													"typeString": "struct smartContract.purchaseInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1238,
									"mutability": "mutable",
									"name": "getIDByAddress",
									"nameLocation": "28852:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "28822:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1237,
										"keyType": {
											"id": 1234,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28830:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28822:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 1235,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28841:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1236,
											"nodeType": "ArrayTypeName",
											"src": "28841:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ee238506",
									"id": 1242,
									"mutability": "mutable",
									"name": "burningAmount",
									"nameLocation": "28908:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "28873:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1241,
										"keyType": {
											"id": 1239,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28881:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "28873:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1240,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28892:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a84374b",
									"id": 1246,
									"mutability": "mutable",
									"name": "amountAfterBurning",
									"nameLocation": "28963:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "28928:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1245,
										"keyType": {
											"id": 1243,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28936:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "28928:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1244,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28947:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d09bf0e4",
									"id": 1250,
									"mutability": "mutable",
									"name": "ownerSurplusToAdmin",
									"nameLocation": "29023:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "28988:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1249,
										"keyType": {
											"id": 1247,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28996:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "28988:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1248,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "29007:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "smartContract.purchaseInfo",
									"id": 1265,
									"members": [
										{
											"constant": false,
											"id": 1252,
											"mutability": "mutable",
											"name": "ID",
											"nameLocation": "29090:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 1265,
											"src": "29082:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1251,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29082:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1254,
											"mutability": "mutable",
											"name": "buyTime",
											"nameLocation": "29111:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 1265,
											"src": "29103:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1253,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29103:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1256,
											"mutability": "mutable",
											"name": "purchaseToken",
											"nameLocation": "29137:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 1265,
											"src": "29129:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1255,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29129:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1258,
											"mutability": "mutable",
											"name": "burnToken",
											"nameLocation": "29169:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 1265,
											"src": "29161:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1257,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29161:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1260,
											"mutability": "mutable",
											"name": "userGets",
											"nameLocation": "29197:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1265,
											"src": "29189:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1259,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29189:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1262,
											"mutability": "mutable",
											"name": "ownerSurplus",
											"nameLocation": "29224:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1265,
											"src": "29216:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1261,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29216:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1264,
											"mutability": "mutable",
											"name": "BNBchargedByAdmin",
											"nameLocation": "29255:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 1265,
											"src": "29247:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1263,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29247:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "purchaseInfo",
									"nameLocation": "29058:12:0",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "29051:229:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "29309:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1268,
																"name": "AdminAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "29328:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1269,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "29344:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29344:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29328:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a2063616c6c6572206973206e6f74207468652041646d696e",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29358:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33def4ba61263e52f5572d2a991afa2a911f55e0da50566d766f5402d9ca23c9",
																"typeString": "literal_string \"Error: caller is not the Admin\""
															},
															"value": "Error: caller is not the Admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33def4ba61263e52f5572d2a991afa2a911f55e0da50566d766f5402d9ca23c9",
																"typeString": "literal_string \"Error: caller is not the Admin\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29320:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29320:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "29320:71:0"
											},
											{
												"id": 1275,
												"nodeType": "PlaceholderStatement",
												"src": "29402:1:0"
											}
										]
									},
									"id": 1277,
									"name": "onlyAdmin",
									"nameLocation": "29297:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29306:2:0"
									},
									"src": "29288:123:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "200e42c44f4b61e64b8298dd340205f3d4fd26f4018958219ac19fa737a4bc93",
									"id": 1285,
									"name": "buyTokenDetailsAddresses",
									"nameLocation": "29425:24:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "29468:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "29460:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": false,
												"mutability": "mutable",
												"name": "AdminAddress",
												"nameLocation": "29491:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "29483:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "29522:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "29514:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29449:85:0"
									},
									"src": "29419:116:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ea58cb92b8b20e95b17ad470f6f42aeca8d949d80c763c66664d879df9f65ba7",
									"id": 1293,
									"name": "buyTokenDetails",
									"nameLocation": "29549:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "29575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": false,
												"mutability": "mutable",
												"name": "burningAmount",
												"nameLocation": "29608:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "29600:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountAfterBurning",
												"nameLocation": "29640:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "29632:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29564:101:0"
									},
									"src": "29543:123:0"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "29797:238:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1306,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "29816:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29831:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "29816:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920496e697469616c697a6564",
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29837:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8",
																"typeString": "literal_string \"Already Initialized\""
															},
															"value": "Already Initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50310c88f859e9d046552d0be86f16003ea8f26e3891e716c19fbdbf56bba3e8",
																"typeString": "literal_string \"Already Initialized\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29808:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "29808:51:0"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1312,
														"name": "Coin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "29870:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Token_$900",
															"typeString": "contract Token"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1314,
																"name": "_Coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "29883:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Token_$900",
																	"typeString": "contract Token"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Token_$900",
																	"typeString": "contract Token"
																}
															],
															"id": 1313,
															"name": "Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "29877:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Token_$900_$",
																"typeString": "type(contract Token)"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29877:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Token_$900",
															"typeString": "contract Token"
														}
													},
													"src": "29870:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Token_$900",
														"typeString": "contract Token"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "29870:19:0"
											},
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1318,
														"name": "AdminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "29900:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1321,
																"name": "_adminAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "29923:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1319,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29915:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29915:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29900:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "29900:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1328,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "29967:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29967:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1330,
															"name": "_adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "29976:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "29991:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1325,
															"name": "Coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "29948:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Token_$900",
																"typeString": "contract Token"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 873,
														"src": "29948:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29948:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "29948:50:0"
											},
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1334,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "30009:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30023:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "30009:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "30009:18:0"
											}
										]
									},
									"functionSelector": "1794bb3c",
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1302,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 756,
												"src": "29787:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29787:9:0"
										}
									],
									"name": "initialize",
									"nameLocation": "29683:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "_Coin",
												"nameLocation": "29710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "29704:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Token_$900",
													"typeString": "contract Token"
												},
												"typeName": {
													"id": 1295,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1294,
														"name": "Token",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 900,
														"src": "29704:5:0"
													},
													"referencedDeclaration": 900,
													"src": "29704:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Token_$900",
														"typeString": "contract Token"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "_adminAddress",
												"nameLocation": "29734:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "29726:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "29758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29693:86:0"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29797:0:0"
									},
									"scope": 1631,
									"src": "29674:361:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "30101:40:0",
										"statements": [
											{
												"expression": {
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1346,
														"name": "AdminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "30112:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1347,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "30127:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30112:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "30112:21:0"
											}
										]
									},
									"functionSelector": "2c1e816d",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1343,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 756,
												"src": "30091:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30091:9:0"
										}
									],
									"name": "setAdminAddress",
									"nameLocation": "30052:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "30076:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "30068:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30067:16:0"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30101:0:0"
									},
									"scope": 1631,
									"src": "30043:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "30205:36:0",
										"statements": [
											{
												"expression": {
													"id": 1356,
													"name": "investerID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1224,
													"src": "30223:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1355,
												"id": 1357,
												"nodeType": "Return",
												"src": "30216:17:0"
											}
										]
									},
									"functionSelector": "af0afec9",
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalInvesters",
									"nameLocation": "30158:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30172:2:0"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "30196:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30195:9:0"
									},
									"scope": 1631,
									"src": "30149:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "30324:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1367,
														"name": "getIDByAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "30342:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1369,
													"indexExpression": {
														"id": 1368,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "30357:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30342:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1370,
												"nodeType": "Return",
												"src": "30335:27:0"
											}
										]
									},
									"functionSelector": "5f4fd1f7",
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIdsOfUser",
									"nameLocation": "30258:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30279:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "30271:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30270:14:0"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "30306:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30306:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "30306:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30305:18:0"
									},
									"scope": 1631,
									"src": "30249:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "30419:955:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1380,
																		"name": "AdminAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "30465:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1378,
																		"name": "Coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "30452:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Token_$900",
																			"typeString": "contract Token"
																		}
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 857,
																	"src": "30452:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30452:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1382,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "30481:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30452:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a2041646d696e20646f6573206e6f74206861766520656e6f7567682062616c616e6365",
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30502:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0",
																"typeString": "literal_string \"Error: Admin does not have enough balance\""
															},
															"value": "Error: Admin does not have enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0db2d6d6270bf2e0a7a8cdc37115bc753df803e37f61e777847d354837445e0",
																"typeString": "literal_string \"Error: Admin does not have enough balance\""
															}
														],
														"id": 1377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30430:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "30430:126:0"
											},
											{
												"id": 1390,
												"nodeType": "UncheckedBlock",
												"src": "30567:49:0",
												"statements": [
													{
														"expression": {
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "30592:12:0",
															"subExpression": {
																"id": 1387,
																"name": "investerID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "30592:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1389,
														"nodeType": "ExpressionStatement",
														"src": "30592:12:0"
													}
												]
											},
											{
												"assignments": [
													1392
												],
												"declarations": [
													{
														"constant": false,
														"id": 1392,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "30634:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "30626:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1394,
												"initialValue": {
													"id": 1393,
													"name": "investerID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1224,
													"src": "30639:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30626:23:0"
											},
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1395,
															"name": "burningAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "30660:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1397,
														"indexExpression": {
															"id": 1396,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "30674:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30660:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "31",
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30681:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1399,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "30685:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30681:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1401,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "30680:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30695:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "30680:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30660:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "30660:38:0"
											},
											{
												"expression": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1406,
															"name": "amountAfterBurning",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "30709:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1408,
														"indexExpression": {
															"id": 1407,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "30728:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30709:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1411,
																	"name": "burningAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "30745:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1413,
																"indexExpression": {
																	"id": 1412,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "30759:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30745:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1409,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "30734:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1090,
															"src": "30734:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30734:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30709:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "30709:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1420,
															"name": "AdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "30793:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1421,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30807:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30807:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1423,
																"name": "amountAfterBurning",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "30819:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1425,
															"indexExpression": {
																"id": 1424,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "30838:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30819:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1417,
															"name": "Coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "30774:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Token_$900",
																"typeString": "contract Token"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 873,
														"src": "30774:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30774:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "30774:68:0"
											},
											{
												"expression": {
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1428,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "30855:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1432,
																"indexExpression": {
																	"expression": {
																		"id": 1429,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "30863:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "30863:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30855:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1433,
															"indexExpression": {
																"id": 1431,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "30875:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30855:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1265_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1252,
														"src": "30855:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1435,
														"name": "investerID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "30884:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30855:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "30855:39:0"
											},
											{
												"expression": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1438,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "30905:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1442,
																"indexExpression": {
																	"expression": {
																		"id": 1439,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "30913:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "30913:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30905:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1443,
															"indexExpression": {
																"id": 1441,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "30925:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30905:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1265_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "buyTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1254,
														"src": "30905:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1445,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30939:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "30939:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30905:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "30905:49:0"
											},
											{
												"expression": {
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1449,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "30965:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1453,
																"indexExpression": {
																	"expression": {
																		"id": 1450,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "30973:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "30973:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30965:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1454,
															"indexExpression": {
																"id": 1452,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "30985:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30965:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1265_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "purchaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1256,
														"src": "30965:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1456,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "31005:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30965:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "30965:46:0"
											},
											{
												"expression": {
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1459,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "31022:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1463,
																"indexExpression": {
																	"expression": {
																		"id": 1460,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "31030:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "31030:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31022:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1464,
															"indexExpression": {
																"id": 1462,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "31042:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31022:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1265_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burnToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1258,
														"src": "31022:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1466,
															"name": "burningAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "31058:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1468,
														"indexExpression": {
															"id": 1467,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "31072:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31058:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31022:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "31022:53:0"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1471,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "31086:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1475,
																"indexExpression": {
																	"expression": {
																		"id": 1472,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "31094:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "31094:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31086:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1476,
															"indexExpression": {
																"id": 1474,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "31106:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31086:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1265_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "userGets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1260,
														"src": "31086:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1478,
															"name": "amountAfterBurning",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "31121:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1480,
														"indexExpression": {
															"id": 1479,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "31140:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31121:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31086:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "31086:57:0"
											},
											{
												"expression": {
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1483,
															"name": "ownerSurplusToAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "31154:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1485,
														"indexExpression": {
															"id": 1484,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "31174:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31154:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31207:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1486,
																	"name": "amountAfterBurning",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "31180:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1488,
																"indexExpression": {
																	"id": 1487,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "31199:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31180:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1120,
															"src": "31180:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31180:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31154:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "31154:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31250:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31250:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "AdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "31262:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1498,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "31276:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31276:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1494,
														"name": "buyTokenDetailsAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "31225:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31225:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "EmitStatement",
												"src": "31220:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "31316:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1504,
																"name": "burningAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "31324:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1506,
															"indexExpression": {
																"id": 1505,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "31338:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31324:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1507,
																"name": "amountAfterBurning",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "31343:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1509,
															"indexExpression": {
																"id": 1508,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "31362:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31343:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1502,
														"name": "buyTokenDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "31300:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31300:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "EmitStatement",
												"src": "31295:71:0"
											}
										]
									},
									"functionSelector": "2d296bf1",
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "30387:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30404:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "30396:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30395:16:0"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30419:0:0"
									},
									"scope": 1631,
									"src": "30378:996:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "31449:765:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1521,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31468:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31468:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1523,
																"name": "AdminAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "31482:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31468:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792041646d696e2063616e2053776170",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31496:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a83764174c827403df7000bbb07579f7f3c17a5b004ab66455a8f2b7ccea5ac",
																"typeString": "literal_string \"Only Admin can Swap\""
															},
															"value": "Only Admin can Swap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a83764174c827403df7000bbb07579f7f3c17a5b004ab66455a8f2b7ccea5ac",
																"typeString": "literal_string \"Only Admin can Swap\""
															}
														],
														"id": 1520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31460:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "31460:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1529,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "31551:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1530,
																			"name": "buyInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "31557:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																			}
																		},
																		"id": 1532,
																		"indexExpression": {
																			"id": 1531,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "31565:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "31557:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$",
																			"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																		}
																	},
																	"id": 1534,
																	"indexExpression": {
																		"id": 1533,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "31571:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31557:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_purchaseInfo_$1265_storage",
																		"typeString": "struct smartContract.purchaseInfo storage ref"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ID",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1252,
																"src": "31557:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31551:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a204e6f7420612076616c6964204944206f7220506c656173652062757920736f6d6520746f6b656e",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31592:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e337f72354e030c1ede5b0b51321b9727668b85fa6b6511b472b1588800c131",
																"typeString": "literal_string \"Error: Not a valid ID or Please buy some token\""
															},
															"value": "Error: Not a valid ID or Please buy some token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e337f72354e030c1ede5b0b51321b9727668b85fa6b6511b472b1588800c131",
																"typeString": "literal_string \"Error: Not a valid ID or Please buy some token\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31529:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31529:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "31529:122:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1543,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 742,
																			"src": "31697:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31697:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1541,
																		"name": "Coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "31684:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Token_$900",
																			"typeString": "contract Token"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 857,
																	"src": "31684:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31684:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"baseExpression": {
																	"id": 1546,
																	"name": "ownerSurplusToAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "31708:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1548,
																"indexExpression": {
																	"id": 1547,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "31728:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31708:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31684:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a204f776e657220646f6573206e6f74206861766520656e6f7567682062616c616e6365",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31746:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098",
																"typeString": "literal_string \"Error: Owner does not have enough balance\""
															},
															"value": "Error: Owner does not have enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b2fe8e7beb63addbbe94f06500a735848083cae275f695e7b9f46aa4411af098",
																"typeString": "literal_string \"Error: Owner does not have enough balance\""
															}
														],
														"id": 1540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31662:138:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "31662:138:0"
											},
											{
												"expression": {
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1553,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "31811:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1557,
																"indexExpression": {
																	"expression": {
																		"id": 1554,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "31819:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "31819:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31811:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1558,
															"indexExpression": {
																"id": 1556,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "31831:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31811:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1265_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ownerSurplus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1262,
														"src": "31811:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1560,
															"name": "ownerSurplusToAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "31850:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1562,
														"indexExpression": {
															"id": 1561,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "31870:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31850:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31811:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "31811:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1568,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "31903:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31903:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1570,
															"name": "AdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "31912:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1571,
																"name": "ownerSurplusToAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "31926:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1573,
															"indexExpression": {
																"id": 1572,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "31946:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31926:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1565,
															"name": "Coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "31884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Token_$900",
																"typeString": "contract Token"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 873,
														"src": "31884:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31884:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "31884:66:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1576,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31961:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "31961:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "31303030303030303030",
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32008:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1000000000"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																}
															],
															"expression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31975:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1580,
																				"name": "ownerSurplusToAdmin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1250,
																				"src": "31979:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1582,
																			"indexExpression": {
																				"id": 1581,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1515,
																				"src": "31999:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "31979:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31975:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1584,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "31974:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1120,
															"src": "31974:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31974:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31961:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "31961:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1596,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32056:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "32056:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1592,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "32038:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32038:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32030:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32030:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32030:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "32030:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32030:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "32030:36:0"
											},
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1600,
																	"name": "buyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "32077:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct smartContract.purchaseInfo storage ref))"
																	}
																},
																"id": 1604,
																"indexExpression": {
																	"expression": {
																		"id": 1601,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32085:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32085:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32077:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_purchaseInfo_$1265_storage_$",
																	"typeString": "mapping(uint256 => struct smartContract.purchaseInfo storage ref)"
																}
															},
															"id": 1605,
															"indexExpression": {
																"id": 1603,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "32097:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32077:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_purchaseInfo_$1265_storage",
																"typeString": "struct smartContract.purchaseInfo storage ref"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "BNBchargedByAdmin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1264,
														"src": "32077:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1607,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "32121:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "32121:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32077:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "32077:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1612,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32159:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32159:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1614,
																"name": "ownerSurplusToAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "32171:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1616,
															"indexExpression": {
																"id": 1615,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "32191:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32171:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1617,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32196:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "32196:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1611,
														"name": "swapTokenBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "32146:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32146:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "EmitStatement",
												"src": "32141:65:0"
											}
										]
									},
									"functionSelector": "23660bd5",
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenWithBNB",
									"nameLocation": "31391:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "31416:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "31408:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "31428:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "31420:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31407:26:0"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31449:0:0"
									},
									"scope": 1631,
									"src": "31382:832:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ef4025816e2adaebc6e491a322497e5d2067b2f3aa8a2f9a73bda13ec867f2bf",
									"id": 1630,
									"name": "swapTokenBNB",
									"nameLocation": "32228:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "32249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "32241:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"indexed": false,
												"mutability": "mutable",
												"name": "ownerInitiative",
												"nameLocation": "32263:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "32255:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"indexed": false,
												"mutability": "mutable",
												"name": "BNB",
												"nameLocation": "32288:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "32280:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32240:52:0"
									},
									"src": "32222:71:0"
								}
							],
							"scope": 1632,
							"src": "28559:3737:0",
							"usedErrors": []
						}
					],
					"src": "151:32147:0"
				},
				"id": 0
			}
		}
	}
}